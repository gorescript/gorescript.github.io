/*! gorescript / http://timeinvariant.github.io/gorescript */

/*! three.js / threejs.org/license */
/*! tween.js - http://github.com/sole/tween.js */

var GS=GS||{};GS.BuildOverride=!0;var GS=GS||{};GS.inherit=function(a,b){var c=Object.create(a.prototype);return Object.getOwnPropertyNames(b).forEach(function(a){var d=Object.getOwnPropertyDescriptor(b,a);void 0!==d.get?c.__defineGetter__(a,d.get):c[a]=b[a],void 0!==d.set&&c.__defineSetter__(a,d.set)}),c},GS.pushArray=function(a,b){b.forEach(function(a){this.push(a)},a)},GS.msToFrames=function(a){return Math.round(a/16.66)},GS.pad=function(a,b,c){return c=c||"0",a+="",a.length>=b?a:new Array(b-a.length+1).join(c)+a},GS.logOnce=function(a,b){GS.logOnce[a.toString()]!==!0&&(GS.logOnce[a.toString()]=!0,console.log(b))},GS.isFirefox="undefined"!=typeof InstallTrigger,GS.isIFrame=function(){try{return window.self!==window.top}catch(a){return!0}}(),GS.Base=function(){this.clearColor=0,this.antialias=!0,this.cameraFov=90,this.cameraNear=.1,this.cameraFar=1e3,this.timeStep=.01666,this.fpsCounter={updateRate:0,frameRate:0,updates:0,frames:0,currentTime:this.getCurrentTime()},this.requestAnimationFrameId=null},GS.Base.prototype={constructor:GS.Base,init:function(){var a=this;$(document).on("contextmenu",function(){return!1}),this.renderer=new THREE.WebGLRenderer({antialias:this.antialias}),this.renderer.setClearColor(this.clearColor,1),this.renderer.setSize(window.innerWidth,window.innerHeight),this.renderer.domElement.id="game-canvas",this.camera=new THREE.PerspectiveCamera(this.cameraFov,window.innerWidth/window.innerHeight,this.cameraNear,this.cameraFar),this.scene=new THREE.Scene,window.addEventListener("resize",function(){a.onResize()},!1),this.onResize(),document.body.appendChild(this.renderer.domElement),this.load()},load:function(){null!==this.requestAnimationFrameId&&cancelAnimationFrame(this.requestAnimationFrameId),this.currentTime=this.getCurrentTime(),this.accumulator=0,this.gameLoop()},update:function(){},draw:function(){this.renderer.render(this.scene,this.camera)},gameLoop:function(){var a=this,b=this.getCurrentTime(),c=(b-this.currentTime)/1e3;for(c>.33&&(c=.33),this.currentTime=b,this.accumulator+=c;this.accumulator>=this.timeStep;)this.update(),this.fpsCounter.updates++,this.accumulator-=this.timeStep;this.draw(),this.fpsCounter.frames++,b-this.fpsCounter.currentTime>=1e3&&(this.fpsCounter.updateRate=this.fpsCounter.updates,this.fpsCounter.frameRate=this.fpsCounter.frames,this.fpsCounter.updates=0,this.fpsCounter.frames=0,this.fpsCounter.currentTime=b,GS.DebugUI.trackNumericValue("fps",this.fpsCounter.frameRate)),this.requestAnimationFrameId=requestAnimationFrame(function(){a.gameLoop()})},onResize:function(){this.camera.aspect=window.innerWidth/window.innerHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(window.innerWidth,window.innerHeight)},getCurrentTime:function(){return void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now()},set showFPS(a){GS.DebugUI.setStaticLineVisibility("fps",a)},get showFPS(){return GS.DebugUI.getStaticLineVisibility("fps")}},GS.Canvas2d=function(a){this.canvasId="canvas2d",this.hideOnStart=void 0!==a?a:!1,this.minWidth=1280,this.minHeight=720,this.alpha=1,this.redrawOnResize=!0},GS.Canvas2d.prototype={constructor:GS.Canvas2d,init:function(){var a=this,b=document.createElement("canvas");b.width=window.innerWidth,b.height=window.innerHeight,b.style.backgroundColor="rgba(0, 0, 0, "+this.alpha+")",b.id=this.canvasId,this.screenCanvas=b,this.hideOnStart&&this.hide(),document.body.appendChild(this.screenCanvas);var c=b.getContext("2d");c.globalCompositeOperation="source-over",c.save(),this.screenCtx=c;var d=document.createElement("canvas");d.width=window.innerWidth,d.height=window.innerHeight,d.style.backgroundColor="rgba(0, 0, 0, 1)",this.bufferCanvas=d;var e=d.getContext("2d");e.globalCompositeOperation="source-over",e.save(),this.bufferCtx=e,$(window).on("resize."+this.canvasId,function(){a.onResize()}),this.onResize()},show:function(){this.screenCanvas.style.display=""},hide:function(){this.screenCanvas.style.display="none"},clear:function(){this.bufferCtx.clearRect(0,0,this.bufferCanvas.width,this.bufferCanvas.height)},flip:function(){this.screenCtx.clearRect(0,0,this.screenCanvas.width,this.screenCanvas.height),this.screenCtx.drawImage(this.bufferCanvas,0,0)},line:function(a,b,c,d){c=void 0!==c?c:"#fff",d=d||3,this.bufferCtx.save(),this.bufferCtx.strokeStyle=c,this.bufferCtx.lineWidth=d,this.bufferCtx.beginPath(),this.bufferCtx.moveTo(a.x,a.y),this.bufferCtx.lineTo(b.x,b.y),this.bufferCtx.closePath(),this.bufferCtx.stroke(),this.bufferCtx.restore()},box:function(a,b,c,d){c=void 0!==c?c:"#fff",d=d||3,this.bufferCtx.save(),this.bufferCtx.strokeStyle=c,this.bufferCtx.lineWidth=d,this.bufferCtx.beginPath(),this.bufferCtx.moveTo(a.x,a.y),this.bufferCtx.lineTo(b.x,a.y),this.bufferCtx.lineTo(b.x,b.y),this.bufferCtx.lineTo(a.x,b.y),this.bufferCtx.closePath(),this.bufferCtx.stroke(),this.bufferCtx.restore()},boxFill:function(a,b,c){c=void 0!==c?c:"#fff";var d=Math.min(a.x,b.x),e=Math.min(a.y,b.y),f=Math.max(a.x,b.x),g=Math.max(a.y,b.y),h=f-d,i=g-e;this.bufferCtx.save(),this.bufferCtx.fillStyle=c,this.bufferCtx.fillRect(d,e,h,i),this.bufferCtx.restore()},_roundedBox:function(a,b,c,d,e,f){e=void 0!==e?e:"#fff",f=f||3;var g=Math.min(a.x,b.x),h=Math.min(a.y,b.y),i=Math.max(a.x,b.x),j=Math.max(a.y,b.y);this.bufferCtx.save(),d?this.bufferCtx.fillStyle=e:(this.bufferCtx.strokeStyle=e,this.bufferCtx.lineWidth=f),this.bufferCtx.beginPath(),this.bufferCtx.moveTo(g,h+c),this.bufferCtx.lineTo(g,j-c),this.bufferCtx.quadraticCurveTo(g,j,g+c,j),this.bufferCtx.lineTo(i-c,j),this.bufferCtx.quadraticCurveTo(i,j,i,j-c),this.bufferCtx.lineTo(i,h+c),this.bufferCtx.quadraticCurveTo(i,h,i-c,h),this.bufferCtx.lineTo(g+c,h),this.bufferCtx.quadraticCurveTo(g,h,g,h+c),this.bufferCtx.closePath(),d?this.bufferCtx.fill():this.bufferCtx.stroke(),this.bufferCtx.restore()},roundedBox:function(a,b,c,d,e){this._roundedBox(a,b,c,!1,d,e)},roundedBoxFill:function(a,b,c,d){this._roundedBox(a,b,c,!0,d)},polygon:function(a,b,c){b=void 0!==b?b:"#fff",c=c||3,this.bufferCtx.save(),this.bufferCtx.strokeStyle=b,this.bufferCtx.lineWidth=c,this.bufferCtx.beginPath(),this.bufferCtx.moveTo(a[0].x,a[0].y);for(var d=1;d<a.length;d++)this.bufferCtx.lineTo(a[d].x,a[d].y);this.bufferCtx.closePath(),this.bufferCtx.stroke(),this.bufferCtx.restore()},polygonFill:function(a,b){b=void 0!==b?b:"#fff",this.bufferCtx.save(),this.bufferCtx.fillStyle=b,this.bufferCtx.beginPath(),this.bufferCtx.moveTo(a[0].x,a[0].y);for(var c=1;c<a.length;c++)this.bufferCtx.lineTo(a[c].x,a[c].y);this.bufferCtx.closePath(),this.bufferCtx.fill(),this.bufferCtx.restore()},circle:function(a,b,c,d){c=void 0!==c?c:"#fff",d=d||3,this.bufferCtx.save(),this.bufferCtx.beginPath(),this.bufferCtx.arc(a.x,a.y,b,0,2*Math.PI),this.bufferCtx.strokeStyle=c,this.bufferCtx.lineWidth=d,this.bufferCtx.stroke(),this.bufferCtx.restore()},circleFill:function(a,b,c){c=void 0!==c?c:"#fff",this.bufferCtx.save(),this.bufferCtx.beginPath(),this.bufferCtx.arc(a.x,a.y,b,0,2*Math.PI),this.bufferCtx.fillStyle=c,this.bufferCtx.fill(),this.bufferCtx.restore()},text:function(a,b,c,d,e,f,g){c=void 0!==c?c:"#fff",d=void 0!==d?d:16,e=e||"top",f=f||"left",g=g||"'Lucida Console', Monaco, monospace",this.bufferCtx.save();var h=GS.isFirefox?4:0;this.bufferCtx.textBaseline=e,this.bufferCtx.textAlign=f,this.bufferCtx.font=d+"px "+g,this.bufferCtx.fillStyle=c,this.bufferCtx.fillText(b,a.x,a.y+h),this.bufferCtx.restore()},drawImage:function(a,b,c){this.bufferCtx.drawImage(b,a.x,a.y,c.x,c.y)},drawImageFromAtlas:function(a,b,c,d){this.bufferCtx.drawImage(b,c.x,c.y,d.x,d.y,a.x,a.y,d.x,d.y)},getTextWidth:function(a,b,c){b=void 0!==b?b:16,c=c||"'Lucida Console', Monaco, monospace",this.bufferCtx.save(),this.bufferCtx.font=b+"px '"+c+"'";var d=this.bufferCtx.measureText(a).width;return this.bufferCtx.restore(),d},onResize:function(){var a;this.redrawOnResize&&(a=this.clone()),this.screenCanvas.width=Math.max(window.innerWidth,this.minWidth),this.screenCanvas.height=Math.max(window.innerHeight,this.minHeight),this.bufferCanvas.width=Math.max(window.innerWidth,this.minWidth),this.bufferCanvas.height=Math.max(window.innerHeight,this.minHeight),$(this.screenCanvas).css("width",window.innerWidth+"px").css("height",window.innerHeight+"px"),this.redrawOnResize&&this.screenCtx.drawImage(a,0,0)},clone:function(){var a=document.createElement("canvas");a.width=this.screenCanvas.width,a.height=this.screenCanvas.height;var b=a.getContext("2d");return b.globalCompositeOperation="source-over",b.save(),b.drawImage(this.screenCanvas,0,0),a},dispose:function(){$(window).off("resize."+this.canvasId),$("#"+this.canvasId).remove()}},GS.Cube={getVertices:function(){var a=[new THREE.Vector3(1,1,-1),new THREE.Vector3(1,1,1),new THREE.Vector3(1,-1,-1),new THREE.Vector3(1,1,1),new THREE.Vector3(1,-1,1),new THREE.Vector3(1,-1,-1),new THREE.Vector3(-1,1,1),new THREE.Vector3(-1,1,-1),new THREE.Vector3(-1,-1,1),new THREE.Vector3(-1,1,-1),new THREE.Vector3(-1,-1,-1),new THREE.Vector3(-1,-1,1),new THREE.Vector3(-1,1,1),new THREE.Vector3(1,1,1),new THREE.Vector3(-1,1,-1),new THREE.Vector3(1,1,1),new THREE.Vector3(1,1,-1),new THREE.Vector3(-1,1,-1),new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,-1,-1),new THREE.Vector3(-1,-1,1),new THREE.Vector3(1,-1,-1),new THREE.Vector3(1,-1,1),new THREE.Vector3(-1,-1,1),new THREE.Vector3(1,1,1),new THREE.Vector3(-1,1,1),new THREE.Vector3(1,-1,1),new THREE.Vector3(-1,1,1),new THREE.Vector3(-1,-1,1),new THREE.Vector3(1,-1,1),new THREE.Vector3(-1,1,-1),new THREE.Vector3(1,1,-1),new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,-1),new THREE.Vector3(1,-1,-1),new THREE.Vector3(-1,-1,-1)];return a}},GS.Detector={run:function(a){var b=document.createElement("canvas");if(void 0===b.getContext)return void this.displayErrorMessage("HTML5 canvas");var c=function(){try{var a=document.createElement("canvas");return!!window.WebGLRenderingContext&&(a.getContext("webgl")||a.getContext("experimental-webgl"))}catch(b){return!1}}();if(!c)return void this.displayErrorMessage("WebGL, or WebGL failed to initialize");var d="undefined"!=typeof AudioContext||"undefined"!=typeof webkitAudioContext;if(!d)return void this.displayErrorMessage("the Web Audio API");var e="pointerLockElement"in document||"mozPointerLockElement"in document||"webkitPointerLockElement"in document;if(!e)return void this.displayErrorMessage("the Pointer Lock API");var f;try{f="localStorage"in window&&null!==window.localStorage}catch(g){f=!1}return f?void a():void this.displayErrorMessage("HTML5 local storage")},displayErrorMessage:function(a){var b=document.createElement("div");b.style.width="450px",b.style.height="150px",b.style.marginLeft="-225px",b.style.marginTop="-75px",b.style.position="absolute",b.style.top="50%",b.style.left="50%",b.style.backgroundColor="#000",b.style.color="#fff",b.style.fontSize="20px",b.style.fontFamily="Arial, Helvetica, sans-serif",b.style.fontWeight="normal",b.style.textAlign="center",b.style.border="1px dashed #fff";var c=document.createElement("span");c.style.display="block",c.style.marginTop="50px",c.innerHTML="Your browser does not support<br/>"+a+".",b.appendChild(c),document.body.appendChild(b)}},function(){THREE.Vector3.prototype.toVector2=function(a){var b=a||new THREE.Vector2;return b.x=this.x,b.y=this.z,b},THREE.Vector3.prototype.toString=function(a){return a=a||0,["[",this.x.toFixed(a),this.y.toFixed(a),this.z.toFixed(a),"]"].join(" ")},THREE.Vector3.prototype.equalsEpsilon=function(a,b){return b=b||1e-4,Math.abs(a.x-this.x)<b&&Math.abs(a.y-this.y)<b&&Math.abs(a.z-this.z)<b},THREE.Vector3.prototype.minCoord=function(){return Math.min(Math.min(this.x,this.y),Math.min(this.y,this.z))},THREE.Vector3.prototype.maxCoord=function(){return Math.max(Math.max(this.x,this.y),Math.max(this.y,this.z))},THREE.Box3.prototype.isIntersectionBoxSwept=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Box3,d=new THREE.Vector3,e=new THREE.Vector3,f=new THREE.Vector3,g=new THREE.Vector3,h=new THREE.Vector3,i=new THREE.Vector3,j=new THREE.Vector3;return function(k,l,m,n,o){if(d.copy(l).sub(k),a.copy(this.min).add(d),b.copy(this.max).add(d),c.setFromPoints([this.min,this.max,a,b]),!c.isIntersectionBox(m))return!1;if(this.isIntersectionBox(m))return o.copy(k),!0;if(c.min.copy(this.min).add(d),c.max.copy(this.max).add(d),c.isIntersectionBox(m))return o.copy(l),!0;i.copy(this.max).sub(this.min),j.copy(m.max).sub(m.min),d.x>0?(e.x=m.min.x-(this.min.x+i.x),f.x=m.min.x+j.x-this.min.x):(e.x=m.min.x+j.x-this.min.x,f.x=m.min.x-(this.min.x+i.x)),d.y>0?(e.y=m.min.y-(this.min.y+i.y),f.y=m.min.y+j.y-this.min.y):(e.y=m.min.y+j.y-this.min.y,f.y=m.min.y-(this.min.y+i.y)),d.z>0?(e.z=m.min.z-(this.min.z+i.z),f.z=m.min.z+j.z-this.min.z):(e.z=m.min.z+j.z-this.min.z,f.z=m.min.z-(this.min.z+i.z)),0===d.x?(g.x=-1/0,h.x=1/0):(g.x=e.x/d.x,h.x=f.x/d.x),0===d.y?(g.y=-1/0,h.y=1/0):(g.y=e.y/d.y,h.y=f.y/d.y),0===d.z?(g.z=-1/0,h.z=1/0):(g.z=e.z/d.z,h.z=f.z/d.z);var p=g.maxCoord(),q=h.minCoord();return p>q||g.x<0&&g.y<0&&g.z<0||g.x>1||g.y>1||g.z>1?!1:(d.multiplyScalar(p),o.copy(k).add(d),!0)}}(),THREE.Ray.prototype.intersectsOrStartsInBox=function(a,b){var c=b||new THREE.Vector3;return a.containsPoint(this.origin)?c.copy(this.origin):this.intersectBox(a,c),c},THREE.Vector2.prototype.toString=function(a){return a=a||0,["[",this.x.toFixed(a),this.y.toFixed(a),"]"].join(" ")},THREE.Vector2.prototype.equalsEpsilon=function(a,b){return b=b||1e-4,Math.abs(a.x-this.x)<b&&Math.abs(a.y-this.y)<b},THREE.Vector2.prototype.minCoord=function(){return Math.min(this.x,this.y)},THREE.Vector2.prototype.maxCoord=function(){return Math.max(this.x,this.y)},THREE.Box2.prototype.isIntersectionBoxSwept=function(){var a=new THREE.Vector2,b=new THREE.Vector2,c=new THREE.Box2,d=new THREE.Vector2,e=new THREE.Vector2,f=new THREE.Vector2,g=new THREE.Vector2,h=new THREE.Vector2,i=new THREE.Vector2,j=new THREE.Vector2;return function(k,l,m,n,o){if(d.copy(l).sub(k),a.copy(this.min).add(d),b.copy(this.max).add(d),c.setFromPoints([this.min,this.max,a,b]),!c.isIntersectionBox(m))return!1;if(this.isIntersectionBox(m))return o.copy(k),!0;if(c.min.copy(this.min).add(d),c.max.copy(this.max).add(d),c.isIntersectionBox(m))return o.copy(l),!0;i.copy(this.max).sub(this.min),j.copy(m.max).sub(m.min),d.x>0?(e.x=m.min.x-(this.min.x+i.x),f.x=m.min.x+j.x-this.min.x):(e.x=m.min.x+j.x-this.min.x,f.x=m.min.x-(this.min.x+i.x)),d.y>0?(e.y=m.min.y-(this.min.y+i.y),f.y=m.min.y+j.y-this.min.y):(e.y=m.min.y+j.y-this.min.y,f.y=m.min.y-(this.min.y+i.y)),0===d.x?(g.x=-1/0,h.x=1/0):(g.x=e.x/d.x,h.x=f.x/d.x),0===d.y?(g.y=-1/0,h.y=1/0):(g.y=e.y/d.y,h.y=f.y/d.y);var p=g.maxCoord(),q=h.minCoord();return p>q||g.x<0&&g.y<0||g.x>1||g.y>1?!1:(d.multiplyScalar(p),o.copy(k).add(d),!0)}}(),THREE.Box2.prototype.isIntersectionLineSwept=function(){var a=new THREE.Vector2,b=new THREE.Vector2,c=new THREE.Vector2,d=new THREE.Vector2,e=new THREE.Vector2,f=new THREE.Vector2,g=new THREE.Vector2,h=new THREE.Vector2;return function(i,j,k){var l={foundCollision:!1,pos:new THREE.Vector2,distance:0,normal:new THREE.Vector2};if(a.copy(j).sub(i),b.copy(this.max).sub(this.min).multiplyScalar(.5),c.copy(this.max).add(this.min).multiplyScalar(.5),GS.MathHelper.vec2Normal(k.start,k.end,d),d.dot(a)>=0)return l;e.copy(k.end).sub(k.start),e.x>0?(f.x=k.start.x,g.x=k.end.x):(f.x=k.end.x,g.x=k.start.x),e.y>0?(f.y=k.start.y,g.y=k.end.y):(f.y=k.end.y,g.y=k.start.y);var m=0,n=1,o=b.x*Math.abs(d.x)+b.y*Math.abs(d.y);h.copy(k.start).sub(c);var p=h.dot(d),q=a.dot(d);if(0>q&&(o*=-1),m=Math.max((p-o)/q,m),n=Math.min((p+o)/q,n),a.x<0){if(this.max.x<f.x)return l;m=Math.max((g.x-this.min.x)/a.x,m),n=Math.min((f.x-this.max.x)/a.x,n)}else if(a.x>0){if(this.min.x>g.x)return l;m=Math.max((f.x-this.max.x)/a.x,m),n=Math.min((g.x-this.min.x)/a.x,n)}else if(f.x>this.max.x||g.x<this.min.x)return l;if(m>n)return l;if(a.y<0){if(this.max.y<f.y)return l;m=Math.max((g.y-this.min.y)/a.y,m),n=Math.min((f.y-this.max.y)/a.y,n)}else if(a.y>0){if(this.min.y>g.y)return l;m=Math.max((f.y-this.max.y)/a.y,m),n=Math.min((g.y-this.min.y)/a.y,n)}else if(f.y>this.max.y||g.y<this.min.y)return l;return m>n?l:(l.foundCollision=!0,l.pos.copy(i).add(a.multiplyScalar(m)),l.distance=a.length()*m,l.normal.copy(d),l)}}(),THREE.Geometry.prototype.merge=function(a,b,c){if(a instanceof THREE.Geometry==!1)return void console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",a);var d,e=this.vertices.length,f=this.vertices,g=a.vertices,h=this.faces,i=a.faces,j=this.faceVertexUvs[0],k=a.faceVertexUvs[0];void 0===c&&(c=0),void 0!==b&&(d=(new THREE.Matrix3).getNormalMatrix(b));for(var l=0,m=g.length;m>l;l++){var n=g[l],o=n.clone();void 0!==b&&o.applyMatrix4(b),f.push(o)}for(l=0,m=i.length;m>l;l++){var p,q,r,s=i[l],t=s.vertexNormals,u=s.vertexColors;p=new THREE.Face3(s.a+e,s.b+e,s.c+e),p.normal.copy(s.normal),void 0!==d&&p.normal.applyMatrix3(d).normalize();for(var v=0,w=t.length;w>v;v++)q=t[v].clone(),void 0!==d&&q.applyMatrix3(d).normalize(),p.vertexNormals.push(q);p.color.copy(s.color),p.emissive=s.emissive.clone();for(var v=0,w=u.length;w>v;v++)r=u[v],p.vertexColors.push(r.clone());p.materialIndex=s.materialIndex+c,h.push(p)}for(l=0,m=k.length;m>l;l++){var x=k[l],y=[];if(void 0!==x){for(var v=0,w=x.length;w>v;v++)y.push(new THREE.Vector2(x[v].x,x[v].y));j.push(y)}}},THREE.BufferGeometry.prototype.fromGeometry=function(a,b){b=b||{vertexColors:THREE.NoColors};var c=a.vertices,d=a.faces,e=a.faceVertexUvs,f=b.vertexColors,g=e[0].length>0,h=3==d[0].vertexNormals.length,i=new Float32Array(3*d.length*3);this.addAttribute("position",new THREE.BufferAttribute(i,3));var j=new Float32Array(3*d.length*3);if(this.addAttribute("normal",new THREE.BufferAttribute(j,3)),f!==THREE.NoColors){var k=new Float32Array(3*d.length*3);this.addAttribute("color",new THREE.BufferAttribute(k,3));var l=new Float32Array(3*d.length*3);this.addAttribute("emissive",new THREE.BufferAttribute(l,3))}if(g===!0){var m=new Float32Array(3*d.length*2);this.addAttribute("uv",new THREE.BufferAttribute(m,2))}for(var n=0,o=0,p=0;n<d.length;n++,o+=6,p+=9){var q=d[n],r=c[q.a],s=c[q.b],t=c[q.c];if(i[p]=r.x,i[p+1]=r.y,i[p+2]=r.z,i[p+3]=s.x,i[p+4]=s.y,i[p+5]=s.z,i[p+6]=t.x,i[p+7]=t.y,i[p+8]=t.z,h===!0){var u=q.vertexNormals[0],v=q.vertexNormals[1],w=q.vertexNormals[2];j[p]=u.x,j[p+1]=u.y,j[p+2]=u.z,j[p+3]=v.x,j[p+4]=v.y,j[p+5]=v.z,j[p+6]=w.x,j[p+7]=w.y,j[p+8]=w.z}else{var x=q.normal;j[p]=x.x,j[p+1]=x.y,j[p+2]=x.z,j[p+3]=x.x,j[p+4]=x.y,j[p+5]=x.z,j[p+6]=x.x,j[p+7]=x.y,j[p+8]=x.z}if(f===THREE.FaceColors){var y=q.color;k[p]=y.r,k[p+1]=y.g,k[p+2]=y.b,k[p+3]=y.r,k[p+4]=y.g,k[p+5]=y.b,k[p+6]=y.r,k[p+7]=y.g,k[p+8]=y.b;var z=q.emissive;l[p]=z.r,l[p+1]=z.g,l[p+2]=z.b,l[p+3]=z.r,l[p+4]=z.g,l[p+5]=z.b,l[p+6]=z.r,l[p+7]=z.g,l[p+8]=z.b}else if(f===THREE.VertexColors){var A=q.vertexColors[0],B=q.vertexColors[1],C=q.vertexColors[2];k[p]=A.r,k[p+1]=A.g,k[p+2]=A.b,k[p+3]=B.r,k[p+4]=B.g,k[p+5]=B.b,k[p+6]=C.r,k[p+7]=C.g,k[p+8]=C.b}if(g===!0){var D=e[0][n][0],E=e[0][n][1],F=e[0][n][2];m[o]=D.x,m[o+1]=D.y,m[o+2]=E.x,m[o+3]=E.y,m[o+4]=F.x,m[o+5]=F.y}}return this.computeBoundingSphere(),this}}(),GS.InputHelper={keyState:[],leftMouseDown:!1,middleMouseDown:!1,rightMouseDown:!1,mouseX:0,mouseY:0,screenRatioX:1,screenRatioY:1,mouseWheelEvents:[],ctrl:!1,shift:!1,alt:!1,pressedKeys:[],keysPressed:!1,init:function(){var a=this;$(document).keydown(function(b){return a.keyState[b.keyCode]=!0,a.ctrl=b.ctrlKey,a.alt=b.altKey,a.shift=b.shiftKey,9==b.keyCode||65==b.keyCode&&b.ctrlKey||90==b.keyCode&&b.ctrlKey||71==b.keyCode&&b.ctrlKey||189==b.keyCode&&b.ctrlKey||187==b.keyCode&&b.ctrlKey||48==b.keyCode&&b.ctrlKey?(b.stopPropagation(),b.preventDefault(),!1):void 0}),$(document).keyup(function(b){a.keyState[b.keyCode]=!1,a.ctrl=b.ctrlKey,a.alt=b.altKey,a.shift=b.shiftKey}),$(document).mousedown(function(b){1==b.which&&(a.leftMouseDown=!0),2==b.which&&(a.middleMouseDown=!0),3==b.which&&(a.rightMouseDown=!0)}),$(document).mouseup(function(b){1==b.which&&(a.leftMouseDown=!1),2==b.which&&(a.middleMouseDown=!1),3==b.which&&(a.rightMouseDown=!1)}),$(document).mousemove(function(b){a.mouseX=b.pageX*a.screenRatioX,a.mouseY=b.pageY*a.screenRatioY}),document.addEventListener("mousewheel",function(b){a.mouseWheelEvents.push(b.wheelDelta)},!1),document.addEventListener("DOMMouseScroll",function(b){a.mouseWheelEvents.push(-1*b.detail)},!1)},isKeyUp:function(a){return!this.keyState[a]},isKeyDown:function(a,b){return b||this.keyState[a]&&(-1==this.pressedKeys.indexOf(a)&&this.pressedKeys.push(a),this.keysPressed=!0),this.keyState[a]},checkPressedKeys:function(){if(this.pressedKeys.length>0){for(var a=0,b=0;b<this.pressedKeys.length;b++){if(!this.isKeyUp(this.pressedKeys[b]))return;a++}a==this.pressedKeys.length&&(this.keysPressed=!1)}}},GS.InputHelper.init(),GS.LineHelper={compare:function(a,b){return a.x==b.x?a.y-b.y:a.x-b.x},slope:function(a){return(a.end.y-a.start.y)/(a.end.x-a.start.x)},intersectionLineSegments:function(){var a=new THREE.Vector2;return function(b,c,d){return d=d||a,this.intersectionLines(b,c,d,!0)}}(),intersectionLines:function(a,b,c,d){var e=a.start.x,f=a.end.x,g=b.start.x,h=b.end.x,i=a.start.y,j=a.end.y,k=b.start.y,l=b.end.y,m=(l-k)*(f-e)-(h-g)*(j-i);if(0===m)return!1;var n=((h-g)*(i-k)-(l-k)*(e-g))/m,o=((f-e)*(i-k)-(j-i)*(e-g))/m;return!d||n>=0&&1>=n&&o>=0&&1>=o?(c.x=e+n*(f-e),c.y=i+n*(j-i),!0):!1},intersectionLineSegmentBox:function(){var a=new THREE.Box2,b={start:new THREE.Vector2,end:new THREE.Vector2},c=new THREE.Vector2;return function(d,e){return a.setFromPoints([d.start,d.end]),e.isIntersectionBox(a)?e.containsPoint(d.start)&&e.containsPoint(d.end)?!0:(b.start.x=e.min.x,b.start.y=e.min.y,b.end.x=e.max.x,b.end.y=e.min.y,this.intersectionLineSegments(d,b,c)?!0:(b.start.x=e.max.x,b.start.y=e.min.y,b.end.x=e.max.x,b.end.y=e.max.y,this.intersectionLineSegments(d,b,c)?!0:(b.start.x=e.max.x,b.start.y=e.max.y,b.end.x=e.min.x,b.end.y=e.max.y,this.intersectionLineSegments(d,b,c)?!0:(b.start.x=e.min.x,b.start.y=e.max.y,b.end.x=e.min.x,b.end.y=e.min.y,this.intersectionLineSegments(d,b,c)?!0:!1)))):!1}}(),lineSegmentsToGraph:function(a,b){function c(a,b){return d.compare(a,b)}for(var d=this,e=new GS.PlanarGraph,f=new THREE.Vector2,g=0;g<a.length;g++){var h=[];h.push(a[g].start.clone()),h.push(a[g].end.clone());for(var i=0;i<a.length;i++)if(g!=i){var j=this.intersectionLineSegments(a[g],a[i],f);j&&h.push(f.clone())}h.sort(c);for(var i=0;i<h.length-1;i++)e.addEdge(h[i],h[i+1])}if(void 0!==b)for(var g=0;g<e.vertices.length;g++){var k=e.vertices[g];k.x=Math.floor(k.x/b)*b,k.y=Math.floor(k.y/b)*b}return e},pointOnLineSegment:function(a,b){var c=this.pointOffsetOnLineSegment(a,b);return-1!=c},pointOffsetOnLineSegment:function(a,b){var c=1e-4,d=(b.y-a.start.y)*(a.end.x-a.start.x)-(b.x-a.start.x)*(a.end.y-a.start.y);if(Math.abs(d)>c)return-1;var e=(b.x-a.start.x)*(a.end.x-a.start.x)+(b.y-a.start.y)*(a.end.y-a.start.y);if(0>e)return-1;var f=(a.end.x-a.start.x)*(a.end.x-a.start.x)+(a.end.y-a.start.y)*(a.end.y-a.start.y);if(e>f)return-1;var g=0!==f?e/f:1;return g},arePointsCollinear:function(a,b,c){return(a.y-b.y)*(a.x-c.x)==(a.y-c.y)*(a.x-b.x)}},GS.MapLayers={Segment:0,Sector:2,Entity:3,Zone:4},GS.SegmentTypes={User:0,InteriorFloor:1,InteriorCeiling:2,Exterior:3,TVScreen:4,Switch:5},GS.MapEntities={M:{name:"medkit",type:"Item"},A:{name:"ammo",type:"Item"},H:{name:"hyper_blaster",type:"Item"},D:{name:"double_shotgun",type:"Item"},N:{name:"nom",type:"Monster",animations:{walk:6,death:4}},E:{name:"eye",type:"Monster",animations:{walk:4,death:4,attack:2}}},GS.MathHelper={clamp:function(a,b,c){return b>a&&(a=b),a>c&&(a=c),a},getConvexHullPoints:function(a){var b=function(a,b,c){return(b.x-a.x)*(c.y-a.y)-(b.y-a.y)*(c.x-a.x)},c=a.length,d=0,e=[];a.sort(function(a,b){return a.x==b.x?a.y-b.y:a.x-b.x});for(var f=0;c>f;f++){for(;d>=2&&b(e[d-2],e[d-1],a[f])<=0;)d--;e[d++]=a[f]}for(var g=d+1,f=c-2;f>=0;f--){for(;d>=g&&b(e[d-2],e[d-1],a[f])<=0;)d--;e[d++]=a[f]}return e.length=d-1,e},pointInTriangle:function(a,b,c,d){var e=this.getTriangleBarycentricCoordinates(a,b,c,d);return e.inTriangle},getTriangleBarycentricCoordinates:function(a,b,c,d){var e=(new THREE.Vector2).subVectors(d,b),f=(new THREE.Vector2).subVectors(c,b),g=(new THREE.Vector2).subVectors(a,b),h=e.dot(e),i=e.dot(f),j=e.dot(g),k=f.dot(f),l=f.dot(g),m=1/(h*k-i*i),n=(k*j-i*l)*m,o=(h*l-i*j)*m,p=n>=0&&o>=0&&1>n+o;return{u:n,v:o,inTriangle:p}},vec2Rotate:function(a,b){var c=Math.sin(Math.PI/180*b),d=Math.cos(Math.PI/180*b),e=a.x*d-a.y*c,f=a.x*c+a.y*d;a.x=e,a.y=f},vec2RotateRadians:function(a,b){var c=Math.sin(b),d=Math.cos(b),e=a.x*d-a.y*c,f=a.x*c+a.y*d;a.x=e,a.y=f},vec2Angle:function(a,b){return-Math.atan2(b.y-a.y,b.x-a.x)*(180/Math.PI)*2},vec2AngleRadians:function(a,b){return 2*-Math.atan2(b.y-a.y,b.x-a.x)},vec2AngleDirected:function(a,b){return Math.atan2(a.y,a.x)-Math.atan2(b.y,b.x)},vec2Normal:function(a,b,c){var d=c||new THREE.Vector2,e=b.x-a.x,f=b.y-a.y;return d.set(f,-e).normalize(),d},vec2PointSide:function(a,b,c){return(b.x-a.x)*(c.y-a.y)-(b.y-a.y)*(c.x-a.x)>0}},GS.SmoothNumber=function(a,b){this.value=a,this.targetValue=a,this.speed=b},GS.SmoothNumber.prototype={setTargetValue:function(a){this.targetValue=a},update:function(){this.value<this.targetValue&&(this.value+=this.speed,this.value>this.targetValue&&(this.value=this.targetValue)),this.value>this.targetValue&&(this.value-=this.speed,this.value<this.targetValue&&(this.value=this.targetValue))}},GS.SmoothVector3=function(a,b,c,d){THREE.Vector3.call(this,a,b,c),this.targetValue=this.clone(),this.speed=void 0!==d?d:.1,this.color=new THREE.Color},GS.SmoothVector3.prototype=GS.inherit(THREE.Vector3,{setTargetValue:function(a){this.targetValue=a.clone()},update:function(){this.updateProperty("x"),this.updateProperty("y"),this.updateProperty("z"),this.updateColor()},updateColor:function(){this.color.r=this.x,this.color.g=this.y,this.color.b=this.z},updateProperty:function(a){this[a]<this.targetValue[a]&&(this[a]+=this.speed,this[a]>this.targetValue[a]&&(this[a]=this.targetValue[a])),this[a]>this.targetValue[a]&&(this[a]-=this.speed,this[a]<this.targetValue[a]&&(this[a]=this.targetValue[a]))}}),GS.PolygonHelper={getPolygonsFromLineSegments:function(a,b){var c=GS.LineHelper.lineSegmentsToGraph(a,b);c.computeShortestPaths(),c.computeMinimumCycleBasis(),c.removeNonCycleEdges();for(var d=c.vertices,e=[],f=c.minimumCycleBasis,g=0;g<f.length;g++){var h=c.cycles[f[g]].elements;e[g]=[];for(var i=0;i<h.length;i++)e[g].push(d[h[i].start])}return{vertices:d,polygons:e,graph:c}},getTriangulatedPolygonsFromLineSegments:function(a,b){for(var c=this.getPolygonsFromLineSegments(a,b),d=0;d<c.polygons.length;d++){var e=c.polygons[d],f=this.vector2ToVertexArray(e);this.areVerticesClockwise(f)&&this.reverseVertices(f),c.polygons[d]={vertices:this.vertexToVector2Array(f),indices:PolyK.Triangulate(f),area:PolyK.GetArea(f)}}return c.polygons.sort(function(a,b){return b.area-a.area}),c},vector2ToVertexArray:function(a){for(var b=[],c=0;c<a.length;c++)b.push(a[c].x),b.push(a[c].y);return b},vertexToVector2Array:function(a){for(var b=[],c=0;c<a.length;c+=2)b.push(new THREE.Vector2(a[c],a[c+1]));return b},reverseVertices:function(a){for(var b=0;b<a.length/2;b+=2){var c=a.length-b-2,d=a[b];a[b]=a[c],a[c]=d;var e=a[b+1];a[b+1]=a[c+1],a[c+1]=e}},areVerticesClockwise:function(a){for(var b=0,c=0;c<a.length-2;c+=2){var d=a[c],e=a[c+1],f=a[c+2],g=a[c+3];b+=(f-d)*(g+e)}var d=a[a.length-2],e=a[a.length-1],f=a[0],g=a[1];return b+=(f-d)*(g+e),b>=0},sectorContainsPoint:function(a,b,c){var d,e=c?a.collisionVertices:a.vertices,f=e.length,g=!1,h=0;for(d=0,h=f-1;f>d;h=d++){var i=e[d],j=e[h];i.y>b.y!=j.y>b.y&&b.x<(j.x-i.x)*(b.y-i.y)/(j.y-i.y)+i.x&&(g=!g)}return g},intersectionSectorBox:function(){var a=new THREE.Box2,b={start:new THREE.Vector2,end:new THREE.Vector2},c=(new THREE.Vector2,[new THREE.Vector2,new THREE.Vector2,new THREE.Vector2,new THREE.Vector2]);return function(d,e){if(a.setFromPoints(d.vertices),!e.isIntersectionBox(a))return!1;if(e.containsBox(a))return!0;c[0].x=e.min.x,c[0].y=e.min.y,c[1].x=e.max.x,c[1].y=e.min.y,c[2].x=e.max.x,c[2].y=e.max.y,c[3].x=e.min.x,c[3].y=e.max.y;for(var f,g,h,i=0;i<d.indices.length;i+=3){f=d.vertices[d.indices[i]],g=d.vertices[d.indices[i+1]],h=d.vertices[d.indices[i+2]];for(var j=0;4>j;j++)if(GS.MathHelper.pointInTriangle(c[j],f,g,h))return!0}for(var i=0;i<d.vertices.length-1;i++)if(b.start.copy(d.vertices[i]),b.end.copy(d.vertices[i+1]),GS.LineHelper.intersectionLineSegmentBox(b,e))return!0;return b.start.copy(d.vertices[d.vertices.length-1]),b.end.copy(d.vertices[0]),GS.LineHelper.intersectionLineSegmentBox(b,e)?!0:!1}}(),retriangulateSectors:function(a){function b(a,b){var c,d,e={edgeIndex:0,offset:0};for(c=0;c<a.vertices.length-1;c++){if(a.vertices[c].equalsEpsilon(b)||a.vertices[c+1].equalsEpsilon(b))return void 0;if(d=GS.LineHelper.pointOffsetOnLineSegment({start:a.vertices[c],end:a.vertices[c+1]},b),-1!=d)return e.edgeIndex=c,e.offset=d,e}return a.vertices[c].equalsEpsilon(b)||a.vertices[0].equalsEpsilon(b)?void 0:(d=GS.LineHelper.pointOffsetOnLineSegment({start:a.vertices[c],end:a.vertices[0]},b),-1!=d?(e.edgeIndex=c,e.offset=d,e):void 0)}function c(a,b){return a.vertex.equalsEpsilon(b.vertex)}function d(a,b){return b.offset-a.offset}function e(a,b,c){for(var d=0;d<a.vertices.length-1;d++)if(a.vertices[d].equalsEpsilon(b)&&a.vertices[d+1].equalsEpsilon(c))return d;return a.vertices[d].equalsEpsilon(b)&&a.vertices[0].equalsEpsilon(c)?d:-1}function f(a,b){var c=e(a,b.edgeStart,b.edgeEnd);if(-1!=c)for(var d=0;d<b.vertices.length;d++)a.vertices.splice(c+1,0,b.vertices[d])}function g(c,d){for(var e=a[c],f=a[d],g=0;g<f.vertices.length;g++){var i=b(e,f.vertices[g]);if(void 0!==i){var j=h[c];j[i.edgeIndex].add({vertex:f.vertices[g],offset:i.offset})}}}for(var h=[],i=0;i<a.length;i++){for(var j=[],k=0;k<a[i].vertices.length;k++)j.push(new GS.Set([],c));h.push(j)}for(var i=0;i<a.length-1;i++)for(var k=i+1;k<a.length;k++)i!=k&&(g(i,k),g(k,i));for(var i=0;i<a.length;i++){for(var l=[],m=a[i].vertices.length,k=0;m>k;k++){var n=h[i][k].elements;if(n.length>0){n.sort(d);for(var o={vertices:[],edgeStart:a[i].vertices[k],edgeEnd:a[i].vertices[k==m-1?0:k+1]},p=0;p<n.length;p++)o.vertices.push(n[p].vertex);l.push(o)}}for(var k=0;k<l.length;k++)f(a[i],l[k]);var q=this.vector2ToVertexArray(a[i].vertices);this.areVerticesClockwise(q)&&this.reverseVertices(q),a[i].vertices=this.vertexToVector2Array(q),a[i].indices=PolyK.Triangulate(q)}},retriangulateSegments:function(a){function b(a,b){return b-a}function c(a,b){return a-b}function d(b,c,d){for(var e=new GS.Set,f=0;f<a.length;f++){var g=a[f];g!==b&&(g.start.equalsEpsilon(c)||g.end.equalsEpsilon(c))&&(g.topY<b.topY&&g.topY>b.bottomY&&e.add(g.topY),g.bottomY<b.topY&&g.bottomY>b.bottomY&&e.add(g.bottomY))}if(e.elements.length>0){e.elements.sort(d);for(var f=0;f<e.elements.length;f++)b.vertices.push(new THREE.Vector3(c.x,e.elements[f],c.y))}return e.elements.length}for(var e=0;e<a.length;e++){var f=a[e];if(f.type!==GS.SegmentTypes.TVScreen&&f.type!==GS.SegmentTypes.Switch){f.indices=[0,1,2],f.vertices=[new THREE.Vector3(f.start.x,f.topY,f.start.y),new THREE.Vector3(f.end.x,f.topY,f.end.y)];var g=d(f,f.end,b);if(g>0)for(var h=0;g>h;h++)f.indices.push(0),f.indices.push(h+2),f.indices.push(h+3);f.vertices.push(new THREE.Vector3(f.end.x,f.bottomY,f.end.y)),f.vertices.push(new THREE.Vector3(f.start.x,f.bottomY,f.start.y));var i=f.vertices.length-2;if(g=d(f,f.start,c),g>0)for(var h=0;g>h;h++)f.indices.push(i),f.indices.push(i+h+1),f.indices.push(i+h+2);f.indices.push(i),f.indices.push(i+g+1),f.indices.push(0),f.bottomRightIndex=i}}},detriangulateSectors:function(a){for(var b=0;b<a.length;b++){for(var c=a[b],d=[c.vertices[0]],e=c.vertices.length,f=1;e>f;f++)e-1>f?GS.LineHelper.arePointsCollinear(c.vertices[f-1],c.vertices[f],c.vertices[f+1])||d.push(c.vertices[f]):d.push(c.vertices[f]);var g=this.vector2ToVertexArray(d);this.areVerticesClockwise(g)&&this.reverseVertices(g),c.collisionVertices=this.vertexToVector2Array(g),c.collisionIndices=PolyK.Triangulate(g)}},getSectorCentroid:function(a){function b(b){return b===a.vertices.length&&(b=0),a.vertices[b]
}for(var c,d,e,f=0,g=0,h=0,i=a.vertices.length,j=0,k=i-1;i>j;k=j++)c=b(j),d=b(k),e=c.x*d.y-d.x*c.y,f+=e,g+=(c.x+d.x)*e,h+=(c.y+d.y)*e;return e=3*f,new THREE.Vector2(g/e,h/e)}},GS.Graph=function(a){this.equalsFunc=a||function(a,b){return a==b},this.vertices=[],this.edges=[]},GS.Graph.prototype={addEdge:function(a,b){this.equalsFunc(a,b)||this.edges.push({start:this.addVertex(a),end:this.addVertex(b)})},removeEdge:function(a,b){function c(a,b){return d.equalsFunc(a.start,b.start)&&d.equalsFunc(a.end,b.end)||d.equalsFunc(a.end,b.start)&&d.equalsFunc(a.start,b.end)}if(!this.equalsFunc(a,b))for(var d=this,e={start:a,end:b},f=this.edges.length-1;f>=0;f--)c(e,this.edges[f])&&this.edges.splice(f,1)},addVertex:function(a){var b=this.vertexExists(a);return b>-1?b:(this.vertices.push(a),this.vertices.length-1)},vertexExists:function(a){for(var b=0;b<this.vertices.length;b++)if(this.equalsFunc(this.vertices[b],a))return b;return-1},computeShortestPaths:function(){for(var a=[],b=0;b<this.vertices.length;b++){a[b]=[];for(var c=0;c<this.vertices.length;c++)a[b].push(1/0)}this.dist=a;for(var d=[],b=0;b<this.vertices.length;b++){d[b]=[];for(var c=0;c<this.vertices.length;c++)d[b].push(null)}this.next=d;for(var b=0;b<this.vertices.length;b++)a[b][b]=0;for(var b=0;b<this.edges.length;b++){var e=this.edges[b];a[e.start][e.end]=1,a[e.end][e.start]=1}this.initNextArray();for(var f=0;f<this.vertices.length;f++)for(var b=0;b<this.vertices.length;b++)for(var c=0;c<this.vertices.length;c++)a[b][f]+a[f][c]<a[b][c]&&(a[b][c]=a[b][f]+a[f][c],d[b][c]=d[f][c])},initNextArray:function(){for(var a=0;a<this.vertices.length;a++)for(var b=0;b<this.vertices.length;b++)this.next[a][b]=a==b||1/0==this.dist[a][b]?0:a},getPath:function(a,b){if(a==b)return[];var c=this.constructPath(a,b);return void 0!==c&&(c.unshift(a),c.push(b)),c},constructPath:function(a,b){if(1/0==this.dist[a][b])return void 0;var c=this.next[a][b];if(c==a)return[];var d=this.constructPath(a,c),e=[c],f=this.constructPath(c,b);if(void 0!==d)for(var a=d.length-1;a>=0;a--)e.unshift(d[a]);if(void 0!==f)for(var a=0;a<f.length;a++)e.push(f[a]);return e},computeVertexNeighborSets:function(){for(var a=[],b=0;b<this.vertices.length;b++){for(var c=this.vertices[b],d=new GS.Set,e=0;e<this.edges.length;e++){var f=this.edges[e];this.equalsFunc(c,this.vertices[f.start])?d.add(this.vertices[f.end]):this.equalsFunc(c,this.vertices[f.end])&&d.add(this.vertices[f.start])}a.push(d)}this.neighborSets=a},computeMaximalCliques:function(){function a(c,d,e){0===d.elements.length&&0===e.elements.length&&b.maximalCliques.push(c);for(var f=0;f<d.elements.length;f++){var g=d.elements[f],h=b.neighborSets[g];a(c.clone().add(g),d.clone().intersection(h),e.clone().intersection(h)),d.remove(g),e.add(g)}}var b=this;this.maximalCliques=[],this.computeVertexNeighborSets();var c=new GS.Set(void 0,this.equalsFunc),d=new GS.Set(this.vertices,this.equalsFunc),e=new GS.Set(void 0,this.equalsFunc);a(c,d,e),this.maximalCliques.sort(function(a,b){return a.length-b.length})},getVertexIndex:function(a){for(var b=0;b<this.vertices.length;b++)if(this.equalsFunc(this.vertices[b],a))return b;return-1}},GS.PlanarGraph=function(){GS.Graph.call(this);var a=1e-4;this.equalsFunc=function(b,c){return Math.abs(b.x-c.x)<a&&Math.abs(b.y-c.y)<a}},GS.PlanarGraph.prototype=GS.inherit(GS.Graph,{computeMinimumCycleBasis:function(){this.computeAllCycles(),this.cycles.length>100?(console.log("cycle count > 100; using horton"),this.selectCyclesHorton()):this.selectCyclesNonOverlapping()},computeAllCycles:function(){function a(a){for(var b=0;b<e.length;b++)if(e[b].equals(a))return!0;return!1}function b(a,b){return a.start==b.start&&a.end==b.end||a.end==b.start&&b.end==a.start}function c(a){for(var c=new GS.Set(void 0,b),d=a.elements,e=d.length,f=0;e-1>f;f++)c.add({start:d[f],end:d[f+1]});return c.add({start:d[e-1],end:d[0]}),c}for(var d=this,e=[],f=new GS.Set,g=new GS.Set,h=0;h<this.vertices.length;h++)for(var i=0;i<this.edges.length;i++){var j=this.edges[i];f.elements=this.getPath(j.start,h)||[],g.elements=this.getPath(h,j.end)||[];var k=f.intersection(g);if(1==k.elements.length&&k.elements[0]==h){var l=c(f.union(g));l.add(j),a(l)||e.push(l)}}e.sort(function(a,b){var c=d.getCycleWeight(a),e=d.getCycleWeight(b);return c-e}),this.cycles=e},getCycleWeight:function(a){return a.elements.length},pointInCycle:function(a,b){var c,d=this.vertices,e=b.elements,f=e.length-1,g=!1,h=0;for(c=0,h=f-1;f>c;h=c++){var i=d[e[c].start],j=d[e[h].start];i.y>a.y!=j.y>a.y&&a.x<(j.x-i.x)*(a.y-i.y)/(j.y-i.y)+i.x&&(g=!g)}return g},cyclesOverlap:function(a,b){for(var c=new THREE.Vector2,d=a.difference(b).elements,e=this.vertices,f=0;f<d.length;f++){var g=d[f];if(c.x=(e[g.start].x+e[g.end].x)/2,c.y=(e[g.start].y+e[g.end].y)/2,this.pointInCycle(c,b))return!0}for(var h=b.difference(a).elements,f=0;f<h.length;f++){var g=h[f];if(c.x=(e[g.start].x+e[g.end].x)/2,c.y=(e[g.start].y+e[g.end].y)/2,this.pointInCycle(c,a))return!0}return!1},selectCyclesNonOverlapping:function(){for(var a=this.cycles.length,b=new GS.Graph,c=0;a>c;c++)b.addVertex(c);for(var c=0;a-1>c;c++)for(var d=c+1;a>d;d++)b.addEdge(c,d);for(var c=0;a-1>c;c++)for(var d=c+1;a>d;d++)this.cyclesOverlap(this.cycles[c],this.cycles[d])&&b.removeEdge(c,d);b.computeMaximalCliques(),b.maximalCliques.length>0&&(this.minimumCycleBasis=b.maximalCliques[0].elements)},selectCyclesHorton:function(){for(var a=this.cycles.length,b=this.edges.length,c=new GS.Matrix(a,b),d=0;a>d;d++)for(var e=0;b>e;e++)this.cycles[d].elemExists(this.edges[e])&&(c.matrix[d][e]=1);c.binaryGaussianElimination(),this.minimumCycleBasis=c.getNonZeroRowIndices()},removeNonCycleEdges:function(){this.nonCycleVertices=[];for(var a=this.vertices.length-1;a>=0;a--){for(var b=!1,c=0;c<this.cycles.length;c++){var d=this.cycles[c];if(d.elemExists(a)){b=!0;break}}if(!b){this.nonCycleVertices.push(a);for(var c=this.edges.length-1;c>=0;c--){var e=this.edges[c];(e.start==a||e.end==a)&&this.edges.splice(c,1)}}}}}),GS.Set=function(a,b){this.equalsFunc=b||function(a,b){return a==b},this.elements=void 0!==a?a:[]},GS.Set.prototype={add:function(a){return this.elemExists(a)||this.elements.push(a),this},remove:function(a){for(var b=0;b<this.elements.length;b++)if(this.equalsFunc(this.elements[b],a)){this.elements.splice(b,1);break}return this},elemExists:function(a){for(var b=0;b<this.elements.length;b++)if(this.equalsFunc(this.elements[b],a))return!0;return!1},intersection:function(a){for(var b=a.elements,c=[],d=0;d<this.elements.length;d++)for(var e=0;e<b.length;e++)this.equalsFunc(this.elements[d],b[e])&&c.push(this.elements[d]);return new GS.Set(c,this.equalsFunc)},union:function(a){for(var b=new GS.Set(this.elements.slice(),this.equalsFunc),c=a.elements,d=0;d<c.length;d++)b.add(c[d]);return b},difference:function(a){for(var b=[],c=0;c<this.elements.length;c++)a.elemExists(this.elements[c])||b.push(this.elements[c]);return new GS.Set(b,this.equalsFunc)},equals:function(a){var b=this.difference(a),c=a.difference(this);return 0===b.elements.length&&0===c.elements.length},clone:function(){return new GS.Set(this.elements.slice(),this.equalsFunc)}},GS.Matrix=function(a,b){for(var c=[],d=0;a>d;d++){c[d]=[];for(var e=0;b>e;e++)c[d].push(0)}this.matrix=c,this.rowCount=a,this.columnCount=b},GS.Matrix.prototype={binaryGaussianElimination:function(){for(var a=this,b=function(b,c){for(var d=0;d<a.columnCount;d++)a.matrix[b][d]=a.matrix[b][d]^a.matrix[c][d]},c=0;c<this.rowCount;c++){for(var d=!1,e=0;e<this.columnCount;e++)if(1==this.matrix[c][e]){d=!0;break}if(d)for(var f=0;f<this.rowCount;f++)f!=c&&1==this.matrix[f][e]&&b(f,c)}},clear:function(a){a=a||0;for(var b=0;b<this.rowCount;b++)for(var c=0;c<this.columnCount;c++)this.matrix[b][c]=a},getNonZeroRowIndices:function(){for(var a=[],b=0;b<this.rowCount;b++){for(var c=!1,d=0;d<this.columnCount;d++)if(this.matrix[b][d]>0){c=!0;break}c&&a.push(b)}return a},toString:function(){for(var a="",b=0;b<this.rowCount;b++){for(var c=0;c<this.columnCount;c++)a+=this.matrix[b][c]+" ";a+="\n"}return a}},GS.Rebound=function(a){this.keybinds=a,this.modifyingKeybind=!1,this.onModifyingKeybindStart=function(){},this.onModifyingKeybindStop=function(){}},GS.Rebound.prototype={init:function(){var a=this;$(document).on("contextmenu",function(){return!1}),$(document).on("keydown.keybindUse",function(b){if(!a.modifyingKeybind){var c=_.find(a.keybinds,{code:b.keyCode});c&&(c.inUse=!0,b.preventDefault())}}),$(document).on("keyup.keybindUse",function(b){if(!a.modifyingKeybind){var c=_.find(a.keybinds,{code:b.keyCode});c&&(c.inUse=!1,b.preventDefault())}}),$(document).on("mousedown.keybindUse",function(b){if(!a.modifyingKeybind){var c=_.find(a.keybinds,{mouse:!0,button:b.which});c&&(c.inUse=!0,b.preventDefault())}}),$(document).on("mouseup.keybindUse",function(b){if(!a.modifyingKeybind){var c=_.find(a.keybinds,{mouse:!0,button:b.which});c&&(c.inUse=!1,b.preventDefault())}})},getKeybindByActionName:function(a){return _.find(this.keybinds,{actionName:a})},modifyKeybind:function(a){var b=this;this.modifyingKeybind||(this.modifyingKeybind=!0,this.onModifyingKeybindStart({keybind:a}),$(document).on("keydown.modifyKeybind",function(c){c.keyCode||c.which;$(document).off("keydown.modifyKeybind"),$(document).off("mousedown.modifyKeybind");var d=b.changeKey(a,c);b.modifyingKeybind=!1,b.onModifyingKeybindStop({keybind:a,success:d}),c.preventDefault()}),$(document).on("mousedown.modifyKeybind",function(c){c.keyCode||c.which;$(document).off("keydown.modifyKeybind"),$(document).off("mousedown.modifyKeybind");var d=b.changeMouse(a,c);b.modifyingKeybind=!1,b.onModifyingKeybindStop({keybind:a,success:d}),c.preventDefault()}))},changeKey:function(a,b){var c=this.isKeyAllowed(b);if(!c)return!1;b.preventDefault();var d=b.keyCode,e=_.find(this.keybinds,{code:d});return e&&(e.code=void 0,e.mouse=void 0,e.button=void 0,e.controlName="NOT BOUND"),a.code=d,a.mouse=void 0,a.button=void 0,a.controlName=c,!0},changeMouse:function(a,b){var c;if(1===b.which?c="MOUSE LEFT":2===b.which&&(c="MOUSE MIDDLE"),!c)return!1;var d=_.find(this.keybinds,{mouse:!0,button:b.which});return d&&(d.code=void 0,d.mouse=void 0,d.button=void 0,d.controlName="NOT BOUND"),a.code=void 0,a.mouse=!0,a.button=b.which,a.controlName=c,!0},isKeyAllowed:function(a){if(a.keyCode>=65&&a.keyCode<=90)return String.fromCharCode(a.keyCode);if(a.keyCode>=48&&a.keyCode<=57)return String.fromCharCode(a.keyCode);if(a.keyCode>=37&&a.keyCode<=40)return a.originalEvent.keyIdentifier.toUpperCase();if(a.keyCode>=16&&a.keyCode<=18)return a.originalEvent.keyIdentifier.toUpperCase();switch(a.keyCode){case 32:return"SPACE";case 13:return"ENTER";case 8:return"BACKSPACE";case 91:case 93:return"COMMAND"}return!1}},GS.RotationControls=function(a){this.camera=a,this.isRotating=!0,this.rotationSpeed=1,this.dragSpeed=250,this.look=new THREE.Vector3,this.zoomSpeed=.25,this.distance=2.5,this.minDistance=1.5,this.maxDistance=3.5,this.xAngle=60,this.yAngle=60,this.mouseDownProperty="rightMouseDown",this.canvasSelector="canvas"},GS.RotationControls.prototype={constructor:GS.RotationControls,init:function(){this.ox=GS.InputHelper.mouseX/window.innerWidth,this.oy=GS.InputHelper.mouseY/window.innerHeight,this.updateCamera();var a=this;$(document).mousemove(function(){if(GS.InputHelper[a.mouseDownProperty]){var b=.5+(a.distance-a.minDistance)/(a.maxDistance-a.minDistance),c=GS.InputHelper.mouseX/window.innerWidth,d=GS.InputHelper.mouseY/window.innerHeight;a.xAngle+=(c-a.ox)*a.dragSpeed*b,a.yAngle+=-(d-a.oy)*a.dragSpeed*b,a.ox=c,a.oy=d,a.xAngle>=360&&(a.xAngle-=360),a.yAngle=GS.MathHelper.clamp(a.yAngle,1,179),a.isRotating=!1,a.updateCamera(),$(a.canvasSelector).css("cursor","move")}else a.ox=GS.InputHelper.mouseX/window.innerWidth,a.oy=GS.InputHelper.mouseY/window.innerHeight,$(a.canvasSelector).css("cursor","default")})},update:function(){var a=!1;for(this.isRotating&&(this.xAngle+=this.rotationSpeed,this.xAngle>=360&&(this.xAngle-=360));GS.InputHelper.mouseWheelEvents.length>0;){var b=GS.InputHelper.mouseWheelEvents.shift();0>b&&(this.distance+=this.zoomSpeed,this.distance=GS.MathHelper.clamp(this.distance,this.minDistance,this.maxDistance),a=!0),b>0&&(this.distance-=this.zoomSpeed,this.distance=GS.MathHelper.clamp(this.distance,this.minDistance,this.maxDistance),a=!0)}(a||this.isRotating)&&this.updateCamera()},updateCamera:function(){var a=this.look.x+this.distance*Math.sin(Math.PI/180*this.yAngle)*Math.cos(Math.PI/180*this.xAngle),b=this.look.y+this.distance*Math.cos(Math.PI/180*this.yAngle),c=this.look.z+this.distance*Math.sin(Math.PI/180*this.yAngle)*Math.sin(Math.PI/180*this.xAngle);this.camera.position.set(a,b,c),this.camera.lookAt(this.look)}},GS.DebugUI={fontSize:24,maxTempLines:5,defaultTimeout:GS.msToFrames(5e3),overlayMargin:10,overlayPadding:5,overlayWidth:0,overlayHeight:0,overlayX:0,overlayY:0,visibleStaticLines:0,staticLines:{},tempLines:[],valueTracking:{},hasChanged:!1,_visible:!1,set visible(a){this._visible=a,!a&&this.ctx&&this.ctx.clearRect(0,0,this.width,this.height)},get visible(){return this._visible},init:function(){var a=this;this.minWidth=1280,this.minHeight=720,this.width=window.innerWidth,this.height=window.innerHeight,window.addEventListener("resize",function(){a.onResize()},!1);var b=document.createElement("canvas");b.id="debug-ui-canvas",b.width=this.width,b.height=this.height,b.style.backgroundColor="rgba(0, 0, 0, 0)",b.style.zIndex=100,this.canvas=b;var c=b.getContext("2d");c.globalCompositeOperation="source-over",c.save(),this.ctx=c,this.updateFont(),document.body.appendChild(this.canvas),this.onResize()},update:function(){for(var a=this.tempLines.length-1;a>=0;a--){var b=this.tempLines[a];b.timeout--,0===b.timeout&&(this.tempLines.splice(a,1),this.hasChanged=!0)}this.hasChanged&&(this.calculateOverlayCoords(),this.draw(),this.hasChanged=!1)},draw:function(){if(this._visible&&(this.ctx.clearRect(0,0,this.width,this.height),this.visibleStaticLines>0||this.tempLines.length>0)){this.ctx.save(),this.ctx.fillStyle="rgba(0, 0, 0, 0.5)",this.ctx.fillRect(this.overlayX,this.overlayY,this.overlayWidth,this.overlayHeight),this.ctx.fillStyle="#fff";var a=this.overlayY+this.overlayPadding;for(var b in this.staticLines)this.staticLines[b].visible&&(this.ctx.fillText(this.staticLines[b].text,this.overlayX+this.overlayPadding,a),a+=this.fontSize+this.overlayPadding);for(var b=0;b<this.tempLines.length;b++)this.ctx.fillText(this.tempLines[b].text,this.overlayX+this.overlayPadding,a),a+=this.fontSize+this.overlayPadding;this.ctx.restore()}},updateFont:function(){this.ctx.font=this.fontSize+"px 'Lucida Console', Monaco, monospace",this.ctx.textBaseline="top"},calculateOverlayCoords:function(){this.overlayWidth=0,this.visibleStaticLines=0;for(var a in this.staticLines)this.staticLines[a].visible&&this.visibleStaticLines++;this.overlayHeight=(this.visibleStaticLines+this.tempLines.length)*(this.fontSize+this.overlayPadding)+this.overlayPadding,this.overlayX=this.overlayMargin,this.overlayY=this.overlayMargin;for(var a in this.staticLines)this.staticLines[a].visible&&(this.overlayWidth=Math.max(this.overlayWidth,this.ctx.measureText(this.staticLines[a].text).width+2*this.overlayPadding));for(var a=0;a<this.tempLines.length;a++)this.overlayWidth=Math.max(this.overlayWidth,this.ctx.measureText(this.tempLines[a].text).width+2*this.overlayPadding)},trackNumericValue:function(a,b){void 0===this.valueTracking[a]&&(this.valueTracking[a]={},this.valueTracking[a].min=1/0,this.valueTracking[a].max=-1/0,this.valueTracking[a].avg=0,this.valueTracking[a].count=0);var c=this.valueTracking[a];c.min=Math.min(c.min,b),c.max=Math.max(c.max,b),c.count++,c.avg+=(b-c.avg)/c.count,this.setStaticLine(a,b+" (min: "+c.min+", max: "+c.max+", avg: "+c.avg.toFixed(0)+")")},setStaticLine:function(a,b){b=a+": "+b,a in this.staticLines?this.staticLines[a].text=b:this.staticLines[a]={text:b,visible:!0},this.hasChanged=!0},removeStaticLine:function(a){delete this.staticLines[a],this.hasChanged=!0},setStaticLineVisibility:function(a,b){a in this.staticLines?this.staticLines[a].visible=b===!0:this.staticLines[a]={text:"",visible:b}},getStaticLineVisibility:function(a){return a in this.staticLines?this.staticLines[a].visible:void 0},addTempLine:function(a,b){this.tempLines.length==this.maxTempLines&&this.tempLines.shift(),b=void 0!==b?b:this.defaultTimeout;var c={text:a,timeout:b};this.tempLines.push(c),this.hasChanged=!0},onResize:function(){this.width=Math.max(window.innerWidth,this.minWidth),this.height=Math.max(window.innerHeight,this.minHeight),this.canvas.width=this.width,this.canvas.height=this.height,$(this.canvas).css("width",window.innerWidth+"px").css("height",window.innerHeight+"px"),this.ctx.font=this.fontSize+"px 'Lucida Console', Monaco, monospace",this.ctx.textBaseline="top",this.draw()}},GS.LoadingUI=function(){this.redraw=!0,this.hidden=!0,this.spinnerOnly=!1,this.screenInfo={width:null,height:null,center:new THREE.Vector2},this.loadingBox={width:.5,height:.05,contentPadding:.005,topLeft:new THREE.Vector2,bottomRight:new THREE.Vector2,contentTopLeft:new THREE.Vector2,contentBottomRight:new THREE.Vector2,contentCurrentBottomRight:new THREE.Vector2},this.percentLoaded=0},GS.LoadingUI.prototype={init:function(){this.cvs=new GS.Canvas2d(!0),this.cvs.canvasId="loading-canvas",this.cvs.init(),this.cvs.screenCanvas.style.zIndex=50,this.onResize()},draw:function(){!this.hidden&&this.redraw&&(this.redraw=!1,this.cvs.clear(),this.spinnerOnly?this.cvs.text(this.screenInfo.center,"Imagine it's 1994...","#fff",40,"middle","center",GS.UIFont):(this.cvs.box(this.loadingBox.topLeft,this.loadingBox.bottomRight,"#fff",3),this.cvs.boxFill(this.loadingBox.contentTopLeft,this.loadingBox.contentCurrentBottomRight,"#fff")),this.cvs.flip())},updateProgress:function(a){this.percentLoaded=a.percentLoaded},updateLoadingBoxContent:function(){var a=this.loadingBox.contentBottomRight.x-this.loadingBox.contentTopLeft.x;this.loadingBox.contentCurrentBottomRight.x=this.loadingBox.contentTopLeft.x+Math.floor(a*this.percentLoaded*.01),this.redraw=!0},show:function(){this.cvs.show(),this.hidden=!1},hide:function(){this.cvs.hide(),this.hidden=!0},onResize:function(){this.screenInfo.width=this.cvs.bufferCanvas.width,this.screenInfo.height=this.cvs.bufferCanvas.height,this.screenInfo.center.set(Math.floor(this.screenInfo.width/2),Math.floor(this.screenInfo.height/2)),this.loadingBox.topLeft.copy(this.screenInfo.center),this.loadingBox.topLeft.x-=Math.floor(.5*this.loadingBox.width*this.screenInfo.width),this.loadingBox.topLeft.y-=Math.floor(.5*this.loadingBox.height*this.screenInfo.height),this.loadingBox.bottomRight.copy(this.screenInfo.center),this.loadingBox.bottomRight.x+=Math.floor(.5*this.loadingBox.width*this.screenInfo.width),this.loadingBox.bottomRight.y+=Math.floor(.5*this.loadingBox.height*this.screenInfo.height),this.loadingBox.contentTopLeft.copy(this.loadingBox.topLeft),this.loadingBox.contentTopLeft.x+=Math.floor(this.loadingBox.contentPadding*this.screenInfo.width),this.loadingBox.contentTopLeft.y+=Math.floor(this.loadingBox.contentPadding*this.screenInfo.width),this.loadingBox.contentBottomRight.copy(this.loadingBox.bottomRight),this.loadingBox.contentBottomRight.x-=Math.floor(this.loadingBox.contentPadding*this.screenInfo.width),this.loadingBox.contentBottomRight.y-=Math.floor(this.loadingBox.contentPadding*this.screenInfo.width),this.loadingBox.contentCurrentBottomRight.y=this.loadingBox.contentBottomRight.y,this.updateLoadingBoxContent()},set percentLoaded(a){this._percentLoaded=a,this.updateLoadingBoxContent()},get percentLoaded(){return this._percentLoaded}},GS.UIColors={background:"rgba(0, 0, 0, 0.75)",menuBackground:"rgba(0, 0, 0, 0.9)",foreground:"rgba(255, 255, 255, 1)",foregroundDisabled:"rgba(64, 64, 64, 1)",buttonHover:"rgba(128, 0, 0, 0.5)",buttonActive:"rgba(255, 0, 0, 0.5)"},GS.UIFont="hudFont",GS.UIComponents=GS.UIComponents||{},GS.UIManager=function(){this.reset(),this.menuOnly=!0,this.menuActive=!1,this.menuBackOffset=new THREE.Vector2(0,0),this.menuBackPos=new THREE.Vector2(0,0),this.menuBackSize=new THREE.Vector2(1,1),this.showHUD=GS.Settings.showHUD},GS.UIManager.prototype={constructor:GS.UIManager,reset:function(){this.grid=void 0,this.hidden=!0},init:function(){this.cvs=new GS.Canvas2d(!0),this.cvs.alpha=0,this.cvs.canvasId="ui-canvas",this.cvs.redrawOnResize=!1,this.cvs.init(),this.cvs.screenCanvas.style.zIndex=30,this.vectorCanvas=new GS.VectorCanvas(this.cvs),this.vectorCanvas.init()},initComponents:function(a,b){this.grid=b,this.assets={images:a[GS.AssetTypes.UIWidget]},this.components=[],void 0!==this.grid&&(this.powerBars=new GS.UIComponents.PowerBars(this.vectorCanvas,this.assets,this.grid.player),this.powerBars.init(),this.components.push(this.powerBars),this.crosshair=new GS.UIComponents.Crosshair(this.vectorCanvas,this.assets,this.grid.player),this.crosshair.init(),this.components.push(this.crosshair),this.notifications=new GS.UIComponents.Notifications(this.vectorCanvas,this.assets,this.grid.player),this.notifications.init(),this.components.push(this.notifications),this.winScreen=new GS.UIComponents.WinScreen(this.vectorCanvas,this.assets,this.grid.player),this.winScreen.init(),this.components.push(this.winScreen),this.automap=new GS.UIComponents.Automap(this.vectorCanvas,this.assets,this.grid.player),this.automap.init(),this.components.push(this.automap)),void 0===this.menu&&(this.menu=new GS.UIComponents.Menu(this.vectorCanvas,this.assets),this.menu.init()),this.overrideRedraw=!0},show:function(){this.overrideRedraw=!0,this.cvs.show(),this.hidden=!1},hide:function(){this.cvs.hide(),this.hidden=!0},update:function(){for(var a=0;a<this.components.length;a++)this.components[a].update();this.menuActive&&this.menu.update()},draw:function(){if(this.menuActive)this.cvs.clear(),this.menuOnly&&this.vectorCanvas.drawImage(this.menuBackOffset,this.menuBackPos,this.assets.images.menu_back,this.menuBackSize,!1),this.menu.draw(),this.cvs.flip();else if(this.winScreen.visible)this.cvs.clear(),this.winScreen.draw(),this.cvs.flip();else if(this.automap.visible)(this.overrideRedraw||this.automap.needsRedraw)&&(this.overrideRedraw&&(this.overrideRedraw=!1),this.cvs.clear(),this.automap.draw(),this.automap.needsRedraw=!1,this.cvs.flip());else if(!this.hidden&&this.checkIfRedraw()){if(this.cvs.clear(),this.showHUD)for(var a=0;a<this.components.length;a++)this.components[a].visible&&(this.components[a].draw(),this.components[a].needsRedraw=!1);this.cvs.flip()}},checkIfRedraw:function(){if(this.overrideRedraw)return this.overrideRedraw=!1,!0;for(var a=0;a<this.components.length;a++)if(this.components[a].visible&&this.components[a].needsRedraw)return!0;return!1},useIngameMenu:function(){this.menuOnly=!1,this.menu.switchToIngame()},onResize:function(){this.overrideRedraw=!0,this.vectorCanvas.onResize(),GS.InputHelper.screenRatioX=this.cvs.bufferCanvas.width/window.innerWidth,GS.InputHelper.screenRatioY=this.cvs.bufferCanvas.height/window.innerHeight},dispose:function(){this.grid=void 0,this.powerBars=void 0,this.crosshair=void 0,this.notifications=void 0,this.winScreen=void 0,this.components=[]}},GS.VectorCanvas=function(a){this.cvs=a,this.ratio=new THREE.Vector2},GS.VectorCanvas.prototype={constructor:GS.VectorCanvas,init:function(){this.onResize()},onResize:function(){this.ratio.set(this.cvs.bufferCanvas.width,this.cvs.bufferCanvas.height)},convertToScreenCoords:function(a,b,c){b.x=Math.floor(a.x*this.ratio.x),b.y=Math.floor(a.y*this.ratio.y),void 0!==c&&(b.x+=c.x,b.y+=c.y)},fixedLine:function(){var a=new THREE.Vector2,b=new THREE.Vector2;return function(c,d,e,f,g){this.convertToScreenCoords(c,a,d),this.convertToScreenCoords(c,b,e),this.cvs.line(a,b,f,g)}}(),line:function(){var a=new THREE.Vector2,b=new THREE.Vector2;return function(c,d,e,f,g,h){this.convertToScreenCoords(d,a,c),f?b.copy(a).add(e):(this.convertToScreenCoords(e,b),b.add(a)),this.cvs.line(a,b,g,h)}}(),box:function(){var a=new THREE.Vector2,b=new THREE.Vector2;return function(c,d,e,f,g,h){this.convertToScreenCoords(d,a,c),f?b.copy(a).add(e):(this.convertToScreenCoords(e,b),b.add(a)),this.cvs.box(a,b,g,h)}}(),boxFill:function(){var a=new THREE.Vector2,b=new THREE.Vector2;return function(c,d,e,f,g){this.convertToScreenCoords(d,a,c),f?b.copy(a).add(e):(this.convertToScreenCoords(e,b),b.add(a)),this.cvs.boxFill(a,b,g)}}(),circle:function(){var a=new THREE.Vector2;return function(b,c,d,e,f){this.convertToScreenCoords(c,a,b),this.cvs.circle(a,d,e,f)}}(),circleFill:function(){var a=new THREE.Vector2;return function(b,c,d,e){this.convertToScreenCoords(c,a,b),this.cvs.circleFill(a,d,e)}}(),text:function(){var a=new THREE.Vector2;return function(b,c,d,e,f,g,h,i){this.convertToScreenCoords(c,a,b),this.cvs.text(a,d,e,f,g,h,i)}}(),drawImage:function(){var a=new THREE.Vector2,b=new THREE.Vector2;return function(c,d,e,f,g){this.convertToScreenCoords(d,a,c),g?b.copy(f):this.convertToScreenCoords(f,b),this.cvs.drawImage(a,e,b)}}(),drawImageFromAtlas:function(){var a=new THREE.Vector2;return function(b,c,d,e,f){this.convertToScreenCoords(c,a,b),this.cvs.drawImageFromAtlas(a,d,e,f)}}(),getTextWidth:function(a,b,c){return this.cvs.getTextWidth(a,b,c)},roundedBox:function(){var a=new THREE.Vector2,b=new THREE.Vector2;return function(c,d,e,f,g,h,i){this.convertToScreenCoords(d,a,c),f?b.copy(a).add(e):(this.convertToScreenCoords(e,b),b.add(a)),this.cvs.roundedBox(a,b,g,h,i)}}(),roundedBoxFill:function(){var a=new THREE.Vector2,b=new THREE.Vector2;return function(c,d,e,f,g,h){this.convertToScreenCoords(d,a,c),f?b.copy(a).add(e):(this.convertToScreenCoords(e,b),b.add(a)),this.cvs.roundedBoxFill(a,b,g,h)}}()},GS.UIComponents.Automap=function(a,b,c){this.cvs=a,this.assets=b,this.player=c,this.aiManager=c.grid.aiManager,this.background={offset:new THREE.Vector2(0,0),pos:new THREE.Vector2(0,0),size:new THREE.Vector2(1,1)},this.playerDraw={offset:new THREE.Vector2(0,0),pos:new THREE.Vector2(.5,.5)},this.mapDraw={offset:new THREE.Vector2(0,0),pos:new THREE.Vector2(.5,.5)},this.backgroundColor=GS.UIColors.menuBackground,this.oldRegionsDiscovered=Object.keys(this.aiManager.regionsDiscovered).length,this.oldPlayerPosition=this.player.position.toVector2(),this.currentPlayerPosition=this.player.position.toVector2(),this.oldPlayerDirection=this.player.direction.toVector2(),this.currentPlayerDirection=this.player.direction.toVector2(),this.zoomSpeed=.25,this.minZoom=.5,this.maxZoom=4,this.zoom=2,this.visible=!1},GS.UIComponents.Automap.prototype={constructor:GS.UIComponents.Automap,init:function(){},update:function(){var a=Object.keys(this.aiManager.regionsDiscovered).length;for(a>this.oldRegionsDiscovered&&(this.needsRedraw=!0,this.oldRegionsDiscovered=a),this.player.position.toVector2(this.currentPlayerPosition),this.currentPlayerPosition.equalsEpsilon(this.oldPlayerPosition)||(this.needsRedraw=!0,this.oldPlayerPosition.copy(this.currentPlayerPosition)),this.player.direction.toVector2(this.currentPlayerDirection),this.currentPlayerDirection.equalsEpsilon(this.oldPlayerDirection)||(this.needsRedraw=!0,this.oldPlayerDirection.copy(this.currentPlayerDirection));GS.InputHelper.mouseWheelEvents.length>0;){var b=GS.InputHelper.mouseWheelEvents.shift();0>b&&(this.zoom-=this.zoomSpeed),b>0&&(this.zoom+=this.zoomSpeed),this.zoom=GS.MathHelper.clamp(this.zoom,this.minZoom,this.maxZoom),this.needsRedraw=!0}},draw:function(){this.cvs.boxFill(this.background.offset,this.background.pos,this.background.size,!1,this.backgroundColor);var a=this.aiManager.regionsDiscovered;for(var b in a)this.drawRegion(a[b]);this.drawPlayer()},drawPlayer:function(){var a=new THREE.Vector2,b=new THREE.Vector2,c=new THREE.Vector2,d=(new THREE.Vector2,"rgba(192, 192, 192, 1)");return function(){var e=this.player.size.x*this.zoom,f=this.player.xAngle;a.x=e*Math.sin(Math.PI/180*(450-f)),a.y=e*Math.cos(Math.PI/180*(450-f)),b.x=e*Math.sin(Math.PI/180*(300-f)),b.y=e*Math.cos(Math.PI/180*(300-f)),c.x=e*Math.sin(Math.PI/180*(240-f)),c.y=e*Math.cos(Math.PI/180*(240-f)),this.cvs.fixedLine(this.mapDraw.pos,a,b,d,3),this.cvs.fixedLine(this.mapDraw.pos,b,c,d,3),this.cvs.fixedLine(this.mapDraw.pos,c,a,d,3)}}(),drawRegion:function(){var a=new THREE.Vector2,b=new THREE.Vector2,c="rgba(64, 64, 64, 1)",d="rgba(128, 0, 0, 1)";return function(e){function f(c,d,e,f,h){a.copy(c.collisionVertices[d]),b.copy(c.collisionVertices[e]),a.sub(g.currentPlayerPosition).multiplyScalar(g.zoom),b.sub(g.currentPlayerPosition).multiplyScalar(g.zoom),b.sub(a),g.cvs.line(a,g.mapDraw.pos,b,!0,f,h)}var g=this,h=this.aiManager.sectorDict;for(var i in e.sectorIds){var j=h[i].sector;if(!j.door){for(var k=0;k<j.collisionVertices.length-1;k++)f(j,k,k+1,c,1);f(j,k,0,c,1)}}for(var i in e.sectorIds){var j=h[i].sector;if(j.door&&j.doorOpenedEver){for(var k=0;k<j.collisionVertices.length-1;k++)f(j,k,k+1,d,3);f(j,k,0,d,3)}}}}()},GS.UIComponents.Crosshair=function(a,b,c){this.cvs=a,this.assets=b,this.player=c,this.size=10,this.lineWidth=3,this.pos=new THREE.Vector2(.5,.5),this.hOffset=new THREE.Vector2(-this.size,0),this.hLineOffset=new THREE.Vector2(2*this.size,0),this.vOffset=new THREE.Vector2(0,-this.size),this.vLineOffset=new THREE.Vector2(0,2*this.size),this.visible=!0},GS.UIComponents.Crosshair.prototype={constructor:GS.UIComponents.Crosshair,init:function(){},update:function(){},draw:function(){this.cvs.line(this.hOffset,this.pos,this.hLineOffset,!0,GS.UIColors.foreground,this.lineWidth),this.cvs.line(this.vOffset,this.pos,this.vLineOffset,!0,GS.UIColors.foreground,this.lineWidth)}},GS.UIComponents.Menu=function(a,b){this.cvs=a,this.assets=b,this.fontSize=60,this.boxCornerRadius=10,this.background={offset:new THREE.Vector2(0,0),pos:new THREE.Vector2(0,0),size:new THREE.Vector2(1,1)},this.text={offset:new THREE.Vector2(0,0),pos:new THREE.Vector2(.5,.5)},this.logo={offset:new THREE.Vector2(-300,-384),pos:new THREE.Vector2(.5,.5),size:new THREE.Vector2(600,200),image:this.assets.images.logo},this.children=[],this.activePanel=null,this.backgroundColor=GS.UIColors.menuBackground,this.ingame=!1,this.visible=!0},GS.UIComponents.Menu.prototype={constructor:GS.UIComponents.Menu,init:function(){this.initTopPanel(),this.initOptionsPanel(),this.initGraphicsPanel(),this.initSoundPanel(),this.initGameplayPanel(),this.initControlsPanel(),this.initCreditsPanel(),this.initCheatsPanel(),this.initLevelSelectPanel(),this.initFooter(),this.activePanel=this.topPanel},initTopPanel:function(){var a=this;this.topPanel=new GS.UIComponents.MenuPanel(this.cvs,new THREE.Vector2(-400,-160),new THREE.Vector2(.5,.5),new THREE.Vector2(800,520),72,80),this.btnNewGame=this.topPanel.addButton("new game"),this.btnNewGame.onClick=function(){GAME.newGame()},this.btnLevelSelect=this.topPanel.addButton("level select"),this.btnLevelSelect.onClick=function(){a.activePanel=a.levelSelectPanel},this.btnOptions=this.topPanel.addButton("options"),this.btnOptions.onClick=function(){a.activePanel=a.optionsPanel},this.btnCredits=this.topPanel.addButton("credits"),this.btnCredits.onClick=function(){a.activePanel=a.creditsPanel}},initOptionsPanel:function(){var a=this;this.optionsPanel=new GS.UIComponents.MenuPanel(this.cvs,new THREE.Vector2(-400,-160),new THREE.Vector2(.5,.5),new THREE.Vector2(800,520),60,65),this.btnGraphics=this.optionsPanel.addButton("graphics"),this.btnGraphics.onClick=function(){a.activePanel=a.graphicsPanel},this.btnSound=this.optionsPanel.addButton("sound"),this.btnSound.onClick=function(){a.activePanel=a.soundPanel},this.btnGameplay=this.optionsPanel.addButton("gameplay"),this.btnGameplay.onClick=function(){a.activePanel=a.gameplayPanel},this.btnControls=this.optionsPanel.addButton("controls"),this.btnControls.onClick=function(){a.activePanel=a.controlsPanel},this.btnCheats=this.optionsPanel.addButton("cheats"),this.btnCheats.disabled=!0,this.btnCheats.onClick=function(){a.activePanel=a.cheatsPanel},this.optionsPanel.addEmptyRow(),this.btnOptionsBack=this.optionsPanel.addButton("back"),this.btnOptionsBack.onClick=function(){a.activePanel=a.topPanel}},initGraphicsPanel:function(){var a=this;this.graphicsPanel=new GS.UIComponents.MenuPanel(this.cvs,new THREE.Vector2(-400,-160),new THREE.Vector2(.5,.5),new THREE.Vector2(800,520),40,43),this.btnToggleHalfSize=this.graphicsPanel.addToggleButton("half-size rendering"),this.btnToggleHalfSize.button.currentStateIndex=GS.Settings.halfSize===!0?0:1,this.btnToggleHalfSize.button.onClick=function(a){GS.Settings.halfSize="on"===a.state
},this.graphicsPanel.addEmptyRow(),this.btnToggleSSAO=this.graphicsPanel.addToggleButton("SSAO"),this.btnToggleSSAO.button.currentStateIndex=GS.Settings.ssao===!0?0:1,this.btnToggleSSAO.button.onClick=function(a){GS.Settings.ssao="on"===a.state},this.btnToggleBloom=this.graphicsPanel.addToggleButton("bloom"),this.btnToggleBloom.button.currentStateIndex=GS.Settings.bloom===!0?0:1,this.btnToggleBloom.button.onClick=function(a){GS.Settings.bloom="on"===a.state},this.btnToggleNoise=this.graphicsPanel.addToggleButton("noise filter"),this.btnToggleNoise.button.currentStateIndex=GS.Settings.noise===!0?0:1,this.btnToggleNoise.button.onClick=function(a){GS.Settings.noise="on"===a.state},this.btnToggleVignette=this.graphicsPanel.addToggleButton("vignette"),this.btnToggleVignette.button.currentStateIndex=GS.Settings.vignette===!0?0:1,this.btnToggleVignette.button.onClick=function(a){GS.Settings.vignette="on"===a.state},this.btnToggleFXAA=this.graphicsPanel.addToggleButton("FXAA"),this.btnToggleFXAA.button.currentStateIndex=GS.Settings.fxaa===!0?0:1,this.btnToggleFXAA.button.onClick=function(a){GS.Settings.fxaa="on"===a.state},this.graphicsPanel.addEmptyRow(),this.numberPickerFOV=this.graphicsPanel.addNumberPicker("field of view",GS.Settings.fov,GS.Settings.fovMin,GS.Settings.fovMax,5),this.numberPickerFOV.numberPicker.onChange=function(a){GS.Settings.fov=a.value},this.btnToggleShowFPS=this.graphicsPanel.addToggleButton("show FPS"),this.btnToggleShowFPS.button.currentStateIndex=GS.Settings.showFPS===!0?0:1,this.btnToggleShowFPS.button.onClick=function(a){GS.Settings.showFPS="on"===a.state},this.graphicsPanel.addEmptyRow(),this.btnGraphicsBack=this.graphicsPanel.addButton("back"),this.btnGraphicsBack.onClick=function(){a.activePanel=a.optionsPanel}},initSoundPanel:function(){var a=this;this.soundPanel=new GS.UIComponents.MenuPanel(this.cvs,new THREE.Vector2(-400,-160),new THREE.Vector2(.5,.5),new THREE.Vector2(800,520),40,43),this.numberPickerSound=this.soundPanel.addNumberPicker("sound volume",GS.Settings.sound,GS.Settings.soundMin,GS.Settings.soundMax,1),this.numberPickerSound.numberPicker.onChange=function(a){GS.Settings.sound=a.value},this.numberPickerMusic=this.soundPanel.addNumberPicker("music volume",GS.Settings.music,GS.Settings.musicMin,GS.Settings.musicMax,1),this.numberPickerMusic.numberPicker.onChange=function(a){GS.Settings.music=a.value},this.soundPanel.addEmptyRow(),this.btnSoundBack=this.soundPanel.addButton("back"),this.btnSoundBack.onClick=function(){a.activePanel=a.optionsPanel}},initGameplayPanel:function(){var a=this;this.gameplayPanel=new GS.UIComponents.MenuPanel(this.cvs,new THREE.Vector2(-400,-160),new THREE.Vector2(.5,.5),new THREE.Vector2(800,520),40,43),this.btnToggleViewBob=this.gameplayPanel.addToggleButton("view bobbing"),this.btnToggleViewBob.button.currentStateIndex=GS.Settings.viewBob===!0?0:1,this.btnToggleViewBob.button.onClick=function(a){GS.Settings.viewBob="on"===a.state},this.btnToggleWeaponBob=this.gameplayPanel.addToggleButton("weapon bobbing"),this.btnToggleWeaponBob.button.currentStateIndex=GS.Settings.weaponBob===!0?0:1,this.btnToggleWeaponBob.button.onClick=function(a){GS.Settings.weaponBob="on"===a.state},this.gameplayPanel.addEmptyRow(),this.btnToggleShowHUD=this.gameplayPanel.addToggleButton("show HUD"),this.btnToggleShowHUD.button.currentStateIndex=GS.Settings.showHUD===!0?0:1,this.btnToggleShowHUD.button.onClick=function(a){GS.Settings.showHUD="on"===a.state},this.btnToggleShowWeapon=this.gameplayPanel.addToggleButton("show weapon"),this.btnToggleShowWeapon.button.currentStateIndex=GS.Settings.showWeapon===!0?0:1,this.btnToggleShowWeapon.button.onClick=function(a){GS.Settings.showWeapon="on"===a.state},this.gameplayPanel.addEmptyRow(),this.btnGameplayBack=this.gameplayPanel.addButton("back"),this.btnGameplayBack.onClick=function(){a.activePanel=a.optionsPanel}},initCheatsPanel:function(){var a=this;this.cheatsPanel=new GS.UIComponents.MenuPanel(this.cvs,new THREE.Vector2(-400,-160),new THREE.Vector2(.5,.5),new THREE.Vector2(800,520),40,43),this.btnToggleGod=this.cheatsPanel.addToggleButton("god mode"),this.btnToggleGod.button.currentStateIndex=1,this.btnToggleGod.button.onClick=function(a){GAME.grid.player.god(),GS.DebugUI.addTempLine("god mode "+a.state)},this.btnToggleFly=this.cheatsPanel.addToggleButton("fly mode"),this.btnToggleFly.button.currentStateIndex=1,this.btnToggleFly.button.onClick=function(a){GAME.grid.player.fly(),GS.DebugUI.addTempLine("fly mode "+a.state)},this.btnToggleNoclip=this.cheatsPanel.addToggleButton("noclip mode"),this.btnToggleNoclip.button.currentStateIndex=1,this.btnToggleNoclip.button.onClick=function(a){GAME.grid.player.noClip(),GS.DebugUI.addTempLine("noclip mode "+a.state)},this.cheatsPanel.addEmptyRow(),this.btnCheatsGiveAll=this.cheatsPanel.addButton("give ammo and all weapons"),this.btnCheatsGiveAll.onClick=function(){GAME.grid.player.giveAll(),GS.DebugUI.addTempLine("all weapons and max ammo given")},this.cheatsPanel.addEmptyRow(),this.btnCheatsBack=this.cheatsPanel.addButton("back"),this.btnCheatsBack.onClick=function(){a.activePanel=a.optionsPanel}},initLevelSelectPanel:function(){var a=this;this.levelSelectPanel=new GS.UIComponents.MenuPanel(this.cvs,new THREE.Vector2(-400,-160),new THREE.Vector2(.5,.5),new THREE.Vector2(800,520),60,140),this.btnLevel1=this.levelSelectPanel.addImageButton("airstrip one",this.assets.images.thumb_airstrip1),this.btnLevel1.onClick=function(){GAME.loadLevel("airstrip1")},this.btnLevel1=this.levelSelectPanel.addImageButton("drencrom",this.assets.images.thumb_drencrom),this.btnLevel1.onClick=function(){GAME.loadLevel("drencrom")},this.btnLevel2=this.levelSelectPanel.addImageButton("sacrosanct",this.assets.images.thumb_sacrosanct),this.btnLevel2.onClick=function(){GAME.loadLevel("sacrosanct")},this.levelSelectPanel.fontSize=40,this.levelSelectPanel.rowHeight=43,this.levelSelectPanel.addEmptyRow(),this.btnLevelSelectBack=this.levelSelectPanel.addButton("back"),this.btnLevelSelectBack.onClick=function(){a.activePanel=a.topPanel}},initControlsPanel:function(){var a=this;this.controlsPanel=new GS.UIComponents.MenuPanel(this.cvs,new THREE.Vector2(-400,-160),new THREE.Vector2(.5,.5),new THREE.Vector2(800,520),28,31),this.btnToggleMouseInvertY=this.controlsPanel.addToggleButton("invert mouse y axis"),this.btnToggleMouseInvertY.button.currentStateIndex=GS.Settings.mouseInvertY===!0?0:1,this.btnToggleMouseInvertY.button.onClick=function(a){GS.Settings.mouseInvertY="on"===a.state},this.numberPickerMouse=this.controlsPanel.addNumberPicker("mouse sensitivity",GS.Settings.mouse,GS.Settings.mouseMin,GS.Settings.mouseMax,1),this.numberPickerMouse.numberPicker.onChange=function(a){GS.Settings.mouse=a.value},this.controlsPanel.addEmptyRow(),this.btnToggleMoveForward=this.controlsPanel.addToggleButton("move forward",["W"]),this.btnToggleMoveBackward=this.controlsPanel.addToggleButton("move backward",["S"]),this.btnToggleStrafeLeft=this.controlsPanel.addToggleButton("strafe left",["A"]),this.btnToggleStrafeRight=this.controlsPanel.addToggleButton("strafe right",["D"]),this.btnToggleUse=this.controlsPanel.addToggleButton("use",["E"]),this.btnToggleShoot=this.controlsPanel.addToggleButton("shoot",["mouse left"]),this.btnTogglePistol=this.controlsPanel.addToggleButton("pistol",["2"]),this.btnToggleShotgun=this.controlsPanel.addToggleButton("shotgun",["3"]),this.btnToggleHyperBlaster=this.controlsPanel.addToggleButton("hyperblaster",["4"]),this.btnToggleAutomap=this.controlsPanel.addToggleButton("automap",["TAB"]),this.btnToggleAutomap.button.disabled=!0,this.btnToggleMenu=this.controlsPanel.addToggleButton("menu",["ESC"]),this.btnToggleMenu.button.disabled=!0,this.controlsPanel.addEmptyRow(),this.btnControlsBack=this.controlsPanel.addButton("back"),this.btnControlsBack.onClick=function(){a.activePanel=a.optionsPanel},this.attachReboundEventHandlers()},attachReboundEventHandlers:function(){function a(a){return function(){GS.KeybindSettings.rebound.modifyKeybind(GS.Keybinds[a])}}var b={moveForward:this.btnToggleMoveForward,moveBackward:this.btnToggleMoveBackward,strafeLeft:this.btnToggleStrafeLeft,strafeRight:this.btnToggleStrafeRight,use:this.btnToggleUse,shoot:this.btnToggleShoot,pistol:this.btnTogglePistol,shotgun:this.btnToggleShotgun,hyperblaster:this.btnToggleHyperBlaster};for(var c in b){var d=b[c].button;d.onClick=a(c),d.states=[GS.Keybinds[c].controlName],d.currentStateIndex=0}GS.KeybindSettings.rebound.onModifyingKeybindStart=function(a){var c=b[a.keybind.actionName].button;c.states=["press new key"],c.currentStateIndex=0},GS.KeybindSettings.rebound.onModifyingKeybindStop=function(a){for(var c in b){var d=b[c].button;d.states=[GS.Keybinds[c].controlName],d.currentStateIndex=0}if(a.success){var e=b[a.keybind.actionName].button,f=e.onClick;e.onClick=function(){},setTimeout(function(){e.onClick=f},100),GS.Settings.saveSettings();var g=GAME.uiManager.notifications;g&&(g.useText="["+GS.Keybinds.use.controlName+"] to use",g.calculateSizes())}}},initCreditsPanel:function(){var a=this;this.creditsPanel=new GS.UIComponents.MenuPanel(this.cvs,new THREE.Vector2(-400,-160),new THREE.Vector2(.5,.5),new THREE.Vector2(800,520),30,33),this.dblLabelCredits1=this.creditsPanel.addDoubleLabel('code, "art"',"sergiu valentin bucur"),this.creditsPanel.addEmptyRow(),this.dblLabelCredits23=this.creditsPanel.addDoubleLabel("music","DST"),this.dblLabelCredits24=this.creditsPanel.addDoubleLabel("","3uhox"),this.creditsPanel.addEmptyRow(),this.dblLabelCredits3=this.creditsPanel.addDoubleLabel("sound effects","freesound.org"),this.dblLabelCredits4=this.creditsPanel.addDoubleLabel("","opengameart.org"),this.creditsPanel.addEmptyRow(),this.dblLabelCredits5=this.creditsPanel.addDoubleLabel("skybox texture","alexcpeterson.com/spacescape"),this.creditsPanel.addEmptyRow(),this.dblLabelCredits6=this.creditsPanel.addDoubleLabel("frameworks","three.js"),this.dblLabelCredits7=this.creditsPanel.addDoubleLabel("","tween.js"),this.dblLabelCredits8=this.creditsPanel.addDoubleLabel("","jszip"),this.creditsPanel.addEmptyRow(),this.btnCreditsBack=this.creditsPanel.addButton("back"),this.btnCreditsBack.onClick=function(){a.activePanel=a.topPanel}},initFooter:function(){this.label2=new GS.UIComponents.MenuLabel(this.cvs,GS.GameVersion,new THREE.Vector2(-12,-130),new THREE.Vector2(1,1)),this.label2.textAlign="right",this.label2.fontSize=30,this.children.push(this.label2),this.label1=new GS.UIComponents.MenuLabel(this.cvs,GS.BuildReleaseDate,new THREE.Vector2(-12,-95),new THREE.Vector2(1,1)),this.label1.textAlign="right",this.label1.fontSize=30,this.children.push(this.label1),this.label3=new GS.UIComponents.MenuLabel(this.cvs,"feedback: timeinvariantgames @ gmail.com",new THREE.Vector2(-12,-25),new THREE.Vector2(1,1)),this.label3.textAlign="right",this.label3.fontSize=30,this.children.push(this.label3)},switchToIngame:function(){this.ingame=!0,this.btnCheats.disabled=!1,this.btnToggleGod.button.currentStateIndex=1,this.btnToggleFly.button.currentStateIndex=1,this.btnToggleNoclip.button.currentStateIndex=1},update:function(){this.activePanel.update();for(var a=0;a<this.children.length;a++)this.children[a].update()},draw:function(){this.ingame&&this.cvs.boxFill(this.background.offset,this.background.pos,this.background.size,!1,this.backgroundColor),this.cvs.drawImage(this.logo.offset,this.logo.pos,this.logo.image,this.logo.size,!0),this.activePanel.draw();for(var a=0;a<this.children.length;a++)this.children[a].draw()}},GS.UIComponents.MenuButton=function(a,b,c,d,e,f,g){this.cvs=a,this.fontSize=40,this.text=b,this.textBaseline="middle",this.textAlign="center",this.offset=c,this.pos=d,this.size=e,this.borderRadius=10,this.onClick=f||function(){},this.states=g,this._currentStateIndex=0,this.min=new THREE.Vector2,this.max=new THREE.Vector2,this.textOffset=this.offset.clone().add(this.size.clone().multiplyScalar(.5)),this.hover=!1,this.active=!1,this.disabled=!1,this.backgroundColor=GS.UIColors.buttonHover,this.foregroundColor=GS.UIColors.foregroundDisabled},GS.UIComponents.MenuButton.prototype={constructor:GS.UIComponents.MenuButton,init:function(){},update:function(){var a=GS.InputHelper.mouseX,b=GS.InputHelper.mouseY;this.cvs.convertToScreenCoords(this.pos,this.min,this.offset),this.max.copy(this.min).add(this.size),this.disabled?this.foregroundColor=GS.UIColors.foregroundDisabled:(this.foregroundColor=GS.UIColors.foreground,a>=this.min.x&&b>=this.min.y&&a<this.max.x&&b<this.max.y?(this.hover=!0,this.backgroundColor=GS.UIColors.buttonHover):this.hover=!1,this.hover&&(GS.InputHelper.leftMouseDown?(this.active=!0,this.backgroundColor=GS.UIColors.buttonActive):this.active&&(void 0!==this.states?(this._currentStateIndex++,this._currentStateIndex>=this.states.length&&(this._currentStateIndex=0),this.text=this.states[this._currentStateIndex],this.onClick({state:this.text,stateIndex:this._currentStateIndex})):this.onClick(),this.active=!1,this.backgroundColor=GS.UIColors.buttonHover)))},draw:function(){!this.disabled&&this.hover&&this.cvs.roundedBoxFill(this.offset,this.pos,this.size,!0,this.borderRadius,this.backgroundColor),this.cvs.text(this.textOffset,this.pos,this.text,this.foregroundColor,this.fontSize,this.textBaseline,this.textAlign,GS.UIFont)},set currentStateIndex(a){void 0!==this.states&&a>=0&&a<this.states.length&&(this._currentStateIndex=a,this.text=this.states[this._currentStateIndex])},get currentStateIndex(){return this._currentStateIndex}},GS.UIComponents.MenuImageButton=function(a,b,c,d,e,f,g,h){this.cvs=a,this.fontSize=e||40,this.offset=b,this.pos=c,this.size=d,this.text=f,this.image=g,this.onClick=h||function(){},this.init()},GS.UIComponents.MenuImageButton.prototype={constructor:GS.UIComponents.MenuImageButton,init:function(){var a=this,b=this.offset.clone(),c=new THREE.Vector2(this.size.x,this.size.y),d=new GS.UIComponents.MenuButton(this.cvs,this.text,b,this.pos,c,function(){a.onClick()});d.textOffset.x-=.1*this.size.x,d.textAlign="left",d.fontSize=this.fontSize,this.button=d,this.imageSize=new THREE.Vector2(231,130),this.imageOffset=this.offset.clone(),this.imageOffset.x+=.2*this.size.x-this.imageSize.x/2,this.imageOffset.y+=.5*this.size.y-this.imageSize.y/2},update:function(){this.button.update()},draw:function(){this.button.draw(),this.cvs.drawImage(this.imageOffset,this.pos,this.image,this.imageSize,!0)}},GS.UIComponents.MenuLabel=function(a,b,c,d){this.cvs=a,this.fontSize=40,this.text=b,this.textBaseline="middle",this.textAlign="center",this.offset=c,this.pos=d,this.foregroundColor=GS.UIColors.foreground},GS.UIComponents.MenuLabel.prototype={constructor:GS.UIComponents.MenuLabel,init:function(){},update:function(){},draw:function(){this.cvs.text(this.offset,this.pos,this.text,this.foregroundColor,this.fontSize,this.textBaseline,this.textAlign,GS.UIFont)}},GS.UIComponents.MenuNumberPicker=function(a,b,c,d,e,f,g,h,i,j){this.cvs=a,this.fontSize=e||40,this.offset=b,this.pos=c,this.size=d,this.value=void 0!==f?f:5,this.min=void 0!==g?g:1,this.max=void 0!==h?h:10,this.step=void 0!==i?i:1,this.onChange=j||function(){},this.init()},GS.UIComponents.MenuNumberPicker.prototype={constructor:GS.UIComponents.MenuNumberPicker,init:function(){var a=this,b=new THREE.Vector2(.2*this.size.x,this.size.y),c=this.offset.clone();this.leftButton=new GS.UIComponents.MenuButton(this.cvs,"<",c,this.pos,b),this.leftButton.fontSize=this.fontSize,this.leftButton.onClick=function(){a.value-=a.step,a.value=Math.max(a.min,a.value),a.label.text=a.value,a.onChange({value:a.value})};var d=this.offset.clone();d.x+=.8*this.size.x,this.rightButton=new GS.UIComponents.MenuButton(this.cvs,">",d,this.pos,b),this.rightButton.fontSize=this.fontSize,this.rightButton.onClick=function(){a.value+=a.step,a.value=Math.min(a.max,a.value),a.label.text=a.value,a.onChange({value:a.value})};var e=this.offset.clone();e.x+=.5*this.size.x,e.y+=.5*this.size.y,this.label=new GS.UIComponents.MenuLabel(this.cvs,this.value,e,this.pos),this.label.fontSize=this.fontSize},update:function(){this.leftButton.update(),this.rightButton.update()},draw:function(){this.leftButton.draw(),this.rightButton.draw(),this.label.draw()}},GS.UIComponents.MenuPanel=function(a,b,c,d,e,f){this.cvs=a,this.children=[],this.fontSize=e||40,this.offset=b,this.pos=c,this.size=d,this.rowHeight=f||40,this.rowOffset=0},GS.UIComponents.MenuPanel.prototype={constructor:GS.UIComponents.MenuPanel,init:function(){},addButton:function(a,b){var c=this.getRowOffset(),d=new THREE.Vector2(this.size.x,this.rowHeight),e=new GS.UIComponents.MenuButton(this.cvs,a,c,this.pos,d,b);return e.fontSize=this.fontSize,this.children.push(e),this.rowOffset+=this.rowHeight,e},addToggleButton:function(a,b,c,d){c=c||.2;var e=this.getRowOffset(),f=e.clone();f.x+=.5*this.size.x-10,f.y+=.5*this.rowHeight;var g=new GS.UIComponents.MenuLabel(this.cvs,a,f,this.pos);g.fontSize=this.fontSize,g.textAlign="right",this.children.push(g);var h=e.clone(),c=new THREE.Vector2(this.size.x*c,this.rowHeight);h.x+=.5*this.size.x+10,b=b||["on","off"];var i=new GS.UIComponents.MenuButton(this.cvs,b[0],h,this.pos,c,d,b);return i.fontSize=this.fontSize,this.children.push(i),this.rowOffset+=this.rowHeight,{label:g,button:i}},addDoubleLabel:function(a,b){var c=this.getRowOffset(),d=c.clone();d.x+=.5*this.size.x-30,d.y+=.5*this.rowHeight;var e=new GS.UIComponents.MenuLabel(this.cvs,a,d,this.pos);e.fontSize=this.fontSize,e.textAlign="right",this.children.push(e);var f=c.clone();f.x+=.5*this.size.x+30,f.y+=.5*this.rowHeight;var g=new GS.UIComponents.MenuLabel(this.cvs,b,f,this.pos);return g.fontSize=this.fontSize,g.textAlign="left",this.children.push(g),this.rowOffset+=this.rowHeight,{label1:e,label2:g}},addNumberPicker:function(a,b,c,d,e,f){var g=this.getRowOffset(),h=g.clone();h.x+=.5*this.size.x-10,h.y+=.5*this.rowHeight;var i=new GS.UIComponents.MenuLabel(this.cvs,a,h,this.pos);i.fontSize=this.fontSize,i.textAlign="right",this.children.push(i);var j=g.clone(),k=new THREE.Vector2(.2*this.size.x,this.rowHeight);j.x+=.5*this.size.x+10;var l=new GS.UIComponents.MenuNumberPicker(this.cvs,j,this.pos,k,this.fontSize,b,c,d,e,f);return this.children.push(l),this.rowOffset+=this.rowHeight,{label:i,numberPicker:l}},addImageButton:function(a,b,c){var d=this.getRowOffset(),e=d.clone(),f=new THREE.Vector2(this.size.x,this.rowHeight),g=new GS.UIComponents.MenuImageButton(this.cvs,e,this.pos,f,this.fontSize,a,b,c);return this.children.push(g),this.rowOffset+=this.rowHeight,g},addEmptyRow:function(){this.rowOffset+=this.rowHeight},getRowOffset:function(){var a=this.offset.clone();if(a.y+=this.rowOffset,Math.abs(a.y-this.offset.y)>this.size.y)throw"menu panel exceeds height";return a},update:function(){for(var a=0;a<this.children.length;a++)this.children[a].update()},draw:function(){for(var a=0;a<this.children.length;a++)this.children[a].draw()},add:function(a){this.children.push(a)}},GS.UIComponents.Notifications=function(a,b,c){this.cvs=a,this.assets=b,this.player=c,this.fontSize=40,this.boxCornerRadius=10,this.useText="["+GS.Keybinds.use.controlName+"] to use",this.pointerLockText="right-click to enable pointer lock",this.restartText="[ENTER] to restart level",this.usePopup={originalOffset:new THREE.Vector2(0,100),offset:new THREE.Vector2,pos:new THREE.Vector2(.5,.5),size:new THREE.Vector2(0,60),textOffset:new THREE.Vector2(0,0)},this.pointerLockPopup={originalOffset:new THREE.Vector2(0,100),offset:new THREE.Vector2,pos:new THREE.Vector2(.5,.5),size:new THREE.Vector2(0,60),textOffset:new THREE.Vector2(0,0)},this.restartPopup={originalOffset:new THREE.Vector2(0,100),offset:new THREE.Vector2,pos:new THREE.Vector2(.5,.5),size:new THREE.Vector2(0,60),textOffset:new THREE.Vector2(0,0)},this.calculateSizes(),this.visible=!0,this.oldShowUsePopup=!1,this.showUsePopup=!1,this.oldShowPointerLockPopup=!1,this.showPointerLockPopup=!1,this.oldShowRestartPopup=!1,this.showRestartPopup=!1},GS.UIComponents.Notifications.prototype={constructor:GS.UIComponents.Notifications,init:function(){},update:function(){this.showUsePopup=this.player.canUse,this.showUsePopup!=this.oldShowUsePopup&&(this.needsRedraw=!0,this.oldShowUsePopup=this.showUsePopup),this.showPointerLockPopup=!this.player.controls.pointerLockEnabled,this.showPointerLockPopup!=this.oldShowPointerLockPopup&&(this.needsRedraw=!0,this.oldShowPointerLockPopup=this.showPointerLockPopup),this.showRestartPopup=this.player.dead,this.showRestartPopup!=this.oldShowRestartPopup&&(this.needsRedraw=!0,this.oldShowRestartPopup=this.showRestartPopup)},draw:function(){this.showRestartPopup?this.drawPopup(this.restartText,this.restartPopup):this.showPointerLockPopup?this.drawPopup(this.pointerLockText,this.pointerLockPopup):this.showUsePopup&&this.drawPopup(this.useText,this.usePopup)},drawPopup:function(a,b){this.cvs.roundedBoxFill(b.offset,b.pos,b.size,!0,this.boxCornerRadius,GS.UIColors.background),this.cvs.text(b.textOffset,b.pos,a,GS.UIColors.foreground,this.fontSize,"middle","center",GS.UIFont)},calculateSizes:function(){this.calculatePopupSize(this.useText,this.usePopup),this.calculatePopupSize(this.pointerLockText,this.pointerLockPopup),this.calculatePopupSize(this.restartText,this.restartPopup)},calculatePopupSize:function(a,b,c){void 0===c&&(c=this.cvs.getTextWidth(a,this.fontSize,GS.UIFont));var d=15,e=c+2*d;b.size.x=e,b.offset.x=-e/2,b.offset.y=b.originalOffset.y-b.size.y,b.textOffset.copy(b.offset).add(b.size.clone().multiplyScalar(.5))}},GS.UIComponents.PowerBars=function(a,b,c){this.cvs=a,this.assets=b,this.player=c,this.fontSize=60,this.boxCornerRadius=10,this.healthBar={offset:new THREE.Vector2(20,-20),pos:new THREE.Vector2(0,1),size:new THREE.Vector2(220,90),textOffset:new THREE.Vector2(95,4),imageOffset:new THREE.Vector2(20,20),imageAtlasOffset:new THREE.Vector2(0,0),imageAtlasSize:new THREE.Vector2(64,64)},this.healthBar.offset.y-=this.healthBar.size.y,this.healthBar.imageOffset.add(this.healthBar.offset),this.healthBar.textOffset.add(this.healthBar.offset).add(this.healthBar.size.clone().multiplyScalar(.5)),this.ammoBar={offset:new THREE.Vector2(-20,-20),pos:new THREE.Vector2(1,1),size:new THREE.Vector2(220,90),textOffset:new THREE.Vector2(95,4),imageOffset:new THREE.Vector2(20,20),imageAtlasOffset:new THREE.Vector2(64,0),imageAtlasSize:new THREE.Vector2(64,64)},this.ammoBar.offset.sub(this.ammoBar.size),this.ammoBar.imageOffset.add(this.ammoBar.offset),this.ammoBar.textOffset.add(this.ammoBar.offset).add(this.ammoBar.size.clone().multiplyScalar(.5)),this.tex=this.assets.images.hud,this.visible=!0,this.ammo=void 0,this.health="",this.oldHealth=-1,this.oldAmmo=-1},GS.UIComponents.PowerBars.prototype={constructor:GS.UIComponents.PowerBars,init:function(){},update:function(){this.health=Math.floor(this.player.health),this.ammo=void 0===this.player.weapon||this.player.weapon.infiniteAmmo?void 0:this.player.weapon.ammo,(this.health!=this.oldHealth||this.ammo!=this.oldAmmo)&&(this.needsRedraw=!0,this.oldHealth=this.health,this.oldAmmo=this.ammo)},draw:function(){this.cvs.roundedBoxFill(this.healthBar.offset,this.healthBar.pos,this.healthBar.size,!0,this.boxCornerRadius,GS.UIColors.background),this.cvs.text(this.healthBar.textOffset,this.healthBar.pos,this.health,GS.UIColors.foreground,this.fontSize,"middle","right",GS.UIFont),this.cvs.drawImageFromAtlas(this.healthBar.imageOffset,this.healthBar.pos,this.tex,this.healthBar.imageAtlasOffset,this.healthBar.imageAtlasSize),void 0!==this.ammo&&(this.cvs.roundedBoxFill(this.ammoBar.offset,this.ammoBar.pos,this.ammoBar.size,!0,this.boxCornerRadius,GS.UIColors.background),this.cvs.text(this.ammoBar.textOffset,this.ammoBar.pos,this.ammo,GS.UIColors.foreground,this.fontSize,"middle","right",GS.UIFont),this.cvs.drawImageFromAtlas(this.ammoBar.imageOffset,this.ammoBar.pos,this.tex,this.ammoBar.imageAtlasOffset,this.ammoBar.imageAtlasSize))}},GS.UIComponents.WinScreen=function(a,b,c){this.cvs=a,this.assets=b,this.player=c,this.fontSize=40,this.rowHeight=45,this.boxCornerRadius=10,this.aiManager=c.grid.aiManager,this.mapName="map name",this.hasNextMap=!1,this.monstersKilled=0,this.maxMonsters=0,this.itemsPickedUp=0,this.maxItems=0,this.secretsFound=0,this.maxSecrets=0,this.minutes="00",this.seconds="00",this.popup={offset:new THREE.Vector2(-480,-315),pos:new THREE.Vector2(.5,.5),size:new THREE.Vector2(960,630)},this.textOffsetLeft=new THREE.Vector2(-30,-247),this.textOffsetRight=new THREE.Vector2(30,-247),this.textOffsetCenter=new THREE.Vector2(0,-247),this.visible=!1},GS.UIComponents.WinScreen.prototype={constructor:GS.UIComponents.WinScreen,init:function(){},update:function(){!this.visible&&void 0!==this.aiManager.script&&this.aiManager.script.mapWon&&(this.collectData(),this.visible=!0)},collectData:function(){var a=this.aiManager.script;this.mapName=a.mapName,this.hasNextMap=void 0!==a.nextMap,this.monstersKilled=this.aiManager.monstersKilled,this.maxMonsters=this.aiManager.maxMonsters,this.itemsPickedUp=this.aiManager.itemsPickedUp,this.maxItems=this.aiManager.maxItems,this.secretsFound=a.secretsFound,this.maxSecrets=a.maxSecrets,this.minutes=GS.pad(this.aiManager.minutes,2),this.seconds=GS.pad(this.aiManager.seconds,2)},draw:function(){this.cvs.roundedBoxFill(this.popup.offset,this.popup.pos,this.popup.size,!0,this.boxCornerRadius,GS.UIColors.menuBackground),this.drawMessage('"'+this.mapName+'" complete',0),this.drawField("monsters killed",this.monstersKilled+" / "+this.maxMonsters,2),this.drawField("items picked up",this.itemsPickedUp+" / "+this.maxItems,3),this.drawField("secrets found",this.secretsFound+" / "+this.maxSecrets,4),this.drawField("time spent",this.minutes+":"+this.seconds,6),this.hasNextMap?this.drawMessage("[ENTER] to continue to the next level",11):(this.drawMessage("congrats!",10),this.drawMessage("this concludes the current release",11))},drawField:function(){var a=new THREE.Vector2,b=new THREE.Vector2;return function(c,d,e){a.copy(this.textOffsetLeft),a.y+=e*this.rowHeight,b.copy(this.textOffsetRight),b.y+=e*this.rowHeight,this.cvs.text(a,this.popup.pos,c,GS.UIColors.foreground,this.fontSize,"middle","right",GS.UIFont),this.cvs.text(b,this.popup.pos,d,GS.UIColors.foreground,this.fontSize,"middle","left",GS.UIFont)}}(),drawMessage:function(){var a=new THREE.Vector2;return function(b,c){a.copy(this.textOffsetCenter),a.y+=c*this.rowHeight,this.cvs.text(a,this.popup.pos,b,GS.UIColors.foreground,this.fontSize,"middle","center",GS.UIFont)}}()},GS.CollisionHelper={gravity:new THREE.Vector3(0,-1.5,0),unitsPerMeter:100,handleCollisionsSliding:function(a,b,c,d,e){return this.handleCollisions(a,b,c,d,e,!1,!1)},handleCollisionsFirstHit:function(a,b,c,d,e){return this.handleCollisions(a,b,c,d,e,!0,!1)},handleCollisions:function(){var a={ellipsoidSpace:new THREE.Vector3,worldPosition:new THREE.Vector3,worldVelocity:new THREE.Vector3,lspPosition:new THREE.Vector3,lspVelocity:new THREE.Vector3,lspNormalizedVelocity:new THREE.Vector3,normal:new THREE.Vector3,foundCollision:!1,nearestDistance:0,intersectionPoint:new THREE.Vector3,collisionRecursionDepth:0,stopOnFirstHit:!1,gravityFactor:0};return function(b,c,d,e,f,g){a.ellipsoidSpace.copy(e),a.worldPosition.copy(b),a.worldVelocity.subVectors(c,b),a.foundCollision=!1,a.nearestDistance=0,a.collisionRecursionDepth=0,a.stopOnFirstHit=g,a.gravityFactor=d;var h=this.collisionSlide(a,f);return c.copy(h.pos),h}}(),collisionSlide:function(a,b){a.lspVelocity.copy(a.worldVelocity).divide(a.ellipsoidSpace),a.lspPosition.copy(a.worldPosition).divide(a.ellipsoidSpace);var c=a.lspPosition.y;a.collisionRecursionDepth=0;var d=this.collideWithWorld(a,b),e=c<d.y;0===a.gravityFactor||e||a.horizontalOnly||(a.lspVelocity.copy(this.gravity),a.lspVelocity.y*=a.gravityFactor,a.lspVelocity.divide(a.ellipsoidSpace),a.lspPosition.copy(d),a.collisionRecursionDepth=0,d=this.collideWithWorld(a,b)),d.multiply(a.ellipsoidSpace),a.horizontalOnly&&(d.y=a.originalHeight);var f={pos:d,climbing:e,foundCollision:a.foundCollision,gridObject:a.gridObject,normal:a.normal};return f},collideWithWorld:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3,d=new THREE.Vector3,e=new THREE.Vector3,f=new THREE.Vector3,g=new THREE.Vector3,h=new THREE.Vector3,i=new THREE.Vector3,j=new THREE.Vector3,k=new THREE.Vector3,l=new THREE.Vector3;return function(m,n){var o=this,p=this.unitsPerMeter/100,q=.005*p;if(m.collisionRecursionDepth>5)return m.lspPosition;if(m.lspNormalizedVelocity.copy(m.lspVelocity).normalize(),m.foundCollision=!1,m.nearestDistance=0,n(function(c,d,e,f){GAME.grid.totalSphereTriangleChecks++,j.copy(d).divide(m.ellipsoidSpace),k.copy(e).divide(m.ellipsoidSpace),l.copy(f).divide(m.ellipsoidSpace),b.subVectors(l,j),a.copy(k).sub(j).cross(b).normalize(),o.sphereCollidingWithTriangle(c,m,j,k,l,a)}),!m.foundCollision)return c.copy(m.lspPosition).add(m.lspVelocity),c;if(d.copy(m.lspPosition).add(m.lspVelocity),e.copy(m.lspPosition),m.nearestDistance>=q&&(b.copy(m.lspVelocity).normalize(),b.multiplyScalar(m.nearestDistance-q),e.copy(m.lspPosition).add(b),b.normalize().multiplyScalar(q),m.intersectionPoint.sub(b)),m.stopOnFirstHit)return m.lspPosition.copy(e),m.lspPosition;f.copy(m.intersectionPoint),g.copy(e).sub(m.intersectionPoint).normalize();var r=f.x,s=f.y,t=f.z,u=g.x,v=g.y,w=g.z,x=-(u*r+v*s+w*t),y=x,z=g.dot(d)+y;return b.copy(g).multiplyScalar(z),h.copy(d).sub(b),i.copy(h).sub(m.intersectionPoint),i.length()<q?e:(m.collisionRecursionDepth++,m.lspPosition.copy(e),m.lspVelocity.copy(i),this.collideWithWorld(m,n))}}(),sphereCollidingWithTriangle:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3,d=new THREE.Vector3,e=new THREE.Vector3,f=new THREE.Vector3,g=new THREE.Vector3;return function(h,i,j,k,l,m){var n=m.dot(i.lspNormalizedVelocity);if(0>=n){a.copy(i.lspVelocity),b.copy(i.lspPosition);var o,p,q=!1,r=m.x,s=m.y,t=m.z,u=-(r*j.x+s*j.y+t*j.z),v=u,w=b.dot(m)+v,x=m.dot(a);if(0===x){if(Math.abs(w)>=1)return!1;q=!0}else{if(o=(1-w)/x,p=(-1-w)/x,o>p){var y=o;o=p,p=y}if(o>1||0>p)return!1;0>o&&(o=0),p>1&&(p=1)}var z=!1,A=1;if(q||(c.copy(a).multiplyScalar(o),d.copy(b).add(c).sub(m),this.checkPointInTriangle(d,j,k,l)&&(z=!0,A=o,e.copy(d))),!z){var B,C,D,E=a.lengthSq();B=E;var F={};c.copy(b).sub(j),C=2*a.dot(c),c.copy(j).sub(b),D=c.length(),D=D*D-1,this.getLowestRoot(B,C,D,A,F)&&(A=F.root,z=!0,e.copy(j)),c.copy(b).sub(k),C=2*a.dot(c),c.copy(k).sub(b),D=c.length(),D=D*D-1,this.getLowestRoot(B,C,D,A,F)&&(A=F.root,z=!0,e.copy(k)),c.copy(b).sub(l),C=2*a.dot(c),c.copy(l).sub(b),D=c.length(),D=D*D-1,this.getLowestRoot(B,C,D,A,F)&&(A=F.root,z=!0,e.copy(l)),f.copy(k).sub(j),g.copy(j).sub(b);var G=f.lengthSq(),H=f.dot(a),I=f.dot(g),J=g.lengthSq();if(B=G*-E+H*H,C=2*G*a.dot(g)-2*H*I,D=G*(1-J)+I*I,this.getLowestRoot(B,C,D,A,F)){var K=(H*F.root-I)/G;K>=0&&1>=K&&(A=F.root,z=!0,f.multiplyScalar(K),e.copy(j).add(f))}if(f.copy(l).sub(k),g.copy(k).sub(b),G=f.lengthSq(),H=f.dot(a),I=f.dot(g),J=g.lengthSq(),B=G*-E+H*H,C=2*G*a.dot(g)-2*H*I,D=G*(1-J)+I*I,this.getLowestRoot(B,C,D,A,F)){var K=(H*F.root-I)/G;K>=0&&1>=K&&(A=F.root,z=!0,f.multiplyScalar(K),e.copy(k).add(f))}if(f.copy(j).sub(l),g.copy(l).sub(b),G=f.lengthSq(),H=f.dot(a),I=f.dot(g),J=g.lengthSq(),B=G*-E+H*H,C=2*G*a.dot(g)-2*H*I,D=G*(1-J)+I*I,this.getLowestRoot(B,C,D,A,F)){var K=(H*F.root-I)/G;K>=0&&1>=K&&(A=F.root,z=!0,f.multiplyScalar(K),e.copy(l).add(f))}}if(z){var L=A*a.length();if(!i.foundCollision||L<i.nearestDistance)return i.nearestDistance=L,i.intersectionPoint.copy(e),i.foundCollision=!0,i.normal.copy(m),i.gridObject=h,!0}}return!1}}(),checkPointInTriangle:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3,d=new THREE.Vector3;return function(e,f,g,h){return c.copy(h).sub(g),d.copy(e).sub(g),a.crossVectors(c,d),c.copy(h).sub(g),d.copy(f).sub(g),b.crossVectors(c,d),a.dot(b)>=0&&(c.copy(h).sub(f),d.copy(e).sub(f),a.crossVectors(c,d),c.copy(h).sub(f),d.copy(g).sub(f),b.crossVectors(c,d),a.dot(b)>=0&&(c.copy(g).sub(f),d.copy(e).sub(f),a.crossVectors(c,d),c.copy(g).sub(f),d.copy(h).sub(f),b.crossVectors(c,d),a.dot(b)>=0))?!0:void 0}}(),getLowestRoot:function(a,b,c,d,e){var f=b*b-4*a*c;
if(0>f)return!1;var g=Math.sqrt(f),h=(-b-g)/(2*a),i=(-b+g)/(2*a);if(h>i){var j=i;i=h,h=j}return h>0&&d>h?(e.root=h,!0):i>0&&d>i?(e.root=i,!0):!1}},GS.HitscanHelper={unitLength:64,steps:5,spread:function(a,b,c,d){for(var e=a.spread.angleOffset+20*(Math.abs(c-90)/90)*(Math.abs(c-90)/90),f=a.spread.angleOffset,g=0;g<a.spread.shots;g++){var h=b+Math.random()*e*2-e,i=c+Math.random()*f*2-f,j=Math.sin(Math.PI/180*i)*Math.cos(Math.PI/180*h),k=Math.cos(Math.PI/180*i),l=Math.sin(Math.PI/180*i)*Math.sin(Math.PI/180*h),m=new THREE.Vector3(j,k,l);m.normalize(),d(m)}},getIntersection:function(){{var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3,d=[new THREE.Vector2,new THREE.Vector2],e=new THREE.Ray;new THREE.Vector3}return function(f,g,h,i,j,k,l){k=k||this.steps,a.copy(f),b.copy(g).multiplyScalar(this.unitLength);var m={type:GS.CollisionTypes.None,pos:new THREE.Vector3,gridObject:null,distance:1/0,normal:new THREE.Vector3};e.set(f,g);for(var n=0;k>n;n++){c.copy(a).add(b),a.toVector2(d[0]),c.toVector2(d[1]);var o=h.getGridLocationFromPoints(d);if(void 0===o)break;if(this.checkEnvironmentIntersection(e,h,o,i,m,l),this.checkEntityIntersection(e,h,o,j,m,l),m.type!==GS.CollisionTypes.None)break;a.add(b)}return m}}(),checkEnvironmentIntersection:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d,e,f,g,h){var i=d.getTriangleIterator(e,f);i(function(d,e,f,i){if(d!==h&&null!==c.intersectTriangle(e,f,i,!0,b)){var j=b.distanceToSquared(c.origin);j<g.distance&&(g.type=GS.CollisionTypes.Environment,a.subVectors(i,e),g.normal.copy(f).sub(e).cross(a).normalize(),g.pos.copy(b).add(g.normal),g.distance=j,g.gridObject=d)}})}}(),checkEntityIntersection:function(){var a=new THREE.Vector3;return function(b,c,d,e,f,g){var h=c.getCellsFromGridLocation(d);c.forEachUniqueGridObjectInCells(h,e,function(c){if(!c.dead&&c!==g&&null!==b.intersectBox(c.view.collisionData.boundingBox,a)){var d=a.distanceToSquared(b.origin);d<f.distance&&(f.type=GS.CollisionTypes.Entity,f.pos.copy(a),f.distance=d,f.gridObject=c)}})}}()},GS.RegionHelper=function(){this.material=new GS.MeshVertexColorMaterial},GS.RegionHelper.prototype={constructor:GS.RegionHelper,getRegions:function(a,b){var c=this.getSectorGraph(a,b);return c.regions=this.constructRegions(c.sectorDict,c.sectorGraph),c},getSectorGraph:function(a,b){for(var c=new GS.Graph(function(a,b){return a.id==b.id}),d={},e=0;e<b.length;e+=2){var f=this.getSectorById(a,b[e]),g=this.getSectorById(a,b[e+1]);d[f.id]={index:-1,sector:f,center:GS.PolygonHelper.getSectorCentroid(f)},d[g.id]={index:-1,sector:g,center:GS.PolygonHelper.getSectorCentroid(g)},c.addEdge(f,g)}for(var h=Object.keys(d),e=0;e<h.length;e++){var i=d[h[e]];i.index=c.getVertexIndex(i.sector)}return c.computeVertexNeighborSets(),{sectorGraph:c,sectorDict:d}},constructRegions:function(a,b){this.regionIdCount=0;var c=[],d=0,e={};for(var f in a)if(a[f].sector.door){for(var g=b.neighborSets[a[f].index].elements,h=0;h<g.length;h++){var i=g[h].id;c.push({id:i,seed:i}),e[i]={doorIds:{},sectorIds:{}}}d++}var j=[];if(d>0){for(var k={};c.length>0;){var l=c.pop(),i=l.id,m=l.seed;if(a[i].sector.door&&(e[m].doorIds[i]=!0),!k[i]&&(k[i]=!0,e[m].sectorIds[i]=!0,!a[i].sector.door))for(var g=b.neighborSets[a[i].index].elements,f=0;f<g.length;f++){var n=a[g[f].id],i=n.sector.id;c.push({id:i,seed:m})}}for(var f in e){var o=e[f].sectorIds;Object.keys(o).length>0&&j.push(this.getNewRegion(e[f].doorIds,o))}for(var f=0;f<j.length;f++){var p=j[f];p.linkedRegions=[];for(var h in p.doorIds)for(var q=0;q<j.length;q++)if(q!==f){var r=j[q];for(var s in r.doorIds)if(s===h){p.linkedRegions.push({doorId:s,region:r});break}}}}else{var p=this.getNewRegion();for(var f in this.sectorDict)p.sectorIds[f]=!0;j.push(p)}return j},getNewRegion:function(a,b){var c={id:this.regionIdCount,doorIds:a||{},sectorIds:b||{},monsters:[]},d=new THREE.Mesh(new THREE.Geometry,this.material);return d.matrixAutoUpdate=!1,c.mesh=d,this.regionIdCount++,c},getSectorById:function(a,b){for(var c=0;c<a.length;c++)if(a[c].id==b)return a[c];throw"sector "+b+" not found"}},GS.BrightnessFilterShader={uniforms:{tDiffuse:{type:"t",value:null}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 texel = texture2D(tDiffuse, vUv);","float lum = dot(texel, vec4(0.299, 0.587, 0.114, 0.0));","lum = step(0.9999, lum);","gl_FragColor = vec4(texel.xyz * lum, 1.0);","}"].join("\n")},GS.ColorShader={uniforms:{tDiffuse:{type:"t",value:null},color:{type:"c",value:new THREE.Color(16777215)}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);","}"].join("\n"),fragmentShader:["uniform vec3 color;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 texel = texture2D(tDiffuse, vUv);","gl_FragColor = vec4(texel.xyz + color.xyz * 0.75, 1.0);","}"].join("\n")},GS.GlowShader={uniforms:{tDiffuse:{type:"t",value:null},tGlow:{type:"t",value:null},intensity:{type:"f",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);","}"].join("\n"),fragmentShader:["uniform float intensity;","uniform sampler2D tDiffuse;","uniform sampler2D tGlow;","varying vec2 vUv;","void main() {","vec4 texel = texture2D(tDiffuse, vUv);","vec4 glow = texture2D(tGlow, vUv);","gl_FragColor = vec4(texel.xyz + glow.xyz * intensity, 1.0);","}"].join("\n")},GS.MeshPhongGlowMaterial=function(a,b,c,d,e){this.shader=GS.PhongGlowShader,this.uniforms=THREE.UniformsUtils.clone(this.shader.uniforms),this.uniforms.map.value=a,this.uniforms.glowMap.value=b,this.uniforms.normalMap.value=c,this.uniforms.emissive.value=new THREE.Color(d||0),this.uniforms.glowIntensity.value=void 0!==e?e:1,THREE.ShaderMaterial.call(this,{uniforms:this.uniforms,fragmentShader:this.shader.fragmentShader,vertexShader:this.shader.vertexShader,lights:!0}),this.map=!0,this.normalMap=void 0!==c&&null!==c},GS.MeshPhongGlowMaterial.prototype=GS.inherit(THREE.ShaderMaterial,{constructor:GS.MeshPhongGlowMaterial,clone:function(){var a=new GS.MeshPhongGlowMaterial(this.uniforms.map.value,this.uniforms.glowMap.value,this.uniforms.normalMap.value,this.uniforms.emissive.value,this.uniforms.glowIntensity.value);return a},get emissive(){return this.uniforms.emissive.value},set glowIntensity(a){this.uniforms.glowIntensity.value=a},get glowIntensity(){return this.uniforms.glowIntensity.value}}),GS.MeshVertexColorMaterial=function(){this.shader=GS.VertexColorShader,this.uniforms=THREE.UniformsUtils.clone(this.shader.uniforms),THREE.ShaderMaterial.call(this,{uniforms:this.uniforms,attributes:{emissive:{type:"c",value:[]}},fragmentShader:this.shader.fragmentShader,vertexShader:this.shader.vertexShader,vertexColors:THREE.FaceColors,lights:!0})},GS.MeshVertexColorMaterial.prototype=GS.inherit(THREE.ShaderMaterial,{constructor:GS.MeshVertexColorMaterial,clone:function(){var a=new GS.MeshVertexColorMaterial;return a}}),GS.NoiseShader={uniforms:{tDiffuse:{type:"t",value:null},tNoise:{type:"t",value:null},ratio:{type:"v2",value:new THREE.Vector2(1,1)},intensity:{type:"f",value:.05}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform sampler2D tNoise;","uniform vec2 ratio;","uniform float intensity;","varying vec2 vUv;","void main() {","vec4 cDiffuse = texture2D(tDiffuse, vUv);","vec4 cNoise = texture2D(tNoise, vUv * ratio);","gl_FragColor = vec4(cDiffuse.xyz + cNoise.xyz * intensity - intensity * 0.5, 1.0);","}"].join("\n")},GS.PhongGlowShader={uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)},glowMap:{type:"t",value:null},glowIntensity:{type:"f",value:1}}]),vertexShader:["#define PHONG","varying vec3 vViewPosition;","varying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.defaultnormal_vertex,"	vNormal = normalize( transformedNormal );",THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"	vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform vec3 ambient;","uniform vec3 emissive;","uniform vec3 specular;","uniform float shininess;","uniform sampler2D glowMap;","uniform float glowIntensity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	gl_FragColor = vec4( vec3( 1.0 ), opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,"	float glow = texture2D(glowMap, vUv).x * glowIntensity * 2.0;","	gl_FragColor.xyz = texelColor.xyz * clamp(emissive + totalDiffuse + ambientLightColor * ambient + glow, 0.0, 2.0) + totalSpecular;",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},GS.RandomNoiseShader={uniforms:{tDiffuse:{type:"t",value:null},intensity:{type:"f",value:.05},seed:{type:"v2",value:new THREE.Vector2(Math.random(),Math.random())}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform float intensity;","uniform vec2 seed;","varying vec2 vUv;","highp float rand(vec2 co)","{","highp float a = 12.9898;","highp float b = 78.233;","highp float c = 43758.5453;","highp float dt = dot(co.xy, vec2(a,b));","highp float sn = mod(dt, 3.14);","return fract(sin(sn) * c);","}","void main() {","vec4 cDiffuse = texture2D(tDiffuse, vUv);","gl_FragColor = vec4(cDiffuse.xyz - rand(vUv + seed) * intensity, 1.0);","}"].join("\n")},GS.VertexColorShader={uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,{ambient:{type:"c",value:new THREE.Color(16777215)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG","varying vec3 vViewPosition;","varying vec3 vNormal;",THREE.ShaderChunk.lights_phong_pars_vertex,"#ifdef USE_COLOR","attribute vec3 emissive;","varying vec3 vColor;","varying vec3 vEmissive;","#endif","void main() {","#ifdef USE_COLOR","#ifdef GAMMA_INPUT","vColor = color * color;","#else","vColor = color;","#endif","vEmissive = emissive;","#endif",THREE.ShaderChunk.defaultnormal_vertex,"vNormal = normalize( transformedNormal );",THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.lights_phong_vertex,"}"].join("\n"),fragmentShader:["#define PHONG","uniform vec3 diffuse;","uniform float opacity;","uniform vec3 ambient;","uniform vec3 specular;","uniform float shininess;","#ifdef USE_COLOR","varying vec3 vColor;","varying vec3 vEmissive;","#endif",THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( vec3( 1.0 ), opacity );",THREE.ShaderChunk.specularmap_fragment,"vec3 emissive = vEmissive;",THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},GS.AssetTypes={Texture:0,Mesh:1,Sound:2,CubeTexture:3,UIWidget:4,Map:5,Script:6,MusicTrack:7},GS.TextureTypes={Map:0,TVScreen:1,Entity:2},GS.CubeTextureExtension=".jpg",GS.CubeTextureNames=["left","right","top","bottom","front","back"],GS.CustomFontFile="capsuula.woff",GS.Assets={},GS.Assets[GS.AssetTypes.Texture]={cyan_wall:{filename:"cyan_wall.png",type:GS.TextureTypes.Map},red_wall:{filename:"red_wall.png",type:GS.TextureTypes.Map},blue_metal:{filename:"blue_metal.png",type:GS.TextureTypes.Map},white:{filename:"white.png",type:GS.TextureTypes.Map},wall:{filename:"wall.png",type:GS.TextureTypes.Map},metal:{filename:"metal.png",type:GS.TextureTypes.Map},light:{filename:"light.png",type:GS.TextureTypes.Map},red:{filename:"red.png",type:GS.TextureTypes.Map},blue:{filename:"blue.png",type:GS.TextureTypes.Map},cyan:{filename:"cyan.png",type:GS.TextureTypes.Map},brown:{filename:"brown.png",type:GS.TextureTypes.Map},exit:{filename:"exit.png",type:GS.TextureTypes.TVScreen,showInMapEditor:!0},switch_off:{filename:"switch_off.png",type:GS.TextureTypes.TVScreen},switch_on:{filename:"switch_on.png",type:GS.TextureTypes.TVScreen},ammo:{filename:"ammo.png",type:GS.TextureTypes.Entity},ammo_glow:{filename:"ammo_glow.png",type:GS.TextureTypes.Entity},medkit:{filename:"medkit.png",type:GS.TextureTypes.Entity},medkit_glow:{filename:"medkit_glow.png",type:GS.TextureTypes.Entity},pistol:{filename:"pistol.png",type:GS.TextureTypes.Entity},pistol_glow:{filename:"pistol_glow.png",type:GS.TextureTypes.Entity},double_shotgun:{filename:"double_shotgun.png",type:GS.TextureTypes.Entity},double_shotgun_glow:{filename:"double_shotgun_glow.png",type:GS.TextureTypes.Entity},hyper_blaster:{filename:"hyper_blaster.png",type:GS.TextureTypes.Entity},hyper_blaster_glow:{filename:"hyper_blaster_glow.png",type:GS.TextureTypes.Entity},nom:{filename:"nom.png",type:GS.TextureTypes.Entity},nom_glow:{filename:"nom_glow.png",type:GS.TextureTypes.Entity},eye:{filename:"eye.png",type:GS.TextureTypes.Entity},eye_glow:{filename:"eye_glow.png",type:GS.TextureTypes.Entity}},GS.Assets[GS.AssetTypes.CubeTexture]={skybox1:{filename:"skybox1"}},GS.Assets[GS.AssetTypes.UIWidget]={hud:{filename:"hud.png"},logo:{filename:"logo.png"},menu_back:{filename:"menu_back.png"},thumb_airstrip1:{filename:"thumb_airstrip1.png"},thumb_drencrom:{filename:"thumb_drencrom.png"},thumb_sacrosanct:{filename:"thumb_sacrosanct.png"}},GS.Assets[GS.AssetTypes.Mesh]={ammo:{filename:"ammo.js"},medkit:{filename:"medkit.js"},pistol:{filename:"pistol.js"},double_shotgun:{filename:"double_shotgun.js"},hyper_blaster:{filename:"hyper_blaster.js"},nom_walk0:{filename:"nom_walk0.js"},nom_walk1:{filename:"nom_walk1.js"},nom_walk2:{filename:"nom_walk2.js"},nom_walk3:{filename:"nom_walk3.js"},nom_walk4:{filename:"nom_walk4.js"},nom_walk5:{filename:"nom_walk5.js"},nom_death0:{filename:"nom_death0.js"},nom_death1:{filename:"nom_death1.js"},nom_death2:{filename:"nom_death2.js"},nom_death3:{filename:"nom_death3.js"},eye_walk0:{filename:"eye_walk0.js"},eye_walk1:{filename:"eye_walk1.js"},eye_walk2:{filename:"eye_walk2.js"},eye_walk3:{filename:"eye_walk3.js"},eye_death0:{filename:"eye_death0.js"},eye_death1:{filename:"eye_death1.js"},eye_death2:{filename:"eye_death2.js"},eye_death3:{filename:"eye_death3.js"},eye_attack0:{filename:"eye_attack0.js"},eye_attack1:{filename:"eye_attack1.js"}},GS.Assets[GS.AssetTypes.Sound]={door_close:{filename:"door_close.ogg",allowMultipleAtOnce:!0},door_open:{filename:"door_open.ogg",allowMultipleAtOnce:!0},elevator_move:{filename:"elevator_move.ogg",allowMultipleAtOnce:!0},elevator_stop:{filename:"elevator_stop.ogg",allowMultipleAtOnce:!0},hyper_blaster_fire:{filename:"hyper_blaster_fire.ogg",allowMultipleAtOnce:!0},hyper_blaster_hit:{filename:"hyper_blaster_hit.ogg",allowMultipleAtOnce:!0},monster_pain:{filename:"monster_pain.ogg",allowMultipleAtOnce:!1},monster_roar:{filename:"monster_roar.ogg",allowMultipleAtOnce:!0},monster_bite:{filename:"monster_bite.ogg",allowMultipleAtOnce:!0},monster_death:{filename:"monster_death.ogg",allowMultipleAtOnce:!0},eye_charging:{filename:"eye_charging.ogg",allowMultipleAtOnce:!0},pickup_ammo:{filename:"pickup_ammo.ogg",allowMultipleAtOnce:!0},pickup_item:{filename:"pickup_item.ogg",allowMultipleAtOnce:!0},pickup_weapon:{filename:"pickup_weapon.ogg",allowMultipleAtOnce:!0},shotgun_fire:{filename:"shotgun_fire.ogg",allowMultipleAtOnce:!0},player_death:{filename:"player_death.ogg",allowMultipleAtOnce:!0},switch_on:{filename:"switch_on.ogg",allowMultipleAtOnce:!0},none:{filename:"none.ogg",allowMultipleAtOnce:!0}},GS.Assets[GS.AssetTypes.MusicTrack]={simple_action_beat:{filename:"simple_action_beat.ogg"},tower_defense_theme:{filename:"tower_defense_theme.ogg"},angry_robot_3:{filename:"angry_robot_3.ogg"}},GS.Assets[GS.AssetTypes.Map]={airstrip1:{filename:"airstrip1.js"},drencrom:{filename:"drencrom.js"},sacrosanct:{filename:"sacrosanct.js"}},GS.Assets[GS.AssetTypes.Script]={airstrip1:{filename:"airstrip1.js"},drencrom:{filename:"drencrom.js"},sacrosanct:{filename:"sacrosanct.js"}},GS.MonsterAttackTypes={Melee:0,Ranged:1},GS.Monsters={nom:{size:new THREE.Vector3(7.2,8,7.2),scale:new THREE.Vector3(.9,.9,.9),offset:new THREE.Vector3(3.6,8.03,3.6),speed:.75,rotationOffset:Math.PI,painChance:.25,attackType:GS.MonsterAttackTypes.Melee,maxHealth:160,meleeDamage:10,meleeAttackMaxCooldown:GS.msToFrames(500),meleeRange:15,walkDelay:5,bloodColor:(new THREE.Color).setRGB(1,0,0).getHex(),roarSound:"monster_roar",meleeAttackSound:"monster_bite",painSound:"monster_pain",deathSound:"monster_death"},eye:{size:new THREE.Vector3(5.6,8,5.6),scale:new THREE.Vector3(.5,.5,.5),offset:new THREE.Vector3(2.8,8.03,2.8),speed:.25,rotationOffset:Math.PI,painChance:.75,attackType:GS.MonsterAttackTypes.Ranged,maxHealth:50,meleeRange:15,rangedAttackMaxCooldown:GS.msToFrames(1500),rangedAttackCooldownRandomModifier:GS.msToFrames(1e3),rangedAttackRange:200,rangedAttackProjectile:"eye_bolt",rangedAttackChargeMaxCooldown:GS.msToFrames(500),preferredMaxDistance:100,walkDelay:15,bloodColor:(new THREE.Color).setRGB(0,1,1).getHex(),roarSound:"monster_roar",rangedAttackChargeUpSound:"eye_charging",painSound:"monster_pain",deathSound:"monster_death"}},GS.Projectiles={pistol_bolt:{hitSound:"hyper_blaster_hit",size:new THREE.Vector3(1,1,1),visualSize:new THREE.Vector3(1,1,3),rotating:!1,speed:5,maxDistance:500,color:(new THREE.Color).setRGB(1,1,1).getHex(),damage:10},hyper_blaster_bolt:{hitSound:"hyper_blaster_hit",size:new THREE.Vector3(1,1,1),visualSize:new THREE.Vector3(1,1,3),rotating:!1,speed:5,maxDistance:500,color:(new THREE.Color).setRGB(1,1,1).getHex(),damage:10},eye_bolt:{hitSound:"hyper_blaster_hit",size:new THREE.Vector3(2,2,2),visualSize:new THREE.Vector3(3,3,3),rotating:!0,speed:2,maxDistance:500,color:(new THREE.Color).setRGB(1,1,1).getHex(),damage:20}},GS.Weapons={pistol:{name:"pistol",powerLevel:2,ammo:0,infiniteAmmo:!0,cooldown:400,hitscan:!1},double_shotgun:{name:"shotgun",powerLevel:3,ammo:0,ammoMax:50,ammoClip:8,bulletsPerShot:2,cooldown:1e3,hitscan:!0,spread:{shots:8,angleOffset:5},damage:10,impactParticleColor:(new THREE.Color).setRGB(1,1,1).getHex(),impactParticleCount:1},hyper_blaster:{name:"hyperblaster",powerLevel:4,ammo:0,ammoMax:200,ammoClip:20,bulletsPerShot:1,cooldown:80,hitscan:!1}},GS.GridObject=function(a,b,c){this.id=GS.gridObjectIdCount,this.grid=a,this.type=b,this.sourceObj=c,this.linkedGridCells=[],this.view=null,this.removed=!1,this.usable=!1,this.lightLevelFactor=.1,this.minLightLevel=.1,this.maxLightLevel=.75,GS.gridObjectIdCount++},GS.GridObject.prototype={constructor:GS.GridObject,init:function(){},update:function(){},updateCollisionData:function(){},updateBoundingBox:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=[new THREE.Vector2,new THREE.Vector2],d=new THREE.Vector2;return function(){var e=this.view.collisionData;a.copy(this.position).sub(this.size),b.copy(this.position).add(this.size),e.boundingBox.set(a,b);var f=this.view.debugMesh;void 0!==f&&(f.userData.isTriangleMesh!==!0?(f.scale.subVectors(b,a),f.position.copy(this.position)):(f.geometry.vertices.length=0,GS.pushArray(f.geometry.vertices,e.triangles),f.geometry.verticesNeedUpdate=!0)),void 0!==e.boundingSquare&&(this.size.toVector2(d),this.position.toVector2(c[0]),c[0].sub(d),this.size.toVector2(d),this.position.toVector2(c[1]),c[1].add(d),e.boundingSquare.setFromPoints(c))}}(),updateTriangles:function(a){for(var b=this.view.collisionData.triangles,c=0;c<b.length;c++)b[c].add(a)},updateSegments:function(a){for(var b=this.view.collisionData.segments,c=0;c<b.length;c++)b[c].bottomY+=a,b[c].topY+=a},assignToCells:function(a){void 0!==a?void 0!==this.gridLocation?a.gridMin.equals(this.gridLocation.gridMin)&&a.gridMax.equals(this.gridLocation.gridMax)||(this.unlinkFromCells(),this.linkToCells(a)):this.linkToCells(a):this.unlinkFromCells()},linkToCells:function(a){for(var b=a.gridMin,c=a.gridMax,d=b.y;d<=c.y;d++)for(var e=b.x;e<=c.x;e++)this.grid.cells[d][e].children.push(this),this.linkedGridCells.push(this.grid.cells[d][e]);this.gridLocation=a},unlinkFromCells:function(){for(var a=0;a<this.linkedGridCells.length;a++){var b=this.linkedGridCells[a],c=b.children.indexOf(this);-1!=c&&b.children.splice(c,1)}this.linkedGridCells.length=0,this.gridLocation=void 0},getLightColorFromSector:function(a,b){var c=b||this.getSector();if(void 0!==c){var d=a||new THREE.Color,e=c.lightLevel*this.lightLevelFactor;e*=e,e=GS.MathHelper.clamp(e,this.minLightLevel,this.maxLightLevel),d.setHex(16777215).multiplyScalar(e)}},computeYFromSector:function(){var a=this.getSector();void 0!==a&&(this.position.y=a.floorTopY+this.size.y+.03)},getSector:function(){var a=new THREE.Vector2;return function(){var b,c;return this.position.toVector2(a),this.grid.forEachUniqueGridObjectInCells(this.linkedGridCells,[GS.Concrete,GS.Elevator],function(d){if(void 0===b){if(d instanceof GS.Concrete){if(d.type!==GS.MapLayers.Sector)return;c=d.sourceObj}else c=d.sector;GS.PolygonHelper.sectorContainsPoint(c,a,!0)&&(b=c)}}),b}}(),onHit:function(){},remove:function(){this.removed=!0,this.unlinkFromCells()}},GS.gridObjectIdCount=0,GS.Concrete=function(a,b){GS.GridObject.apply(this,arguments),b===GS.MapLayers.Sector&&(this.sector=this.sourceObj),this.view={collisionData:{triangles:null}}},GS.Concrete.prototype=GS.inherit(GS.GridObject,{constructor:GS.Concrete}),GS.DoorStates={Open:0,Closed:1,Opening:2,Closing:3},GS.Door=function(a,b){GS.GridObject.call(this,a),this.sector=b,this.sector.doorGridObject=this,this.lightColor=new THREE.Color,this.speed=.5,this.state=GS.DoorStates.Closed,this.automatic=!0,this.view={collisionData:{boundingBox:new THREE.Box3,triangles:null,segments:null}},this.maxCooldown=GS.msToFrames(5e3),this.cooldown=this.maxCooldown},GS.Door.prototype=GS.inherit(GS.GridObject,{constructor:GS.Door,init:function(){this.closedY=this.position.y,this.openY=this.closedY+this.sector.doorMaxHeight,this.usable=!0,this.updateBoundingBox()},update:function(){var a=new THREE.Vector3;switch(this.state){case GS.DoorStates.Open:this.automatic?(this.cooldown--,this.cooldown<=0&&(this.cooldown=this.maxCooldown,this.state=GS.DoorStates.Closing,this.grid.soundManager.playSound("door_close"))):this.cooldown=this.maxCooldown;break;case GS.DoorStates.Closed:break;case GS.DoorStates.Opening:this.position.y+=this.speed,a.y=this.speed,this.position.y>=this.openY&&(this.position.y=this.openY,this.state=GS.DoorStates.Open);break;case GS.DoorStates.Closing:this.grid.collisionManager.isEntityNearDoor(this)?(this.sector.doorOpenedEver=!0,this.state=GS.DoorStates.Opening):(this.position.y-=this.speed,a.y=-this.speed,this.position.y<=this.closedY&&(this.position.y=this.closedY,this.state=GS.DoorStates.Closed))}if(this.usable=this.state===GS.DoorStates.Closed&&this._automatic===!0,0!==a.y&&(this.updateBoundingBox(),this.updateTriangles(a),this.updateSegments(a.y),this.updateMesh()),!this.sector.useVertexColors){this.getLightColorFromSector(this.lightColor,this.sector);for(var b=0;b<this.view.mesh.children.length;b++){var c=this.view.mesh.children[b].material;void 0!==c.emissive&&c.emissive.copy(this.lightColor)}}},updateMesh:function(){for(var a=0;a<this.view.mesh.children.length;a++)this.view.mesh.children[a].position.copy(this.position)},onUse:function(){this.state==GS.DoorStates.Closed&&(this.sector.doorOpenedEver=!0,this.state=GS.DoorStates.Opening,this.grid.soundManager.playSound("door_open"),this.grid.aiManager.onPlayerOpenDoor(this))},open:function(){return this.sector.doorOpenedEver=!0,this.state=GS.DoorStates.Opening,this.grid.soundManager.playSound("door_open"),this},openSilent:function(){return this.sector.doorOpenedEver=!0,this.state=GS.DoorStates.Opening,this},close:function(){return this.state=GS.DoorStates.Closing,this.grid.soundManager.playSound("door_close"),this},set automatic(a){this._automatic=a,this.usable=this._automatic===!0},get automatic(){return this._automatic}}),GS.ElevatorStates={Down:0,Up:1,GoindDown:2,GoingUp:3},GS.Elevator=function(a,b){GS.GridObject.call(this,a),this.sector=b,this.speed=.25,this.state=GS.ElevatorStates.Down,this.automatic=!0,this.lightColor=new THREE.Color,this.view={collisionData:{boundingBox:new THREE.Box3,triangles:null,segments:null}},this.maxCooldown=GS.msToFrames(0),this.cooldown=this.maxCooldown,this.velocity=new THREE.Vector3},GS.Elevator.prototype=GS.inherit(GS.GridObject,{constructor:GS.Elevator,init:function(){this.downY=this.position.y,this.upY=this.downY+this.sector.elevatorMaxHeight,this.updateBoundingBox()},update:function(){this.velocity.set(0,0,0);var a=0;switch(this.state){case GS.ElevatorStates.Down:this.automatic&&(this.cooldown--,this.cooldown<=0&&(this.cooldown=this.maxCooldown,this.state=GS.ElevatorStates.GoingUp));break;case GS.ElevatorStates.Up:this.automatic&&(this.cooldown--,this.cooldown<=0&&(this.cooldown=this.maxCooldown,this.state=GS.ElevatorStates.GoingDown));break;case GS.ElevatorStates.GoingDown:a=this.position.y,this.position.y-=this.speed,this.position.y<=this.downY?(this.position.y=this.downY,this.velocity.y=this.downY-a,this.state=GS.ElevatorStates.Down,this.grid.soundManager.playSound("elevator_stop")):this.velocity.y=-this.speed;break;case GS.ElevatorStates.GoingUp:a=this.position.y,this.position.y+=this.speed,this.position.y>=this.upY?(this.position.y=this.upY,this.velocity.y=this.upY-a,this.state=GS.ElevatorStates.Up,this.grid.soundManager.playSound("elevator_stop")):this.velocity.y=this.speed}this.updateChange()},updateChange:function(){if(0!==this.velocity.y&&(this.updateBoundingBox(),this.updateTriangles(this.velocity),this.updateSegments(this.velocity.y),this.updateSector(this.velocity.y),this.updateMesh(),this.grid.collisionManager.elevatorMove(this,this.velocity.y)),!this.sector.useVertexColors){this.getLightColorFromSector(this.lightColor,this.sector);for(var a=0;a<this.view.mesh.children.length;a++){var b=this.view.mesh.children[a].material;void 0!==b.emissive&&b.emissive.copy(this.lightColor)}}},updateSector:function(a){this.sector.floorTopY+=a,this.sector.ceilBottomY+=a},setPositionUp:function(){return this.velocity.y=this.upY-this.position.y,this.position.y=this.upY,this.state=GS.ElevatorStates.Up,this.updateChange(),this},setPositionDown:function(){return this.velocity.y=this.downY-this.position.y,this.position.y=this.downY,this.state=GS.ElevatorStates.Down,this.updateChange(),this},goDown:function(){return this.state=GS.ElevatorStates.GoingDown,this.grid.soundManager.playSound("elevator_move"),this},goUp:function(){return this.state=GS.ElevatorStates.GoingUp,this.grid.soundManager.playSound("elevator_move"),this},updateMesh:function(){for(var a=0;a<this.view.mesh.children.length;a++)this.view.mesh.children[a].position.copy(this.position)},onUse:function(){this.state==GS.ElevatorStates.Closed&&(this.state=GS.ElevatorStates.Opening)}}),GS.Item=function(){GS.GridObject.apply(this,arguments),this.size=new THREE.Vector3(5,5,5),this.scale=new THREE.Vector3(.4,.4,.4),this.offset=new THREE.Vector3(4,3,4),this.animation={rotationSpeed:.01,floatYDelta:.25,floatAngle:0,floatSpeed:2},this.view={collisionData:{boundingBox:new THREE.Box3}}},GS.Item.prototype=GS.inherit(GS.GridObject,{constructor:GS.Item,init:function(){this.updateBoundingBox(),this.sector=this.getSector(),this.getLightColorFromSector(this.view.mesh.material.emissive,this.sector)},update:function(){this.updateLightLevel(),this.view.mesh.rotation.y+=this.animation.rotationSpeed,this.animation.floatAngle+=this.animation.floatSpeed;var a=this.view.mesh.position;a.y=this.position.y+this.animation.floatYDelta*Math.sin(Math.PI/180*this.animation.floatAngle)},updateLightLevel:function(){this.getLightColorFromSector(this.view.mesh.material.emissive,this.sector)},updateCollisionData:function(a){this.position.copy(a),this.view.mesh.position.copy(this.position),this.updateBoundingBox()},remove:function(){this.grid.removeEntityMesh(this.view.mesh),GS.GridObject.prototype.remove.call(this)}}),GS.MonsterStates={Scripted:0,Inactive:1,Awake:2,Active:3},GS.Monster=function(a,b,c){GS.GridObject.apply(this,arguments),this.monsterType=GS.MapEntities[c.type].name,$.extend(!0,this,GS.Monsters[this.monsterType]),this.xAngle=THREE.Math.degToRad(360-c.rotation),this.direction=new THREE.Vector3,this.view={collisionData:{boundingBox:new THREE.Box3,boundingSquare:new THREE.Box2,ellipsoid:this.size,triangles:null}},this.dead=!1,this.health=this.maxHealth,this.scatterCooldown=0,this.state=GS.MonsterStates.Inactive,this.moving=!1,this.inPain=!1,this.changeTargetMaxCooldown=GS.msToFrames(500),this.changeTargetCooldown=1,this.meleeAttackCooldown=0,this.rangedAttackCooldown=Math.floor(Math.random()*this.rangedAttackCooldownRandomModifier),this.rangedAttackChargeCooldown=0,this.chargingUpRangedAttack=!1},GS.Monster.prototype=GS.inherit(GS.GridObject,{constructor:GS.Monster,init:function(){this.animationView=new GS.AnimationView(this),this.animationView.init(),this.animationView.setLoop("inactive"),this.updateBoundingBox(),this.updateMesh(),this.sector=this.getSector()},update:function(){this.animationView.update(),this.dead||(this.state===GS.MonsterStates.Awake?this.updateScan():this.state===GS.MonsterStates.Active&&(this.updateMove(),this.attackType===GS.MonsterAttackTypes.Melee?this.updateAttackMelee():this.attackType===GS.MonsterAttackTypes.Ranged&&this.updateAttackRanged())),this.updateLightLevel()},updateLightLevel:function(){this.getLightColorFromSector(this.animationView.currentMesh.material.emissive,this.sector)},updateMesh:function(){this.view.mesh.position.copy(this.position),this.view.mesh.position.y+=this.animationView.positionYOffset,this.view.mesh.rotation.y=this.xAngle+this.rotationOffset+this.animationView.rotationYOffset},updateScan:function(){var a=this.grid.player;return this.inMeleeRange(a.position)?void this.activate():this.isFacing(a.position)?void this.activate():void this.updateMesh()},updateMove:function(){var a=this.grid.player;this.chargingUpRangedAttack?(this.calculateDirection(a.position),this.calculateRotation(),this.updateMesh()):(this.scatterCooldown>0?this.scatterCooldown--:a.dead?this.scatter():this.attackType===GS.MonsterAttackTypes.Melee?this.updateMoveMelee():this.attackType===GS.MonsterAttackTypes.Ranged&&this.updateMoveRanged(),this.inPain?this.updateMesh():this.move())},updateMoveMelee:function(){var a=new THREE.Vector3,b=new THREE.Vector3;
return function(){var c=this.grid.player;if(this.changeTargetCooldown>0&&(this.changeTargetCooldown--,0===this.changeTargetCooldown)){this.changeTargetCooldown=this.changeTargetMaxCooldown,b.copy(c.position);var d=this.position.distanceTo(b);d>20&&(a.set(Math.random()-.5,0,Math.random()-.5).normalize().multiplyScalar(20),b.add(a)),this.calculateDirection(b),this.calculateRotation()}}}(),updateMoveRanged:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(){var c=this.grid.player;if(this.changeTargetCooldown>0&&(this.changeTargetCooldown--,0===this.changeTargetCooldown)){this.changeTargetCooldown=this.changeTargetMaxCooldown,b.copy(c.position);var d=this.position.distanceTo(b);d>30&&d<this.preferredMaxDistance&&(b.copy(this.position),a.set(Math.random()-.5,0,Math.random()-.5).normalize().multiplyScalar(20),b.add(a)),this.calculateDirection(b),this.calculateRotation()}}}(),move:function(){var a=new THREE.Vector3;return function(){this.moving=!0,a.copy(this.direction).multiplyScalar(this.speed).add(this.position),this.grid.collisionManager.collideMonster(this,this.position,a)}}(),updateAttackMelee:function(){var a=this.grid.player;this.meleeAttackCooldown>0?this.meleeAttackCooldown--:a.dead||this.inPain||this.inMeleeRange(a.position)&&this.isFacing(a.position)&&this.grid.collisionManager.checkMonsterLineOfSight(this,a,this.meleeRange)&&this.meleeAttack()},meleeAttack:function(){var a=this.grid.player;this.grid.soundManager.playSound("monster_bite"),this.meleeAttackCooldown=this.meleeAttackMaxCooldown,a.onHit(this.meleeDamage),this.grid.addEntityImpactParticles(a.position,a.bloodColor)},updateAttackRanged:function(){var a=this.grid.player;this.rangedAttackCooldown>0?this.rangedAttackCooldown--:a.dead||this.inPain||(this.rangedAttackChargeCooldown>0?(this.rangedAttackChargeCooldown--,0===this.rangedAttackChargeCooldown&&this.rangedAttack()):this.isFacing(a.position)&&this.grid.collisionManager.checkMonsterLineOfSight(this,a,this.rangedAttackRange)&&this.chargeUpRangedAttack())},chargeUpRangedAttack:function(){this.grid.soundManager.playSound(this.rangedAttackChargeUpSound),this.moving=!1,this.chargingUpRangedAttack=!0,this.rangedAttackChargeCooldown=this.rangedAttackChargeMaxCooldown,this.animationView.setLoop("attack")},cancelRangedAttack:function(){this.chargingUpRangedAttack=!1,this.rangedAttackChargeCooldown=0,this.animationView.setLoop("walk")},rangedAttack:function(){var a=new THREE.Vector3;return function(){this.moving=!1;var b=this.grid.player;this.chargingUpRangedAttack=!1,this.animationView.setLoop("walk"),this.rangedAttackCooldown=this.rangedAttackMaxCooldown+Math.floor(Math.random()*this.rangedAttackCooldownRandomModifier),a.copy(b.position).sub(this.position).normalize(),this.grid.addProjectile(this,this.rangedAttackProjectile,this.position.clone(),a.clone())}}(),inMeleeRange:function(a){return this.position.distanceTo(a)<this.meleeRange},inRangedAttackRange:function(a){return this.position.distanceTo(a)<this.rangedAttackRange},isFacing:function(){var a=new THREE.Vector2,b=new THREE.Vector2,c=new THREE.Vector2,d=new THREE.Vector2;return function(e){this.position.toVector2(a),e.toVector2(b);var f=this.xAngle+this.rotationOffset;return c.set(Math.sin(f-Math.PI/2),Math.cos(f-Math.PI/2)).add(a),d.set(Math.sin(f+Math.PI/2),Math.cos(f+Math.PI/2)).add(a),GS.MathHelper.vec2PointSide(c,d,b)}}(),scatter:function(){var a=this.grid.player;if(!(this.scatterCooldown>20)){var b=a.position.distanceTo(this.position);(a.dead||b>10*(1+this.scale.x))&&(this.direction=new THREE.Vector3(2*Math.random()-1,0,2*Math.random()-1),this.direction.normalize(),this.calculateRotation(),this.scatterCooldown=30)}},calculateDirection:function(a){this.direction.copy(a).sub(this.position),this.direction.y=0,this.direction.normalize()},calculateRotation:function(){this.xAngle=Math.atan2(this.direction.x,this.direction.z)+Math.PI},updateCollisionData:function(){var a=new THREE.Vector3;return function(b){a.copy(b).sub(this.position);var c=b.distanceTo(this.position);this.position.copy(b),this.updateTriangles(a),this.updateBoundingBox(),this.updateMesh(),c/this.speed<.1&&this.scatter(),this.sector=this.getSector()}}(),wakeUp:function(a){this.state!==GS.MonsterStates.Awake&&(a===!0||this.state!==GS.MonsterStates.Scripted)&&(this.state=GS.MonsterStates.Awake,this.animationView.setLoop("inactive"))},activate:function(a){this.state!==GS.MonsterStates.Active&&(a===!0||this.state!==GS.MonsterStates.Scripted)&&(this.state=GS.MonsterStates.Active,this.animationView.setLoop("walk"),this.grid.soundManager.playSound(this.roarSound))},onHit:function(a){this.state!==GS.MonsterStates.Active&&this.activate(!0),Math.random()<=this.painChance&&(this.inPain=!0,this.moving=!1,this.attackType===GS.MonsterAttackTypes.Ranged&&this.cancelRangedAttack(),this.animationView.pain(),this.grid.soundManager.playSound(this.painSound)),this.health-=a,this.health<0&&(this.health=0,this.onDeath())},onDeath:function(){this.moving=!1;var a=this.grid.player;this.calculateDirection(a.position),this.calculateRotation(),this.dead=!0,this.grid.soundManager.playSound(this.deathSound),this.grid.aiManager.onMonsterDeath(),this.animationView.setLoop("death"),this.updateMesh()}}),GS.Player=function(a,b,c){GS.GridObject.call(this,a),this.camera=b,this.playerView=c,this.playerView.player=this,this.moveSpeed=1.5,this.godEnabled=!1,this.flyEnabled=!1,this.noClipEnabled=!1,this.inMenu=!1,this.health=100,this.dead=!1,this.size=new THREE.Vector3(3,7,3),this.useRange=this.size.x+15,this.bloodColor=(new THREE.Color).setRGB(1,0,0).getHex(),this.direction=new THREE.Vector3,this.view={collisionData:{boundingBox:new THREE.Box3,boundingSquare:new THREE.Box2,ellipsoid:this.size,triangles:null}},this.moving=!1,this.shooting=!1,this.canUse=!0,this.ySmoothingMaxCooldown=GS.msToFrames(500),this.ySmoothingCooldown=0,this.swapWeaponsOnPickup=!0},GS.Player.prototype=GS.inherit(GS.GridObject,{constructor:GS.Player,init:function(){var a=this;this.availableWeapons=$.extend(!0,{},GS.Weapons),Object.keys(this.availableWeapons).forEach(function(b){a.availableWeapons[b].pickedUp=!1,a.availableWeapons[b].cooldownRemaining=0}),this.computeYFromSector(),this.initTriangles(),this.updateBoundingBox(),this.controls=new GS.FPSControls(this.camera),this.controls.eye.copy(this.position),this.controls.followingEye.copy(this.position),this.controls.moveSpeed=this.moveSpeed,this.controls.init(),this.controls.onHandleCollisions=function(b,c){a.noClipEnabled?a.updateCollisionData(c):a.grid.collisionManager.collidePlayer(a,b,c)},a.availableWeapons.pistol.pickedUp=!0,a.availableWeapons.pistol.cooldownRemaining=0,this.weapon=this.availableWeapons.pistol,this.weaponName="pistol",this.playerView.changeToWeaponInstant("pistol")},getPersistencePackage:function(){var a={health:this.health,weapons:{},currentWeapon:this.weaponName};for(var b in this.availableWeapons)a.weapons[b]={},a.weapons[b].pickedUp=this.availableWeapons[b].pickedUp,a.weapons[b].ammo=this.availableWeapons[b].ammo;return a},applyPersistencePackage:function(a){this.health=a.health;for(var b in this.availableWeapons)this.availableWeapons[b].pickedUp=a.weapons[b].pickedUp,this.availableWeapons[b].ammo=a.weapons[b].ammo;this.weapon=this.availableWeapons[a.currentWeapon],this.weaponName=a.currentWeapon,this.playerView.changeToWeaponInstant(a.currentWeapon)},giveAll:function(){var a=this;Object.keys(this.availableWeapons).forEach(function(b){var c=a.availableWeapons[b];c.pickedUp=!0,c.cooldownRemaining=0,c.infiniteAmmo||(c.ammo=c.ammoMax)})},fly:function(a){this.flyEnabled=void 0===a?!this.flyEnabled:a,this.controls.fly=this.flyEnabled,this.flyEnabled?(this.playerView.viewBob.enabled=!1,this.playerView.weaponBob.enabled=!1):(this.playerView.viewBob.enabled=!0,this.playerView.weaponBob.enabled=!0)},noClip:function(a){this.noClipEnabled=void 0===a?!this.noClipEnabled:a},god:function(a){this.godEnabled=void 0===a?!this.godEnabled:a},initTriangles:function(){for(var a=GS.Cube.getVertices(),b=0;b<a.length;b++)a[b].multiply(this.size).add(this.position);this.view.collisionData.triangles=a},update:function(){this.dead||(this.updateControls(),this.updateUse(),this.updateShoot(),this.updateChangeWeapon())},afterCollision:function(a){!a.climbing||a.gridObject instanceof GS.Elevator||(this.ySmoothingCooldown=this.ySmoothingMaxCooldown)},onHit:function(a){this.godEnabled||(this.health-=a,this.health<=0&&(this.health=0,this.onDeath()),this.playerView.onDamage())},onDeath:function(){this.dead=!0,this.grid.soundManager.playSound("player_death"),void 0!==this.weapon&&this.playerView.onDeath()},onItemCollision:function(a){var b=GS.MapEntities[a.sourceObj.type].name;(this.pickupWeapon(b)||this.pickupAmmo(b)||this.pickupMedkit(b))&&(this.grid.aiManager.onPlayerItemPickup(this,a),a.remove(),this.playerView.onItemPickup())},pickupWeapon:function(a){if(void 0!==this.availableWeapons[a]){var b=this.availableWeapons[a];return b.pickedUp||(b.pickedUp=!0,GS.DebugUI.addTempLine("picked up "+b.name),(void 0===this.weapon||this.swapWeaponsOnPickup&&b.powerLevel>this.weapon.powerLevel)&&(this.weapon=b,this.weaponName=a,this.playerView.changeToWeapon(a))),b.ammo+=b.ammoClip,this.grid.soundManager.playSound("pickup_weapon"),b.ammo>b.ammoMax&&(b.ammo=b.ammoMax),GS.DebugUI.addTempLine("picked up "+b.ammoClip+" "+b.name+" ammo"),!0}return!1},pickupAmmo:function(a){var b=this,c=!1;return"ammo"==a&&(Object.keys(this.availableWeapons).forEach(function(a){var d=b.availableWeapons[a];!d.infiniteAmmo&&d.ammo<d.ammoMax&&(d.ammo+=d.ammoClip,d.ammo>d.ammoMax&&(d.ammo=d.ammoMax),GS.DebugUI.addTempLine("picked up "+d.ammoClip+" "+d.name+" ammo"),c=!0)}),c)?(this.grid.soundManager.playSound("pickup_ammo"),!0):!1},pickupMedkit:function(a){return"medkit"==a&&this.health<100?(GS.DebugUI.addTempLine("picked up medkit"),this.health+=25,this.health>100&&(this.health=100),this.grid.soundManager.playSound("pickup_item"),!0):!1},updateUse:function(){this.canUse&&GS.Keybinds.use.inUse&&this.useTarget.onUse()},updateShoot:function(){if(void 0!==this.weapon){if(this.weapon.cooldownRemaining>0)return void(this.weapon.cooldownRemaining-=1);var a=this.shooting;if(GS.Keybinds.shoot.inUse&&this.playerView.weaponReady){if(this.weapon.infiniteAmmo||this.weapon.ammo>0){this.shooting=!0,this.shooting&&!a&&this.shootStart(),this.weapon.infiniteAmmo||(this.weapon.ammo-=this.weapon.bulletsPerShot),this.playerView.shoot(),this.playShootSound(),this.weapon.cooldownRemaining=GS.msToFrames(this.weapon.cooldown);var b=this.getProjectileStart();this.weapon.hitscan?this.grid.collisionManager.hitscan(this,b,this.weapon,this.xAngle,this.yAngle):"hyper_blaster"==this.weaponName?this.grid.addProjectile(this,"hyper_blaster_bolt",b,this.direction.clone()):"pistol"==this.weaponName&&this.grid.addProjectile(this,"pistol_bolt",b,this.direction.clone())}this.weapon.infiniteAmmo||0!==this.weapon.ammo||this.trySwapToWeaponWithAmmo()}else this.shooting=!1,!this.shooting&&a&&this.shootEnd()}},playShootSound:function(){var a;"double_shotgun"==this.weaponName?a="shotgun_fire":"hyper_blaster"==this.weaponName?a="hyper_blaster_fire":"pistol"==this.weaponName&&(a="hyper_blaster_fire"),this.grid.soundManager.playSound(a)},shootStart:function(){this.grid.aiManager.onPlayerShoot(this)},shootEnd:function(){},trySwapToWeaponWithAmmo:function(){for(var a=Object.keys(this.availableWeapons),b=a.length-1;b>=0;b--){var c=a[b],d=this.availableWeapons[c];if(d.pickedUp&&(d.infiniteAmmo||d.ammo>0)){this.changeToWeapon(c);break}}},getProjectileStart:function(){var a=this.position.clone();return a.y+=this.controls.eyeOffsetY,a},updateChangeWeapon:function(){var a=this;Object.keys(this.availableWeapons).forEach(function(b){var c=a.availableWeapons[b];c.pickedUp&&c!==a.weapon&&void 0!==a.weapon&&a.playerView.weaponReady&&GS.Keybinds[c.name].inUse&&a.changeToWeapon(b)})},changeToWeapon:function(a){this.weapon=this.availableWeapons[a],this.weaponName=a,this.playerView.changeToWeapon(a)},updateControls:function(){this.ySmoothingCooldown>0?(this.ySmoothingCooldown--,this.controls.ySmoothing=!0):this.controls.ySmoothing=!1,this.controls.update(),this.direction.copy(this.controls.lookNoOffset).sub(this.controls.followingEye).normalize(),this.xAngle=this.controls.xAngle,this.yAngle=this.controls.yAngle,this.playerView.update()},moveStart:function(){},moveEnd:function(){},updateCollisionData:function(a){this.playerView.updateThrottle(this.position,a);var b=a.clone().sub(this.position);this.updateTriangles(b);var c=this.moving;this.moving=!this.position.equals(a),this.position.copy(a),this.controls.eye.copy(a),this.moving&&!c?this.moveStart():!this.moving&&c&&this.moveEnd(),this.updateBoundingBox()}}),GS.Projectile=function(a,b,c,d,e){GS.GridObject.call(this,a),$.extend(!0,this,GS.Projectiles[c]),this.sourceGridObject=b,this.type=c,this.position=d,this.direction=e,this.steps=0,this.maxSteps=Math.floor(this.maxDistance/this.speed),this.view={collisionData:{boundingBox:new THREE.Box3,ellipsoid:this.size}}},GS.Projectile.prototype=GS.inherit(GS.GridObject,{constructor:GS.Projectile,init:function(){this.updateBoundingBox(),this.particle=this.grid.particleView.addParticle(this.visualSize.x,this.visualSize.y,this.visualSize.z,this.color),this.view.mesh=this.particle.mesh,this.view.mesh.lookAt(this.direction),this.view.mesh.visible=!1;var a=[new THREE.Vector2(this.position.x-this.size.x,this.position.z-this.size.z),new THREE.Vector2(this.position.x+this.size.x,this.position.z+this.size.z)],b=this.grid.getGridLocationFromPoints(a);this.assignToCells(b)},update:function(){this.steps++;var a=this.position.clone().add(this.direction.clone().multiplyScalar(this.speed));this.grid.collisionManager.collideProjectile(this,this.position,a),this.view.mesh.position.copy(this.position),this.rotating&&(this.view.mesh.rotation.x+=.1,this.view.mesh.rotation.y+=.1),(this.steps>this.maxSteps||0===this.linkedGridCells.length)&&this.remove()},updateCollisionData:function(a){this.distanceTravelled+=a.distanceTo(this.position),this.steps>1&&(this.view.mesh.visible=!0),this.position.copy(a),this.updateBoundingBox()},onHit:function(){this.grid.soundManager.playSound(this.hitSound),this.remove()},remove:function(){this.particle.toBeRemoved=!0,GS.GridObject.prototype.remove.call(this)}}),GS.Switch=function(a,b){GS.GridObject.call(this,a),this.segment=b,this.on=!1,this.usable=!0,this.view={collisionData:{boundingBox:new THREE.Box3}}},GS.Switch.prototype=GS.inherit(GS.GridObject,{constructor:GS.Switch,init:function(){},onUse:function(){this.on=!0,this.view.mesh.material.map=this.view.textureOn,this.usable=!1,this.grid.aiManager.onSwitchStateChange(this),this.grid.soundManager.playSound("switch_on")},block:function(){this.on=!0,this.view.mesh.material.map=this.view.textureOn,this.usable=!1}}),GS.TVScreen=function(a,b){GS.GridObject.call(this,a),this.segment=b,this.view={}},GS.TVScreen.prototype=GS.inherit(GS.GridObject,{constructor:GS.TVScreen,init:function(){}}),GS.AssetLoader=function(a){this.audioContext=a,this.objLoader=new THREE.OBJLoader,this.mapLoader=new GS.MapLoader,this.fontLoader=new GS.FontLoader,this.fontLoader.fontPath="assets/fonts/",this.path={},this.path[GS.AssetTypes.Texture]="assets/textures/",this.path[GS.AssetTypes.CubeTexture]="assets/textures/",this.path[GS.AssetTypes.UIWidget]="assets/textures/widgets/",this.path[GS.AssetTypes.Mesh]="assets/meshes/",this.path[GS.AssetTypes.Sound]="assets/sounds/",this.path[GS.AssetTypes.Map]="assets/maps/",this.path[GS.AssetTypes.Script]="assets/scripts/",this.path[GS.AssetTypes.MusicTrack]="assets/music/",this.reset()},GS.AssetLoader.prototype={reset:function(){this.loaded=!1,this.assetsToLoad=0,this.queue=[],this.assets={},this.assets[GS.AssetTypes.Texture]={},this.assets[GS.AssetTypes.CubeTexture]={},this.assets[GS.AssetTypes.UIWidget]={},this.assets[GS.AssetTypes.Mesh]={},this.assets[GS.AssetTypes.Sound]={},this.assets[GS.AssetTypes.Map]={},this.assets[GS.AssetTypes.Script]={},this.assets[GS.AssetTypes.MusicTrack]={}},init:function(){for(var a in GS.AssetTypes){var b=GS.Assets[GS.AssetTypes[a]];for(var c in b)this.add(c,b[c].filename,GS.AssetTypes[a])}},add:function(a,b,c){this.queue.push({name:a,filename:b,type:c}),this.assetsToLoad++},load:function(){var a=this;this.totalAssets=this.queue.length+1,this.assetsToLoad++,this.fontLoader.load("hudFont",GS.CustomFontFile,function(){a.checkIfFullyLoaded()});for(var b;this.queue.length>0;)b=this.queue.pop(),b.name in this.assets[b.type]?this.assetsToLoad--:this.loadAsset(b)},loadAsset:function(a){switch(a.type){case GS.AssetTypes.Texture:this.loadTexture(a.name,a.filename);break;case GS.AssetTypes.CubeTexture:this.loadCubeTexture(a.name,a.filename);break;case GS.AssetTypes.UIWidget:this.loadUIWidget(a.name,a.filename);break;case GS.AssetTypes.Mesh:this.loadMesh(a.name,a.filename);break;case GS.AssetTypes.Sound:this.loadSound(a.name,a.filename,GS.AssetTypes.Sound);break;case GS.AssetTypes.Map:this.loadMap(a.name,a.filename);break;case GS.AssetTypes.Script:this.loadScript(a.name,a.filename);break;case GS.AssetTypes.MusicTrack:this.loadSound(a.name,a.filename,GS.AssetTypes.MusicTrack)}},loadTexture:function(a,b){var c=this,d=this.path[GS.AssetTypes.Texture]+b;c.assets[GS.AssetTypes.Texture][a]=THREE.ImageUtils.loadTexture(d,void 0,function(){c.checkIfFullyLoaded()})},loadCubeTexture:function(a,b){for(var c=this,d=this.path[GS.AssetTypes.CubeTexture]+b+"/",e=[],f=0;f<GS.CubeTextureNames.length;f++)e.push(d+GS.CubeTextureNames[f]+GS.CubeTextureExtension);c.assets[GS.AssetTypes.CubeTexture][a]=THREE.ImageUtils.loadTextureCube(e,void 0,function(){c.checkIfFullyLoaded()})},loadUIWidget:function(a,b){var c=this,d=this.path[GS.AssetTypes.UIWidget]+b;THREE.ImageUtils.loadTexture(d,void 0,function(b){c.assets[GS.AssetTypes.UIWidget][a]=b.image,c.checkIfFullyLoaded()})},loadMesh:function(a,b){var c=this,d=this.path[GS.AssetTypes.Mesh]+b;this.objLoader.load(d,function(b){c.assets[GS.AssetTypes.Mesh][a]=b.children[0],c.checkIfFullyLoaded()})},loadSound:function(a,b,c){var d=this,e=this.path[c]+b,f=new XMLHttpRequest;f.open("GET",e,!0),f.responseType="arraybuffer",f.onload=function(){d.audioContext.decodeAudioData(this.response,function(b){d.assets[c][a]=b,d.checkIfFullyLoaded()})},f.send()},loadMap:function(a,b){var c=this;this.mapLoader.load(a,b,function(b){c.assets[GS.AssetTypes.Map][a]=b,c.checkIfFullyLoaded()})},loadScript:function(a,b){var c=this,d=this.path[GS.AssetTypes.Script]+b;$.ajax({url:d,dataType:"script",crossDomain:!0,success:function(){c.checkIfFullyLoaded()}})},checkIfFullyLoaded:function(){this.assetsToLoad--;var a=(this.totalAssets-this.assetsToLoad)/this.totalAssets*100;this.dispatchEvent({type:"progress",percentLoaded:a.toFixed(0)}),0===this.assetsToLoad&&(this.loaded=!0,this.dispatchEvent({type:"load",percentLoaded:100,assets:this.assets}))}},THREE.EventDispatcher.prototype.apply(GS.AssetLoader.prototype),GS.FontLoader=function(){this.fontPath=""},GS.FontLoader.prototype={constructor:GS.FontLoader,load:function(a,b,c){var d=this.fontPath+b;$("head").prepend(["<style type='text/css'>","@font-face {","font-family: '"+a+"';","src: url('"+d+"') format('woff');","font-weight: normal;","font-style: normal;","}","</style>"].join("\n"));var e=document.createElement("span");e.innerHTML="giItT1WQy@!-/#",e.style.position="absolute",e.style.left="-10000px",e.style.top="-10000px",e.style.fontSize="300px",e.style.fontFamily="sans-serif",e.style.fontVariant="normal",e.style.fontStyle="normal",e.style.fontWeight="normal",e.style.letterSpacing="0",document.body.appendChild(e);var f=e.offsetWidth;e.style.fontFamily=a;var g=setInterval(function(){e.offsetWidth!=f&&(e.parentNode.removeChild(e),clearInterval(g),c())},50)}},GS.MapScripts={},GS.MapLoader=function(){this.mapPath="assets/maps/"},GS.MapLoader.prototype={constructor:GS.MapLoader,load:function(a,b,c){var d=this.mapPath+b;$.ajax({url:d,dataType:"text",success:function(a){c(a)},error:function(a,b,c){throw c}})},parse:function(a){var b=JSON.parse(a,function(a,b){if(b instanceof Object){if(void 0!==b.x&&void 0!==b.y&&void 0!==b.z)return new THREE.Vector3(b.x,b.y,b.z);if(void 0!==b.x&&void 0!==b.y)return new THREE.Vector2(b.x,b.y)}return b});return b.bounds=this.getMapBounds(b),b},getMapBounds:function(a){for(var b=[],c=a.layerObjects[GS.MapLayers.Segment],d=0;d<c.length;d++){var e=c[d];b.push((new THREE.Vector2).copy(e.start)),b.push((new THREE.Vector2).copy(e.end))}for(var f=a.layerObjects[GS.MapLayers.Sector],d=0;d<f.length;d++)for(var g=f[d],h=0;h<g.vertices.length;h++){var i=g.vertices[h];b.push((new THREE.Vector2).copy(i))}var j=new THREE.Box2;return j.setFromPoints(b),j}},GS.ZipAssetLoader=function(a){this.audioContext=a,this.objLoader=new THREE.OBJLoader,this.mapLoader=new GS.MapLoader,this.fontLoader=new GS.FontLoader,this.fontLoader.fontPath="",this.zipPath="../server/assets.zip",GS.BuildOverride===!0&&(this.zipPath="assets.zip"),this.path={},this.path[GS.AssetTypes.Texture]="textures/",this.path[GS.AssetTypes.CubeTexture]="textures/",this.path[GS.AssetTypes.UIWidget]="textures/widgets/",this.path[GS.AssetTypes.Mesh]="meshes/",this.path[GS.AssetTypes.Sound]="sounds/",this.path[GS.AssetTypes.Map]="maps/",this.path[GS.AssetTypes.Script]="scripts/",this.path[GS.AssetTypes.MusicTrack]="music/",this.reset()},GS.ZipAssetLoader.prototype={reset:function(){this.loaded=!1,this.assetsToLoad=0,this.queue=[],this.assets={},this.assets[GS.AssetTypes.Texture]={},this.assets[GS.AssetTypes.CubeTexture]={},this.assets[GS.AssetTypes.UIWidget]={},this.assets[GS.AssetTypes.Mesh]={},this.assets[GS.AssetTypes.Sound]={},this.assets[GS.AssetTypes.Map]={},this.assets[GS.AssetTypes.Script]={},this.assets[GS.AssetTypes.MusicTrack]={}},init:function(){for(var a in GS.AssetTypes){var b=GS.Assets[GS.AssetTypes[a]];for(var c in b)this.add(c,b[c].filename,GS.AssetTypes[a])}},add:function(a,b,c){this.queue.push({name:a,filename:b,type:c}),this.assetsToLoad++},loadZip:function(){var a=this,b=new XMLHttpRequest;b.open("GET",this.zipPath,!0),b.responseType="arraybuffer",b.onreadystatechange=function(){4==this.readyState&&200==this.status&&(a.zip=new JSZip(this.response),setTimeout(function(){a._load()},0))},b.onprogress=function(b){a.zipOnProgress(b)},b.send()},_load:function(){var a=this;this.totalAssets=this.queue.length+1,this.assetsToLoad++,this.fontLoader.load("hudFont",GS.CustomFontFile,function(){a.checkIfFullyLoaded()});for(var b;this.queue.length>0;)b=this.queue.pop(),b.name in this.assets[b.type]?this.assetsToLoad--:this.loadAsset(b)},load:function(){this.loadZip()},loadAsset:function(a){switch(a.type){case GS.AssetTypes.Texture:this.loadTexture(a.name,a.filename);break;case GS.AssetTypes.CubeTexture:this.loadCubeTexture(a.name,a.filename);break;case GS.AssetTypes.UIWidget:this.loadUIWidget(a.name,a.filename);break;case GS.AssetTypes.Mesh:this.loadMesh(a.name,a.filename);break;case GS.AssetTypes.Sound:this.loadSound(a.name,a.filename,GS.AssetTypes.Sound);break;case GS.AssetTypes.Map:this.loadMap(a.name,a.filename);break;case GS.AssetTypes.Script:this.loadScript(a.name,a.filename);break;case GS.AssetTypes.MusicTrack:this.loadSound(a.name,a.filename,GS.AssetTypes.MusicTrack)}},getImageFromZip:function(a){var b=this.zip.file(a).asArrayBuffer(),c=new Blob([b],{type:"image/png"}),d=window.URL||window.webkitURL,e=d.createObjectURL(c),f=new Image;return f.src=e,f},getTextureFromZip:function(a){var b=this.getImageFromZip(a),c=new THREE.Texture(b);return c.needsUpdate=!0,c},loadTexture:function(a,b){var c=this.path[GS.AssetTypes.Texture]+b;this.assets[GS.AssetTypes.Texture][a]=this.getTextureFromZip(c),this.checkIfFullyLoaded()},loadCubeTexture:function(a,b){var c=this.path[GS.AssetTypes.CubeTexture]+b+"/",d=new THREE.Texture;d.image=[],d.flipY=!1;for(var e=0;e<GS.CubeTextureNames.length;e++)d.image[e]=this.getImageFromZip(c+GS.CubeTextureNames[e]+GS.CubeTextureExtension);d.needsUpdate=!0,this.assets[GS.AssetTypes.CubeTexture][a]=d,this.checkIfFullyLoaded()},loadUIWidget:function(a,b){var c=this.path[GS.AssetTypes.UIWidget]+b;this.assets[GS.AssetTypes.UIWidget][a]=this.getImageFromZip(c),this.checkIfFullyLoaded()},loadMesh:function(a,b){var c=this.path[GS.AssetTypes.Mesh]+b,d=this.zip.file(c).asText();this.assets[GS.AssetTypes.Mesh][a]=this.objLoader.parse(d).children[0],this.checkIfFullyLoaded()},loadSound:function(a,b,c){var d=this,e=this.path[c]+b,f=this.zip.file(e).asArrayBuffer();this.audioContext.decodeAudioData(f,function(b){d.assets[c][a]=b,d.checkIfFullyLoaded()})},loadMap:function(a,b){var c=this.path[GS.AssetTypes.Map]+b;this.assets[GS.AssetTypes.Map][a]=this.zip.file(c).asText(),this.checkIfFullyLoaded()},loadScript:function(a,b){var c=this.path[GS.AssetTypes.Script]+b,d=document.createElement("script");d.text=this.zip.file(c).asText(),document.body.appendChild(d),this.checkIfFullyLoaded()},zipOnProgress:function(a){var b=a.loaded/a.total*50;this.dispatchEvent({type:"progress",percentLoaded:b.toFixed(0)})},checkIfFullyLoaded:function(){this.assetsToLoad--;var a=100*(.5+(this.totalAssets-this.assetsToLoad)/this.totalAssets*.5);this.dispatchEvent({type:"progress",percentLoaded:a.toFixed(0)}),0===this.assetsToLoad&&(this.loaded=!0,this.dispatchEvent({type:"load",percentLoaded:100,assets:this.assets}))}},THREE.EventDispatcher.prototype.apply(GS.ZipAssetLoader.prototype),GS.GridFactory=function(a,b,c,d,e){this.viewFactory=a,this.soundManager=b,this.renderer=c,this.scene=d,this.camera=e,this.gridCellSize=8},GS.GridFactory.prototype={constructor:GS.GridFactory,getGrid:function(a){for(var b=Math.ceil((a.bounds.max.x-a.bounds.min.x)/this.gridCellSize),c=Math.ceil((a.bounds.max.y-a.bounds.min.y)/this.gridCellSize),d=[],e=0;c>e;e++){d[e]=[];for(var f=0;b>f;f++){var g=new THREE.Vector2(f*this.gridCellSize,e*this.gridCellSize).add(a.bounds.min),h=new THREE.Vector2((f+1)*this.gridCellSize,(e+1)*this.gridCellSize).add(a.bounds.min),i=new THREE.Box2(g,h);d[e][f]={box2:i,children:[],x:f,y:e}}}var j=new GS.Grid(this.renderer,this.scene);return j.clearScene(),j.cellSize=this.gridCellSize,j.cells=d,j.width=b,j.height=c,j.map=a,j.regionInfo=this.getRegions(a),j.soundManager=this.soundManager,this.assignMapEntitiesToGrid(j),this.addPlayerToGrid(j),j.initSkybox(this.viewFactory.getSkyboxMesh()),j.init(),j},getRegions:function(a){var b=a.layerObjects[GS.MapLayers.Sector],c=a.sectorLinks;if(void 0===c)throw"sector links not found";var d=new GS.RegionHelper;return d.getRegions(b,c)},addPlayerToGrid:function(a){var b=this.viewFactory.getPlayerView();a.player=new GS.Player(a,this.camera,b);var c=new THREE.Vector3;c.x=a.map.playerStartPosition.x,c.y=0,c.z=a.map.playerStartPosition.y-1e-4,a.player.position=c;var d=a.getGridLocationFromPoints([a.map.playerStartPosition]);a.player.assignToCells(d),a.player.view.debugMesh=this.viewFactory.getDebugMesh(c,a.player.size)},assignMapEntitiesToGrid:function(a){for(var b={},c=a.map.layerObjects[GS.MapLayers.Sector],d=0;d<c.length;d++){var e=c[d];b[e.id]=e;var f=e.elevator!==!0,g=e.ceiling===!0&&e.door!==!0,h=a.getGridLocationFromPoints(e.collisionVertices);if(f||g){if(f){var i=new GS.Concrete(a,GS.MapLayers.Sector,e);i.region=this.getRegionBySectorId(a,e.id),this.viewFactory.applySectorView(i,!1),i.assignToCells(h)}if(g){var j=new GS.Concrete(a,GS.MapLayers.Sector,e);j.region=this.getRegionBySectorId(a,e.id),this.viewFactory.applySectorView(j,!0),j.assignToCells(h)}}e.door===!0?this.addDoor(a,h,e):e.elevator===!0&&this.addElevator(a,h,e)}for(var k=a.map.layerObjects[GS.MapLayers.Segment],d=0;d<k.length;d++){var l=k[d],m=[];m.push((new THREE.Vector2).copy(l.start)),m.push((new THREE.Vector2).copy(l.end));var h=a.getGridLocationFromPoints(m);if(l.type!==GS.SegmentTypes.TVScreen&&l.type!==GS.SegmentTypes.Switch){var n=new GS.Concrete(a,GS.MapLayers.Segment,l);n.sector=b[l.sectorId],n.region=this.getRegionBySectorId(a,l.sectorId),this.viewFactory.applySegmentView(n),n.assignToCells(h)}else l.type===GS.SegmentTypes.TVScreen?this.addTVScreen(a,h,l):l.type===GS.SegmentTypes.Switch&&this.addSwitch(a,h,l)}for(var o=a.map.layerObjects[GS.MapLayers.Entity],d=0;d<o.length;d++){var p=o[d],q=GS.MapEntities[p.type].type,n=new GS[q](a,GS.MapLayers.Entity,p),r=n.offset,s=n.size;n.position=r.clone(),n.position.x+=p.pos.x,n.position.y+=p.y||0,n.position.z+=p.pos.y,n.isStatic=p.isStatic;var m=[p.pos.clone().add(new THREE.Vector2(r.x,r.z)).sub(new THREE.Vector2(s.x,s.z)),p.pos.clone().add(new THREE.Vector2(r.x,r.z)).add(new THREE.Vector2(s.x,s.z))],h=a.getGridLocationFromPoints(m);this.viewFactory.applyEntityView(n),n.assignToCells(h),n.startingSector=n.getSector()}},addDoor:function(a,b,c){var d=new GS.Door(a,c);this.viewFactory.applyDoorView(d),d.assignToCells(b),c.doorOpenedEver=!1},addElevator:function(a,b,c){var d=new GS.Elevator(a,c);this.viewFactory.applyElevatorView(d),d.assignToCells(b)},addTVScreen:function(a,b,c){var d=new GS.TVScreen(a,c);this.viewFactory.applyTVScreenView(d),d.assignToCells(b)},addSwitch:function(a,b,c){var d=new GS.Switch(a,c);this.viewFactory.applySwitchView(d),d.assignToCells(b)},getRegionBySectorId:function(a,b){for(var c=a.regionInfo.regions,d=0;d<c.length;d++)if(b in c[d].sectorIds)return c[d];throw"sector has no corresponding region"}},GS.ViewFactory=function(a,b,c){this.renderer=a,this.map=b,this.textures=c[GS.AssetTypes.Texture],this.cubeTextures=c[GS.AssetTypes.CubeTexture],this.meshes=c[GS.AssetTypes.Mesh],this.anisotropy=a.getMaxAnisotropy(),this.debugBoundingBoxMaterial=new THREE.MeshBasicMaterial({color:16777215,wireframe:!0}),this.debugTriangleMaterial=new THREE.MeshBasicMaterial({color:49407,wireframe:!0}),this.texScale=16,this.triangleCount=0},GS.ViewFactory.prototype={constructor:GS.ViewFactory,init:function(){var a=this;Object.keys(this.textures).forEach(function(b){a.textures[b].anisotropy=a.anisotropy}),this.materials={};var b=GS.Assets[GS.AssetTypes.Texture];for(var c in b){var d=b[c];d.type===GS.TextureTypes.Map?(this.wrap(this.textures[c]),this.materials[c]=new THREE.MeshPhongMaterial({map:this.textures[c]})):d.type===GS.TextureTypes.TVScreen&&(this.textures[c].flipY=!1)}for(var e=this.map.layerObjects[GS.MapLayers.Entity],f={},c=0;c<e.length;c++){var g=e[c],h=GS.MapEntities[g.type],i=h.name;void 0===f[i]&&(f[i]=!0,this.materials[i]=new GS.MeshPhongGlowMaterial(this.textures[i],this.textures[i+"_glow"]))}this.vertexColorMaterial=new GS.MeshVertexColorMaterial;for(var c in GS.Weapons)this.wrap(this.textures[c]),this.materials[c]=new GS.MeshPhongGlowMaterial(this.textures[c],this.textures[c+"_glow"])},getSkyboxMesh:function(){var a="skybox1",b=this.cubeTextures[a];b.format=THREE.RGBFormat;var c=THREE.ShaderLib.cube,d=THREE.UniformsUtils.clone(c.uniforms);d.tCube.value=b;var e=new THREE.ShaderMaterial({fragmentShader:c.fragmentShader,vertexShader:c.vertexShader,uniforms:d,depthWrite:!1,side:THREE.BackSide}),f=new THREE.BoxGeometry(1e3,1e3,1e3),g=new THREE.Mesh(f,e);return g},wrap:function(a){a.wrapS=a.wrapT=THREE.RepeatWrapping},applySegmentView:function(a){var b=a.sourceObj,c=new THREE.Geometry,d=this.getSegmentDefinedTriangles(b);GS.pushArray(c.vertices,d);var e,f=b.start.distanceTo(b.end);e=f>this.texScale?Math.round(f/(this.texScale*this.texScale)*this.texScale):f/this.texScale;for(var g=new THREE.Color(b.lightColor),h=this.getEmissiveColor(a.sector.lightLevel),i=0;i<d.length;i+=3){var j=new THREE.Face3(i,i+1,i+2,null,g);j.emissive=h,c.faces.push(j)}c.computeFaceNormals(),c.computeVertexNormals(),a.region.mesh.geometry.merge(c),a.view.collisionData.triangles=this.getSegmentTriangles(b),this.applyConcreteBoundingBox(a,d),this.triangleCount+=a.view.collisionData.triangles.length/3},getEmissiveColor:function(a){var b=.1,c=.1,d=.75,e=a*b;return e*=e,e=GS.MathHelper.clamp(e,c,d),new THREE.Color(16777215).multiplyScalar(e)},applySectorView:function(a,b){var c,d=a.sourceObj,e=[];if(b){var f=void 0!==d.ceiling?d.ceiling:!0;f&&(c=this.getSectorGeometry(d,e,!0),a.region.mesh.geometry.merge(c))}else d.elevator!==!0&&(c=this.getSectorGeometry(d,e,!1),a.region.mesh.geometry.merge(c));a.view.collisionData.triangles=e,this.applyConcreteBoundingBox(a,e),this.triangleCount+=e.length/3
},applyConcreteBoundingBox:function(a,b){var c=(new THREE.Box3).setFromPoints(b),d=c.min.clone().add(c.max).divideScalar(2),e=this.getDebugMesh(d);e.scale.copy(c.max).sub(c.min).addScalar(.01),a.view.collisionData.boundingBox=c,a.view.debugMesh=e},getSectorGeometry:function(a,b,c){var d=new THREE.Geometry,e=this.getSectorTriangles(a,c);GS.pushArray(d.vertices,e),GS.pushArray(b,this.getSectorTriangles(a,c,!0));for(var f=this.getEmissiveColor(a.lightLevel),g=new THREE.Color(c?a.ceilingCatColor:a.lightColor),h=0;h<e.length;h+=3){var i=new THREE.Face3(h,h+1,h+2,null,g);i.emissive=f,d.faces.push(i)}return d.computeFaceNormals(),d.computeVertexNormals(),d},getSegmentDefinedTriangles:function(a){for(var b=[],c=0,d=0;d<a.indices.length;d+=3)b.push(a.vertices[a.indices[d]]),b.push(a.vertices[a.indices[d+1]]),b.push(a.vertices[a.indices[d+2]]),a.indices[d+2]==a.bottomRightIndex&&(c=d+3);return a.bottomRightIndex=c,b},getSegmentTriangles:function(a){var b=[];return b.push(new THREE.Vector3(a.start.x,a.topY,a.start.y)),b.push(new THREE.Vector3(a.end.x,a.topY,a.end.y)),b.push(new THREE.Vector3(a.start.x,a.bottomY,a.start.y)),b.push(new THREE.Vector3(a.end.x,a.topY,a.end.y)),b.push(new THREE.Vector3(a.end.x,a.bottomY,a.end.y)),b.push(new THREE.Vector3(a.start.x,a.bottomY,a.start.y)),b},getSectorTriangles:function(a,b,c){var d=[],e=a.vertices,f=a.indices;if(c&&(e=a.collisionVertices,f=a.collisionIndices),b)for(var g=0;g<f.length;g+=3)d.push(new THREE.Vector3(e[f[g]].x,a.ceilBottomY,e[f[g]].y)),d.push(new THREE.Vector3(e[f[g+1]].x,a.ceilBottomY,e[f[g+1]].y)),d.push(new THREE.Vector3(e[f[g+2]].x,a.ceilBottomY,e[f[g+2]].y));else for(var g=0;g<f.length;g+=3)d.push(new THREE.Vector3(e[f[g+2]].x,a.floorTopY,e[f[g+2]].y)),d.push(new THREE.Vector3(e[f[g+1]].x,a.floorTopY,e[f[g+1]].y)),d.push(new THREE.Vector3(e[f[g]].x,a.floorTopY,e[f[g]].y));return d},applyEntityView:function(){var a=GS.Cube.getVertices();return function(b){var c,d=this,e=b.sourceObj,f=GS.MapEntities[e.type],g=GS.MapEntities[e.type].name,h=b.offset,i=b.scale,j=b.size,k=this.materials[g].clone();if(void 0===f.animations)c=this.meshes[g].clone(),c.material=k;else{c=new THREE.Object3D;var l=c.userData;l.animations={},Object.keys(f.animations).forEach(function(a){var b=f.animations[a];l.animations[a]=[];for(var e=0;b>e;e++){var h=g+"_"+a+e,i=d.meshes[h].clone();i.visible=!1,i.material=k,l.animations[a].push(i),c.add(i)}})}if(c.position.copy(h),c.position.copy(b.position),c.scale.copy(i),b.view.mesh=c,b.view.debugMesh=this.getDebugMesh(b.position),b instanceof GS.Monster){b.view.collisionData.triangles=[];for(var m=0;m<a.length;m++){var n=a[m].clone();n.multiply(j).add(b.view.mesh.position),b.view.collisionData.triangles.push(n)}b.view.collisionData.boundingSquare.setFromPoints([b.position.toVector2().sub(b.size.toVector2()),b.position.toVector2().add(b.size.toVector2())])}}}(),getSegmentsForMovingSector:function(a,b){for(var c=a.sector,d=[],e=0;e<c.collisionVertices.length-1;e++)d.push({start:c.collisionVertices[e].clone(),end:c.collisionVertices[e+1].clone()});if(d.push({start:c.collisionVertices[e].clone(),end:c.collisionVertices[0].clone()}),b!==!0)for(var e=0;e<d.length;e++)d[e].bottomY=c.floorTopY,d[e].topY=c.ceilBottomY;else for(var e=0;e<d.length;e++)d[e].bottomY=c.floorTopY-c.elevatorMaxHeight,d[e].topY=c.floorTopY;return d},applyDoorView:function(a){var b=[];a.position=this.getMovingSectorPosition(a),a.view.collisionData.segments=this.getSegmentsForMovingSector(a,!1);var c=this.vertexColorMaterial,d=this.vertexColorMaterial;a.sector.useVertexColors||(c=this.materials[a.sector.ceilTexId].clone(),d=this.materials[a.sector.sideTexId].clone());var e=new THREE.Object3D;e.children.push(this.getMovingSectorCenterMesh(a,b,c)),e.children.push(this.getMovingSectorSideMesh(a,b,d)),e.children[0].position.copy(a.position),e.children[1].position.copy(a.position),a.view.mesh=e,a.view.collisionData.triangles=b,a.view.debugMesh=this.getDebugMesh(a.position);var f=a.view.collisionData.boundingBox;f.setFromPoints(b),a.size=f.max.clone().sub(f.min).divideScalar(2),this.triangleCount+=b.length/3},applyElevatorView:function(a){var b=[];a.position=this.getMovingSectorPosition(a,!0),a.view.collisionData.segments=this.getSegmentsForMovingSector(a,!0);var c=this.vertexColorMaterial,d=this.vertexColorMaterial;a.sector.useVertexColors||(c=this.materials[a.sector.floorTexId].clone(),d=this.materials[a.sector.sideTexId].clone());var e=new THREE.Object3D;e.children.push(this.getMovingSectorCenterMesh(a,b,c,!0)),e.children.push(this.getMovingSectorSideMesh(a,b,d,!0)),e.children[0].position.copy(a.position),e.children[1].position.copy(a.position),a.view.mesh=e,a.view.collisionData.triangles=b,a.view.debugMesh=this.getDebugMesh(a.position);var f=a.view.collisionData.boundingBox;f.setFromPoints(b),a.size=f.max.clone().sub(f.min).divideScalar(2),this.triangleCount+=b.length/3},getMovingSectorPosition:function(a,b){var c=(new THREE.Box2).setFromPoints(a.sector.vertices),d=c.min.clone().add(c.max).divideScalar(2),e=new THREE.Vector3(d.x,0,d.y);return e.y=b!==!0?(a.sector.floorTopY+a.sector.ceilBottomY)/2:a.sector.floorTopY-a.sector.elevatorMaxHeight/2,e},getMovingSectorSideMesh:function(a,b,c,d){var e,f;d!==!0?(e=a.sector.floorTopY,f=a.sector.ceilBottomY):(e=a.sector.floorTopY-a.sector.elevatorMaxHeight,f=a.sector.floorTopY);for(var g=new THREE.Geometry,h=new THREE.Color(a.sector.lightColor),i=this.getEmissiveColor(a.sector.lightLevel),j=[],k=0,l=0;l<a.sector.vertices.length;l++){var m,n=l<a.sector.vertices.length-1?l+1:0,o=a.sector.vertices[l],p=a.sector.vertices[n],q=o.distanceTo(p);m=q>this.texScale?Math.round(q/(this.texScale*this.texScale)*this.texScale):q/this.texScale;for(var r=[new THREE.Vector3(o.x,f,o.y),new THREE.Vector3(p.x,f,p.y),new THREE.Vector3(o.x,e,o.y),new THREE.Vector3(p.x,f,p.y),new THREE.Vector3(p.x,e,p.y),new THREE.Vector3(o.x,e,o.y)],s=0;s<r.length;s++)j.push(r[s].clone());for(var s=0;s<r.length;s++)r[s].sub(a.position);if(GS.pushArray(g.vertices,r),a.sector.useVertexColors){var t=new THREE.Face3(k,k+1,k+2,null,h);t.emissive=i,g.faces.push(t);var u=new THREE.Face3(k+3,k+4,k+5,null,h);u.emissive=i,g.faces.push(u)}else g.faces.push(new THREE.Face3(k,k+1,k+2)),g.faces.push(new THREE.Face3(k+3,k+4,k+5)),g.faceVertexUvs[0].push([new THREE.Vector2(0,f/this.texScale),new THREE.Vector2(m,f/this.texScale),new THREE.Vector2(0,e/this.texScale)]),g.faceVertexUvs[0].push([new THREE.Vector2(m,f/this.texScale),new THREE.Vector2(m,e/this.texScale),new THREE.Vector2(0,e/this.texScale)]);k+=6}if(GS.pushArray(b,j),g.computeFaceNormals(),g.computeVertexNormals(),a.sector.useVertexColors){var v=(new THREE.BufferGeometry).fromGeometry(g,{vertexColors:THREE.FaceColors});return new THREE.Mesh(v,c)}return new THREE.Mesh(g,c)},getMovingSectorCenterMesh:function(a,b,c,d){for(var e,f,g,h=a.sector.floorTopY,i=new THREE.Geometry,j=new THREE.Color(a.sector.lightColor),k=this.getEmissiveColor(a.sector.lightLevel),l=a.sector.vertices,m=a.sector.indices,n=0;n<m.length;n+=3){if(d===!0?(e=new THREE.Vector3(l[m[n+2]].x,h,l[m[n+2]].y),f=new THREE.Vector3(l[m[n+1]].x,h,l[m[n+1]].y),g=new THREE.Vector3(l[m[n]].x,h,l[m[n]].y)):(e=new THREE.Vector3(l[m[n]].x,h,l[m[n]].y),f=new THREE.Vector3(l[m[n+1]].x,h,l[m[n+1]].y),g=new THREE.Vector3(l[m[n+2]].x,h,l[m[n+2]].y)),a.sector.useVertexColors){var o=new THREE.Face3(n,n+1,n+2,null,j);o.emissive=k,i.faces.push(o)}else i.faces.push(new THREE.Face3(n,n+1,n+2)),i.faceVertexUvs[0].push([new THREE.Vector2(e.x/this.texScale,e.z/this.texScale),new THREE.Vector2(f.x/this.texScale,f.z/this.texScale),new THREE.Vector2(g.x/this.texScale,g.z/this.texScale)]);e.sub(a.position),f.sub(a.position),g.sub(a.position),i.vertices.push(e),i.vertices.push(f),i.vertices.push(g)}l=a.sector.collisionVertices,m=a.sector.collisionIndices;for(var n=0;n<m.length;n+=3)d===!0?(e=new THREE.Vector3(l[m[n+2]].x,h,l[m[n+2]].y),f=new THREE.Vector3(l[m[n+1]].x,h,l[m[n+1]].y),g=new THREE.Vector3(l[m[n]].x,h,l[m[n]].y)):(e=new THREE.Vector3(l[m[n]].x,h,l[m[n]].y),f=new THREE.Vector3(l[m[n+1]].x,h,l[m[n+1]].y),g=new THREE.Vector3(l[m[n+2]].x,h,l[m[n+2]].y)),b.push(e),b.push(f),b.push(g);if(i.computeFaceNormals(),i.computeVertexNormals(),a.sector.useVertexColors){var p=(new THREE.BufferGeometry).fromGeometry(i,{vertexColors:THREE.FaceColors});return new THREE.Mesh(p,c)}return new THREE.Mesh(i,c)},applyTVScreenView:function(a){a.view.mesh=this.getTVScreenMesh(a),a.view.mesh.material=new THREE.MeshBasicMaterial({map:this.textures[a.segment.texId],depthWrite:!1,polygonOffset:!0,polygonOffsetFactor:-4,transparent:!0})},applySwitchView:function(a){a.segment.bottomY+=8,a.segment.topY=a.segment.bottomY+8,a.view.mesh=this.getTVScreenMesh(a),a.view.collisionData.boundingBox.setFromPoints([new THREE.Vector3(a.segment.start.x,a.segment.bottomY,a.segment.start.y),new THREE.Vector3(a.segment.end.x,a.segment.topY,a.segment.end.y)]),a.view.textureOn=this.textures.switch_on,a.view.textureOff=this.textures.switch_off,a.view.mesh.material=new THREE.MeshBasicMaterial({map:a.view.textureOff,depthWrite:!1,polygonOffset:!0,polygonOffsetFactor:-4,transparent:!0})},getTVScreenMesh:function(a){var b=a.segment,c=new THREE.Geometry,d=this.getSegmentTriangles(b);GS.pushArray(c.vertices,d),c.faces.push(new THREE.Face3(0,1,2)),c.faces.push(new THREE.Face3(3,4,5)),c.faceVertexUvs[0].push([new THREE.Vector2(1,0),new THREE.Vector2(0,0),new THREE.Vector2(1,1)]),c.faceVertexUvs[0].push([new THREE.Vector2(0,0),new THREE.Vector2(0,1),new THREE.Vector2(1,1)]),c.computeFaceNormals(),c.computeVertexNormals();var e=new THREE.Mesh(c,void 0);return e.matrixAutoUpdate=!1,e.renderDepth=1e3,e},getPlayerView:function(){for(var a=new GS.PlayerView,b=Object.keys(GS.Weapons),c=0;c<b.length;c++){var d=b[c];if(void 0!==this.meshes[d]){var e=this.materials[d].clone(),f=this.meshes[d].clone();f.material=e,a.addWeaponMesh(d,f)}}return a.init(),a},getDebugMesh:function(a){var b=new THREE.BoxGeometry(1,1,1),c=new THREE.Mesh(b,this.debugBoundingBoxMaterial);return c.position.copy(a),c},getDebugTriangleMesh:function(a){var b=new THREE.Geometry;GS.pushArray(b.vertices,a);for(var c=0;c<a.length;c+=3)b.faces.push(new THREE.Face3(c,c+1,c+2));var d=new THREE.Mesh(b,this.debugTriangleMaterial);return d.userData.isTriangleMesh=!0,d.matrixAutoUpdate=!1,d}},THREE.EventDispatcher.prototype.apply(GS.ViewFactory.prototype),GS.AIManager=function(a){this.grid=a,this.map=a.map,this.mapWon=!1,this.monstersKilled=0,this.maxMonsters=0,this.itemsPickedUp=0,this.maxItems=0,this.lastFrameTime=performance.now(),this.timeSpent=0,this.minutes=0,this.seconds=0,this.regionsDiscovered={}},GS.AIManager.prototype={init:function(){this.initZones(),this.sectorDict=this.grid.regionInfo.sectorDict,this.regions=this.grid.regionInfo.regions;for(var a=0;a<this.regions.length;a++)this.regions[a].mesh.visible=!1;this.assignMonstersToRegions(),this.initGridObjectLibrary(),this.initScripts()},initZones:function(){this.zones=this.map.layerObjects[GS.MapLayers.Zone];for(var a=0;a<this.zones.length;a++){var b=this.zones[a];b.boundingSquare=(new THREE.Box2).setFromPoints([b.start,b.end])}},assignMonstersToRegions:function(){var a=this;this.grid.forEachUniqueGridObject([GS.Monster],function(b){if(void 0===b.startingSector)throw"monster "+b.id+" has no starting sector";var c=a.getRegionBySectorId(b.startingSector.id);if(void 0===c)throw"sector not in region";c.monsters.push(b)})},initGridObjectLibrary:function(){var a={items:{},doors:{},elevators:{},monsters:{},sectors:{},switches:{}};this.grid.forEachUniqueGridObject([GS.Item,GS.Door,GS.Elevator,GS.Monster,GS.Concrete,GS.Switch],function(b){b instanceof GS.Item?a.items[b.sourceObj.id]=b:b instanceof GS.Door?a.doors[b.sector.id]=b:b instanceof GS.Elevator?a.elevators[b.sector.id]=b:b instanceof GS.Monster?a.monsters[b.sourceObj.id]=b:b instanceof GS.Concrete&&b.type==GS.MapLayers.Sector?a.sectors[b.sourceObj.id]=b:b instanceof GS.Switch&&(a.switches[b.segment.id]=b)}),this.gridObjectLibrary=a},initScripts:function(){if(this.map.hasScript===!0){this.script=new GS.MapScripts[this.map.name](this.gridObjectLibrary),this.script.init();for(var a=this.grid.map.layerObjects[GS.MapLayers.Entity],b=0;b<a.length;b++){var c=a[b],d=GS.MapEntities[c.type].type;"Monster"===d?this.maxMonsters++:"Item"===d&&this.maxItems++}}},update:function(){void 0!==this.script&&(this.script.update(),this.script.mapWon&&!this.mapWon&&(this.mapWon=!0)),this.mapWon||this.updateTime()},updateTime:function(){this.grid.player.inMenu||(this.timeSpent+=performance.now()-this.lastFrameTime,this.minutes=Math.floor(Math.floor(this.timeSpent)/6e4),this.seconds=Math.floor(Math.floor(this.timeSpent)/1e3-60*this.minutes)),this.lastFrameTime=performance.now()},resume:function(){this.lastFrameTime=performance.now()},onMonsterDeath:function(){this.monstersKilled++},onPlayerMove:function(a,b,c){void 0!==this.script&&this.checkZones(a,b,c),this.wakeUpNearbyMonsters(a),this.applyRegionVisibility(a)},onPlayerShoot:function(a){this.activateNearbyMonsters(a)},onPlayerOpenDoor:function(a){void 0!==this.script&&this.script.onPlayerOpenDoor(a)},onPlayerItemPickup:function(a,b){this.itemsPickedUp++,void 0!==this.script&&this.script.onItemPickup(b)},onSwitchStateChange:function(a){void 0!==this.script&&this.script.onSwitchStateChange(a)},applyRegionVisibility:function(a){for(var b=0;b<this.regions.length;b++)this.regions[b].reachedThisFrame=!1;var c=0;this.propagateRegions(a,function(a){a.reachedThisFrame=!0,a.mesh.visible=!0,c++});for(var b=0;b<this.regions.length;b++){var d=this.regions[b];d.mesh.visible&&!d.reachedThisFrame&&(d.mesh.visible=!1)}},checkZones:function(){var a=new THREE.Vector2,b=new THREE.Vector2;return function(c,d,e){d.toVector2(a),e.toVector2(b);for(var f=0;f<this.zones.length;f++){var g=this.zones[f],h=g.boundingSquare.containsPoint(a),i=g.boundingSquare.containsPoint(b);h&&!i?this.script.onZoneLeave(g):!h&&i&&this.script.onZoneEnter(g)}}}(),wakeUpNearbyMonsters:function(a){var b=this;this.propagateRegions(a,function(a){b.wakeUpMonsters(a)})},activateNearbyMonsters:function(a){var b=this;this.propagateRegions(a,function(a){b.activateMonsters(a)})},propagateRegions:function(a,b){var c=a.getSector();if(void 0!==c)for(var d=[this.getRegionBySectorId(c.id)],e={};d.length>0;){var f=d.pop();if(!(f.id in e)&&(e[f.id]=!0,this.regionsDiscovered[f.id]=f,b(f),void 0!==f.linkedRegions))for(var g=0;g<f.linkedRegions.length;g++){var h=f.linkedRegions[g],c=this.sectorDict[h.doorId].sector;c.doorGridObject.state!==GS.DoorStates.Closed&&d.push(h.region)}}},wakeUpMonsters:function(a){if(!a.awake){for(var b=0;b<a.monsters.length;b++)a.monsters[b].wakeUp();a.awake=!0}},activateMonsters:function(a){if(!a.active){for(var b=0;b<a.monsters.length;b++)a.monsters[b].activate();a.active=!0}},getRegionBySectorId:function(a){for(var b=0;b<this.regions.length;b++){var c=this.regions[b];if(a in c.sectorIds)return c}throw"sector has no corresponding region"}},GS.CollisionTypes={None:0,Environment:1,Entity:2},GS.CollisionManager=function(a){this.grid=a,this.gravity=1.33},GS.CollisionManager.prototype={init:function(){},collidePlayer:function(){var a=new THREE.Vector3;return function(b,c,d){a.copy(c),this.collidePlayerEnvironment(b,c,d),this.updateGridLocationEllipsoid(b,d),this.collidePlayerItems(b),this.updatePlayerUseTarget(b),this.grid.aiManager.onPlayerMove(b,a,d)}}(),collidePlayerEnvironment:function(){var a=[new THREE.Vector2,new THREE.Vector2,new THREE.Vector2,new THREE.Vector2],b=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],c=new THREE.Box3,d=[GS.Monster,GS.Concrete,GS.Door,GS.Elevator];return function(e,f,g){var h=e.view.collisionData.ellipsoid;a[0].set(f.x+h.x,f.z+h.z),a[1].set(f.x-h.x,f.z-h.z),a[2].set(g.x+h.x,g.z+h.z),a[3].set(g.x-h.x,g.z-h.z);var i=this.grid.getGridLocationFromPoints(a);if(b[0].copy(f).sub(e.size),b[1].copy(f).add(e.size),b[2].copy(g).sub(e.size),b[3].copy(g).add(e.size),c.setFromPoints(b),c.expandByScalar(2*this.gravity),void 0!==i){var j=this.grid.getTriangleIterator(i,d,function(a){return a instanceof GS.Monster&&a.dead?!1:a.view.collisionData.boundingBox.isIntersectionBox(c)}),k=e.flyEnabled?0:this.gravity,l=GS.CollisionHelper.handleCollisionsSliding(f,g,k,h,j);e.afterCollision(l)}}}(),slidingBoxLineCollision:function(){var a=new THREE.Vector2,b=new THREE.Vector2,c=new THREE.Vector2,d=.005;return function(e,f,g,h){function i(f){GAME.grid.totalBoxSegmentChecks++;var h=g.isIntersectionLineSwept(e,a,f);if(h.foundCollision){j=!0,b.copy(a).sub(h.pos);var i=-b.dot(h.normal);c.copy(b),b.copy(h.normal).multiplyScalar(i),c.add(b),b.copy(h.pos).sub(a).normalize().multiplyScalar(d),h.pos.add(b),a.copy(h.pos).add(c)}}a.copy(f);for(var j,k=0;5>k&&(j=!1,h(i),j);)k++;f.copy(a)}}(),collidePlayerItems:function(a){this.grid.forEachUniqueGridObjectInCells(a.linkedGridCells,[GS.Item],function(b){a.view.collisionData.boundingBox.isIntersectionBox(b.view.collisionData.boundingBox)&&a.onItemCollision(b)})},updatePlayerUseTarget:function(){var a=new THREE.Ray,b=new THREE.Vector3,c=new THREE.Vector3,d=new THREE.Vector3,e=[new THREE.Vector2,new THREE.Vector2],f=[GS.Door,GS.Switch];return function(g){g.useTarget=null,b.copy(g.position),b.y+=g.controls.eyeOffsetY,a.set(b,g.direction),d.copy(g.direction).multiplyScalar(g.useRange),c.copy(b).add(d),b.toVector2(e[0]),c.toVector2(e[1]);var h=this.grid.getGridLocationFromPoints(e);if(void 0!==h){var i=this.grid.getCellsFromGridLocation(h),j=1/0,k=null;this.grid.forEachUniqueGridObjectInCells(i,f,function(c){if(null!==a.intersectsOrStartsInBox(c.view.collisionData.boundingBox,d)){var e=d.distanceTo(b);e<=g.useRange&&j>e&&(j=e,k=c)}}),g.useTarget=k,g.canUse=null!==k&&k.usable}}}(),checkMonsterLineOfSight:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=[GS.Elevator,GS.Door,GS.Concrete],d=[GS.Player];return function(e,f,g){b.copy(e.position),a.copy(f.position).sub(e.position).normalize();var h=Math.ceil(g/GS.HitscanHelper.unitLength),i=GS.HitscanHelper.getIntersection(b,a,this.grid,c,d,h,e);return i.type===GS.CollisionTypes.Entity&&i.gridObject===f}}(),collideMonster:function(a,b,c){this.collideMonsterPlayerEnvironment(a,b,c),this.updateGridLocationEllipsoid(a,c)},collideMonsterPlayerEnvironment:function(){var a=[new THREE.Vector2,new THREE.Vector2,new THREE.Vector2,new THREE.Vector2],b=[GS.Player,GS.Monster],c=new THREE.Vector3,d=new THREE.Vector2,e=new THREE.Box2;return function(f,g,h){var i=f.view.collisionData.ellipsoid;a[0].set(g.x+i.x,g.z+i.z),a[1].set(g.x-i.x,g.z-i.z),a[2].set(h.x+i.x,h.z+i.z),a[3].set(h.x-i.x,h.z-i.z);var j=this.grid.getGridLocationFromPoints(a);if(void 0!==j&&(this.handleConcreteCollisions(j,g,h,f.size),a[0].set(g.x+i.x,g.z+i.z),a[1].set(g.x-i.x,g.z-i.z),a[2].set(h.x+i.x,h.z+i.z),a[3].set(h.x-i.x,h.z-i.z),j=this.grid.getGridLocationFromPoints(a),void 0!==j)){var k=this.grid.getCellsFromGridLocation(j);c.subVectors(h,g).toVector2(d),e.copy(f.view.collisionData.boundingSquare),e.min.add(d),e.max.add(d);var l=!1,m=null;if(this.grid.forEachUniqueGridObjectInCells(k,b,function(a){l||a===f||a instanceof GS.Monster&&a.dead||e.isIntersectionBox(a.view.collisionData.boundingSquare)&&(l=!0,m=a)}),l){var n=h.y;h.copy(g),h.y=n,m instanceof GS.Monster&&f.scatter()}else;}}}(),handleConcreteCollisions:function(){var a=new THREE.Vector2,b=new THREE.Vector2,c=new THREE.Vector2,d=new THREE.Box2,e=new THREE.Box2;return function(f,g,h,i){g.toVector2(a),h.toVector2(b),i.toVector2(c),d.min.copy(a).sub(c),d.max.copy(a).add(c),e.min.copy(b).sub(c),e.max.copy(b).add(c);var j=this.grid.getCellsFromGridLocation(f),k=this.getSectorHeights(j,e),l=function(){return!0};if(void 0!==k){var m=(h.y-i.y,k.floorHeight);if(Math.abs(k.ceilHeight-k.floorHeight)>=2*i.y){h.y=m+i.y;var n=h.y-i.y+.03,o=h.y+i.y+.03;l=function(a){return a.bottomY>=n&&a.bottomY<=o||a.topY>=n&&a.topY<=o||a.bottomY<n&&a.topY>o}}var p=this.grid.getSegmentIterator(f,l);this.slidingBoxLineCollision(a,b,d,p),h.x=b.x,h.z=b.y}else h.copy(g)}}(),getSectorHeights:function(a,b){var c,d=[],e={floorHeight:-1/0,ceilHeight:1/0};if(this.grid.forEachUniqueGridObjectInCells(a,[GS.Concrete,GS.Elevator],function(a){if(a instanceof GS.Concrete){if(a.type!==GS.MapLayers.Sector)return;c=a.sourceObj}else c=a.sector;if(GAME.grid.totalBoxSectorChecks++,GS.PolygonHelper.intersectionSectorBox(c,b)){var f=c.floorTopY;f>e.floorHeight&&(e.floorHeight=f,e.ceilHeight=c.ceiling===!0?c.ceilBottomY:1/0),d.push(f)}}),d.length>0){d.sort();for(var f,g=0,h=0;h<d.length-1;h++)f=Math.abs(d[h+1]-d[h]),f>g&&(g=f);if(6>=g)return e}return void 0},isEntityNearDoor:function(a,b){b=b||[GS.Monster,GS.Player];var c=!1,d=a.view.collisionData.boundingBox;return this.grid.forEachUniqueGridObjectInCells(a.linkedGridCells,b,function(a){c||!a.dead&&d.isIntersectionBox(a.view.collisionData.boundingBox)&&(c=!0)}),c},elevatorMove:function(){var a=new THREE.Vector3,b=new THREE.Vector2;return function(c,d){var e=[GS.Item];d>0&&(e.push(GS.Monster),e.push(GS.Player));var f,g=c.view.collisionData.boundingBox;this.grid.forEachUniqueGridObjectInCells(c.linkedGridCells,e,function(e){if(!(e instanceof GS.Item&&e.isStatic===!0)&&(f=e.view.collisionData.boundingBox,f.isIntersectionBox(g))){if(e instanceof GS.Item)if(void 0!==e.elevatorId){if(e.elevatorId!=c.id)return}else{if(e.position.toVector2(b),!GS.PolygonHelper.sectorContainsPoint(c.sector,b,!0))return;e.elevatorId=c.id}a.copy(e.position),a.y+=d,e.updateCollisionData(a)}})}}(),collideProjectile:function(){var a=[new THREE.Vector2,new THREE.Vector2,new THREE.Vector2,new THREE.Vector2],b=new THREE.Vector3;return function(c,d,e){var f=c.view.collisionData.ellipsoid;a[0].set(d.x+f.x,d.z+f.z),a[1].set(d.x-f.x,d.z-f.z),a[2].set(e.x+f.x,e.z+f.z),a[3].set(e.x-f.x,e.z-f.z);var g=this.grid.getGridLocationFromPoints(a);if(void 0!==g){var h={type:GS.CollisionTypes.None,pos:new THREE.Vector3,gridObject:null,distance:1/0,normal:new THREE.Vector3};this.collideProjectileEnvironment(c,g,d,e,h),this.collideProjectileEntities(c,g,d,e,h),h.type!==GS.CollisionTypes.None?(h.type===GS.CollisionTypes.Environment?(this.grid.addEnvironmentImpactParticles(h.pos,h.normal,c.color),h.gridObject.onHit()):h.type===GS.CollisionTypes.Entity&&(h.gridObject.constructor===c.sourceGridObject.constructor?(b.copy(h.pos).sub(c.position).normalize(),this.grid.addEnvironmentImpactParticles(h.pos,b,c.color)):(this.grid.addEntityImpactParticles(h.pos,h.gridObject.bloodColor),h.gridObject.onHit(c.damage))),c.updateCollisionData(h.pos),c.onHit()):c.updateCollisionData(e),c.removed||this.updateGridLocationEllipsoid(c,e)}}}(),collideProjectileEnvironment:function(){var a=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],b=new THREE.Box3,c=[GS.Concrete,GS.Door,GS.Elevator];return function(d,e,f,g,h){var i=d.view.collisionData.ellipsoid;a[0].copy(f).sub(d.size),a[1].copy(f).add(d.size),a[2].copy(g).sub(d.size),a[3].copy(g).add(d.size),b.setFromPoints(a);var j=this.grid.getTriangleIterator(e,c,function(a){return a.view.collisionData.boundingBox.isIntersectionBox(b)}),k=GS.CollisionHelper.handleCollisionsFirstHit(f,g,0,i,j);if(k.foundCollision){var l=f.distanceToSquared(k.pos);l<h.distance&&(h.type=GS.CollisionTypes.Environment,h.pos.copy(k.pos),h.normal.copy(k.normal),h.distance=l,h.gridObject=k.gridObject)}}}(),collideProjectileEntities:function(){var a=(new THREE.Vector3,new THREE.Vector3),b=[GS.Monster,GS.Player];return function(c,d,e,f,g){var h,i=c.view.collisionData.boundingBox,j=this.grid.getCellsFromGridLocation(d);this.grid.forEachUniqueGridObjectInCells(j,b,function(b){if(!b.dead&&c.sourceGridObject!==b&&(h=b.view.collisionData.boundingBox,i.isIntersectionBoxSwept(e,f,h,b.position,a))){var d=e.distanceToSquared(a);d<g.distance&&(g.type=GS.CollisionTypes.Entity,g.pos.copy(a),g.distance=d,g.gridObject=b)}})}}(),updateGridLocationEllipsoid:function(){var a=[new THREE.Vector2,new THREE.Vector2];return function(b,c){var d=b.view.collisionData.ellipsoid;a[0].set(c.x+d.x,c.z+d.z),a[1].set(c.x-d.x,c.z-d.z);var e=this.grid.getGridLocationFromPoints(a);b.assignToCells(e),b.updateCollisionData(c)}}(),hitscan:function(a,b,c,d,e){var f=this,g=[GS.Concrete,GS.Door,GS.Elevator],h=[];a instanceof GS.Player&&h.push(GS.Monster),GS.HitscanHelper.spread(c,d,e,function(a){var d=GS.HitscanHelper.getIntersection(b,a,f.grid,g,h);d.type===GS.CollisionTypes.Environment?(f.grid.addEnvironmentImpactParticles(d.pos,d.normal,c.impactParticleColor,c.impactParticleCount),d.gridObject.onHit()):d.type===GS.CollisionTypes.Entity&&(f.grid.addEntityImpactParticles(d.pos,d.gridObject.bloodColor),d.gridObject.onHit(c.damage))})}},GS.FPSControls=function(a){this.camera=a,this.eye=new THREE.Vector3,this.followingEye=new THREE.Vector3,this.look=new THREE.Vector3(0,0,-10).add(this.eye),this.lookNoOffset=this.look.clone(),this.moveSpeed=1,this.lookSpeed=.066*(GS.Settings.mouse/5),this.mouseInvertY=GS.Settings.mouseInvertY,this.forwardLookVector=new THREE.Vector3(0,0,-1),this.forwardMoveVector=new THREE.Vector3(0,0,-1),this.rightLookVector=new THREE.Vector3(1,0,0),this.rightMoveVector=new THREE.Vector3(1,0,0),this.xAngle=270,this.yAngle=90,this.viewOffsetY=0,this.eyeOffsetY=3.5,this.pointerLockEnabled=!1,this.onHandleCollisions=function(){},this.enabled=!0,this.fly=!1,this.ySmoothing=!1,this.ySmoothingFactor=.1},GS.FPSControls.prototype={constructor:GS.FPSControls,init:function(){var a="pointerLockElement"in document||"mozPointerLockElement"in document||"webkitPointerLockElement"in document;if(!a)throw"Pointer Lock API not supported";this.attachEvents(),this.setViewAngles(this.xAngle,this.yAngle)},attachEvents:function(){var a=this;$(document).on("pointerlockchange.fpsControls",function(b){a.onPointerLockChange(b)}),$(document).on("mozpointerlockchange.fpsControls",function(b){a.onPointerLockChange(b)}),$(document).on("webkitpointerlockchange.fpsControls",function(b){a.onPointerLockChange(b)}),$(document).on("pointerlockerror.fpsControls",function(b){a.onPointerLockError(b)}),$(document).on("mozpointerlockerror.fpsControls",function(b){a.onPointerLockError(b)}),$(document).on("webkitpointerlockerror.fpsControls",function(b){a.onPointerLockError(b)}),this.canvas=$("#game-canvas")[0],this.debugCanvas=$("#debug-ui-canvas")[0];var b=!1;$(this.debugCanvas).on("mousedown.fpsControls",function(a){3==a.which&&(b=!0)}),$(this.debugCanvas).on("mouseup.fpsControls",function(c){3==c.which&&b&&(b=!1,a.enable())})},detachEvents:function(){$(this.debugCanvas).off("mousedown.fpsControls"),$(this.debugCanvas).off("mouseup.fpsControls"),$(document).off("pointerlockchange.fpsControls"),$(document).off("mozpointerlockchange.fpsControls"),$(document).off("webkitpointerlockchange.fpsControls"),$(document).off("pointerlockerror.fpsControls"),$(document).off("mozpointerlockerror.fpsControls"),$(document).off("webkitpointerlockerror.fpsControls")},enable:function(){this.pointerLockEnabled||(this.canvas.requestPointerLock=this.canvas.requestPointerLock||this.canvas.mozRequestPointerLock||this.canvas.webkitRequestPointerLock,this.canvas.requestPointerLock())},disable:function(){this.pointerLockEnabled&&(document.exitPointerLock=document.exitPointerLock||document.mozExitPointerLock||document.webkitExitPointerLock,document.exitPointerLock())},onPointerLockChange:function(){var a=this,b=document.pointerLockElement===this.canvas||document.mozPointerLockElement===this.canvas||document.webkitPointerLockElement===this.canvas;b?(this.pointerLockEnabled=!0,$(document).on("mousemove.fpsControls",function(b){a.onMouseMove(b.originalEvent)}),this.dispatchEvent({type:"pointerLockEnabled"})):(this.pointerLockEnabled=!1,$(document).off("mousemove.fpsControls"),void 0!==this.disposeCallback?(this.detachEvents(),this.disposeCallback()):this.dispatchEvent({type:"pointerLockDisabled"}))},onPointerLockError:function(){},onMouseMove:function(a){if(this.enabled){var b=a.movementX||a.mozMovementX||a.webkitMovementX||0,c=a.movementY||a.mozMovementY||a.webkitMovementY||0,d=this.mouseInvertY?-1:1;this.setViewAngles(this.xAngle+b*this.lookSpeed,this.yAngle+d*c*this.lookSpeed)}},setViewOffsetY:function(a){this.viewOffsetY=a},update:function(){if(this.enabled){var a=0,b=0;GS.Keybinds.moveForward.inUse&&b++,GS.Keybinds.moveBackward.inUse&&b--,GS.Keybinds.strafeLeft.inUse&&a--,GS.Keybinds.strafeRight.inUse&&a++,this.move(a,b),this.dispatchEvent({type:"update",pos:this.eye,xAngle:this.xAngle,yAngle:this.yAngle,look:this.lookNoOffset})}},moveTo:function(a){this.eye.copy(a),this.updateCamera()},move:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d){a.copy(this.eye),(0!==c||0!==d)&&(b.copy(this.rightMoveVector).multiplyScalar(this.moveSpeed*c),a.add(b),b.copy(this.forwardMoveVector).multiplyScalar(this.moveSpeed*d),a.add(b)),this.onHandleCollisions(this.eye,a),this.eye.copy(a),this.updateCamera()}}(),updateCamera:function(){this.followingEye.x=this.eye.x,this.followingEye.z=this.eye.z,this.ySmoothing?this.followingEye.y!=this.eye.y&&(this.followingEye.y=this.followingEye.y+this.ySmoothingFactor*(this.eye.y-this.followingEye.y)):this.followingEye.y=this.eye.y,this.camera.position.copy(this.followingEye),this.camera.position.y+=this.viewOffsetY+this.eyeOffsetY,this.lookNoOffset.addVectors(this.followingEye,this.forwardLookVector),this.look.addVectors(this.camera.position,this.forwardLookVector),this.camera.lookAt(this.look)},setViewAngles:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d){this.xAngle=c,this.yAngle=GS.MathHelper.clamp(d,10,170);var c=Math.sin(Math.PI/180*this.yAngle)*Math.cos(Math.PI/180*this.xAngle),d=Math.cos(Math.PI/180*this.yAngle),e=Math.sin(Math.PI/180*this.yAngle)*Math.sin(Math.PI/180*this.xAngle);b.set(c,d,e),c=Math.sin(Math.PI/180*this.yAngle)*Math.cos(Math.PI/180*(this.xAngle+90)),e=Math.sin(Math.PI/180*this.yAngle)*Math.sin(Math.PI/180*(this.xAngle+90)),a.set(c,0,e),this.forwardLookVector.copy(b),this.fly?this.forwardMoveVector.copy(b).normalize():this.forwardMoveVector.set(b.x,0,b.z).normalize(),this.rightLookVector.copy(a).normalize(),this.rightMoveVector.copy(a).normalize(),this.updateCamera()}}(),dispose:function(a){this.pointerLockEnabled&&(this.disposeCallback=a),this.onHandleCollisions=void 0,this.disable(),this.pointerLockEnabled||(this.detachEvents(),a())}},THREE.EventDispatcher.prototype.apply(GS.FPSControls.prototype),GS.GraphicsManager=function(a,b){this.renderer=a,this.camera=b,this.noPostProcessing=!1,this.noiseTextureSize=256,this.showWeapon=GS.Settings.showWeapon},GS.GraphicsManager.prototype={init:function(){this.initEffectComposer(),this.bloomEnabled=GS.Settings.bloom,this.fxaaEnabled=GS.Settings.fxaa,this.ssaoEnabled=GS.Settings.ssao,this.noiseEnabled=GS.Settings.noise,this.vignetteEnabled=GS.Settings.vignette,this.halfSizeEnabled=GS.Settings.halfSize,this.monochromeEnabled=!1},setGrid:function(a){var b=this;this.grid=a,this.scene=a.scene,b.effectColor.uniforms.color.value.setRGB(0,0,0),a.player.playerView.addEventListener("screenOverlayColorChange",function(a){b.effectColor.uniforms.color.value.copy(a.color)})},initEffectComposer:function(){this.composer=new THREE.EffectComposer(this.renderer);var a=THREE.ShaderLib.depthRGBA,b=THREE.UniformsUtils.clone(a.uniforms);this.depthMaterial=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:b}),this.depthMaterial.blending=THREE.NoBlending,this.depthTarget=new THREE.WebGLRenderTarget(window.innerWidth,window.innerHeight,{minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat}),this.effectSSAO=new THREE.ShaderPass(THREE.SSAOShader),this.effectSSAO.uniforms.tDepth.value=this.depthTarget,this.effectSSAO.uniforms.size.value.set(window.innerWidth,window.innerHeight),this.effectSSAO.uniforms.cameraNear.value=this.camera.near,this.effectSSAO.uniforms.cameraFar.value=this.camera.far,this.effectFilter=new THREE.ShaderPass(GS.BrightnessFilterShader),this.effectBloom=new THREE.BloomPass(1,25,4,512),this.effectBloom.needsSwap=!0,this.effectGlow=new THREE.ShaderPass(GS.GlowShader),this.effectGlow.uniforms.tGlow.value=this.effectBloom.renderTargetY,this.effectGlow.uniforms.intensity.value=1,this.effectColor=new THREE.ShaderPass(GS.ColorShader),this.effectColor.uniforms.color.value=new THREE.Color(0),this.effectFXAA=new THREE.ShaderPass(THREE.FXAAShader),this.effectFXAA.uniforms.resolution.value.set(1/window.innerWidth,1/window.innerHeight),this.effectVignette=new THREE.ShaderPass(THREE.VignetteShader),this.effectNoise=new THREE.ShaderPass(GS.NoiseShader),this.effectNoise.uniforms.tNoise.value=this.getNoiseTexture(this.noiseTextureSize),this.effectNoise.uniforms.ratio.value.set(window.innerWidth/this.noiseTextureSize,window.innerHeight/this.noiseTextureSize),this.effectMonochrome=new THREE.ShaderPass(THREE.LuminosityShader);
var c=new THREE.ShaderPass(THREE.CopyShader);c.renderToScreen=!0,this.composer.addPass(this.effectFilter),this.composer.addPass(this.effectBloom),this.composer.addPass(this.effectNoise),this.composer.addPass(this.effectGlow),this.composer.addPass(this.effectSSAO),this.composer.addPass(this.effectColor),this.composer.addPass(this.effectFXAA),this.composer.addPass(this.effectVignette),this.composer.addPass(this.effectMonochrome),this.composer.addPass(c)},renderToScreen:function(){this.renderer.autoClear=!1,this.renderer.clear(!0,!0,!1),this.renderer.render(this.grid.skybox.scene,this.grid.skybox.camera),this.renderer.render(this.scene,this.camera),this.renderer.clear(!1,!0,!1);var a=this.grid.player.playerView;this.renderer.render(a.scene,a.camera)},render:function(){var a=this.composer.renderTarget2;if(this.renderer.autoClear=!1,this.renderer.clearTarget(a,!0,!0,!1),this.renderer.render(this.grid.skybox.scene,this.grid.skybox.camera,a),this.renderer.render(this.scene,this.camera,a),this.renderer.clearTarget(a,!1,!0,!1),this.showWeapon){var b=this.grid.player.playerView;this.renderer.render(b.scene,b.camera,a)}},renderDepthTarget:function(){var a=this.depthTarget;if(this.renderer.autoClear=!1,this.renderer.clearTarget(a,!0,!0,!1),this.scene.overrideMaterial=this.depthMaterial,this.renderer.render(this.scene,this.camera,a),this.scene.overrideMaterial=null,this.renderer.clearTarget(a,!1,!0,!1),this.showWeapon){var b=this.grid.player.playerView;b.scene.overrideMaterial=this.depthMaterial,this.renderer.render(b.scene,b.camera,a),b.scene.overrideMaterial=null}},draw:function(){this.noPostProcessing?this.renderToScreen():(this.render(),this.ssaoEnabled&&this.renderDepthTarget(),this.composer.render())},onResize:function(){var a=window.innerWidth,b=window.innerHeight;this._halfSizeEnabled&&(a*=.5,b*=.5);var c=this.depthTarget.clone();c.width=a,c.height=b,this.depthTarget=c,this.effectSSAO.uniforms.tDepth.value=this.depthTarget,this.effectSSAO.uniforms.size.value.set(a,b),this.effectFXAA.uniforms.resolution.value.set(1/a,1/b),this.effectNoise.uniforms.ratio.value.set(a/this.noiseTextureSize,b/this.noiseTextureSize),this.composer.setSize(a,b),$(this.renderer.domElement).css("width",window.innerWidth+"px").css("height",window.innerHeight+"px")},getNoiseTexture:function(a){a=a||256;var b=document.createElement("canvas");b.width=a,b.height=a,b.style.backgroundColor="rgba(255, 255, 255, 1)";var c=b.getContext("2d");c.globalCompositeOperation="source-over",c.save();for(var d=c.getImageData(0,0,a,a),e=0,f=a*a*4;f>e;e+=4){var g=Math.floor(255*Math.random());d.data[e]=g,d.data[e+1]=g,d.data[e+2]=g,d.data[e+3]=255}c.putImageData(d,0,0);var h=new THREE.Texture(b);return h.wrapS=h.wrapT=THREE.RepeatWrapping,h.needsUpdate=!0,h},reset:function(){this.grid=void 0,this.scene=void 0},set ssaoEnabled(a){void 0!==this.effectSSAO&&(this.effectSSAO.enabled=a)},get ssaoEnabled(){return this.effectSSAO.enabled},set bloomEnabled(a){void 0!==this.effectBloom&&(this.effectFilter.enabled=a,this.effectBloom.enabled=a,this.effectGlow.enabled=a)},get bloomEnabled(){return this.effectBloom.enabled},set fxaaEnabled(a){void 0!==this.effectFXAA&&(this.effectFXAA.enabled=a)},get fxaaEnabled(){return this.effectFXAA.enabled},set vignetteEnabled(a){void 0!==this.effectVignette&&(this.effectVignette.enabled=a)},get vignetteEnabled(){return this.effectVignette.enabled},set monochromeEnabled(a){void 0!==this.effectMonochrome&&(this.effectMonochrome.enabled=a)},get monochromeEnabled(){return this.effectMonochrome.enabled},set noiseEnabled(a){void 0!==this.effectNoise&&(this.effectNoise.enabled=a)},get noiseEnabled(){return this.effectNoise.enabled},set halfSizeEnabled(a){this._halfSizeEnabled=a,this.onResize()},get halfSizeEnabled(){return this._halfSizeEnabled}},GS.Grid=function(a,b){this.renderer=a,this.scene=b,this.concreteMeshes=new THREE.Object3D,this.entityMeshes=new THREE.Object3D,this.stopMonsters=!1,this.debugEntityMeshes=!1,this.debugConcreteMeshes=!1,this.debugCellLines=!1},GS.Grid.prototype={constructor:GS.Grid,init:function(){this.particleView=new GS.ParticleView(this),this.particleView.init(),this.collisionManager=new GS.CollisionManager(this),this.collisionManager.init(),this.lightingView=new GS.LightingView(this),this.lightingView.init(),this.forEachUniqueGridObject(void 0,function(a){a.init()}),this.aiManager=new GS.AIManager(this),this.aiManager.init(),this.addConcreteMeshesToScene(),this.addEntityMeshesToScene(),this.debugCellLines&&this.addDebugCellLines()},initSkybox:function(a){this.skybox={mesh:a,scene:new THREE.Scene,camera:new THREE.PerspectiveCamera(GS.Settings.fov,window.innerWidth/window.innerHeight,1,2e3)},this.skybox.scene.add(a)},update:function(){var a=this;this.particleView.update(),this.lightingView.update(),this.aiManager.update(),this.totalSphereTriangleChecks=0,this.totalBoxSectorChecks=0,this.totalBoxSegmentChecks=0;this.forEachUniqueGridObject(void 0,function(b){b instanceof GS.Monster?a.stopMonsters||b.update():b.update()}),0===this.player.linkedGridCells.length&&this.player.update();var b=(new THREE.Matrix4).extractRotation(this.player.camera.matrixWorld);this.skybox.camera.rotation.setFromRotationMatrix(b,this.skybox.camera.rotation.order)},addConcreteMeshesToScene:function(){var a=this;this.forEachUniqueGridObject([GS.Concrete],function(b){a.debugConcreteMeshes&&a.concreteMeshes.children.push(b.view.debugMesh)});for(var b=this.regionInfo.regions,c=0;c<b.length;c++){var d=b[c].mesh,e=new THREE.BufferGeometry;e.fromGeometry(d.geometry,{vertexColors:THREE.FaceColors}),d.geometry=e,this.concreteMeshes.children.push(d)}this.scene.add(this.concreteMeshes)},addEntityMeshesToScene:function(){var a=this;this.forEachUniqueGridObject([GS.Item,GS.Monster,GS.Door,GS.Elevator,GS.TVScreen,GS.Switch],function(b){a.debugEntityMeshes&&void 0!==b.view.debugMesh&&b.view.mesh.children.push(b.view.debugMesh),a.entityMeshes.children.push(b.view.mesh)}),this.scene.add(this.entityMeshes)},addDebugLine:function(a,b,c){c=void 0!==c?c:16777215;var d=new THREE.Geometry;d.vertices.push(a),d.vertices.push(b);var e=new THREE.LineBasicMaterial({color:c}),f=new THREE.Line(d,e);this.scene.add(f)},addDebugCellLines:function(){var a=2,b=(new THREE.Color).setRGB(0,0,.5).getHex(),c=new THREE.PlaneGeometry(this.width*this.cellSize,this.height*this.cellSize,this.width,this.height),d=new THREE.MeshBasicMaterial({color:b,wireframe:!0}),e=new THREE.Mesh(c,d);e.rotation.x=-Math.PI/2;var f=this.map.bounds.min.clone().multiplyScalar(-1);f.sub(this.map.bounds.max.clone().sub(this.map.bounds.min).divideScalar(2)),e.position.x=-f.x,e.position.y=a,e.position.z=-f.y,this.scene.add(e)},addProjectile:function(a,b,c,d){var e=new GS.Projectile(this,a,b,c,d);e.init(),this.debugEntityMeshes&&(e.view.debugMesh=new THREE.Mesh(new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:16777215,wireframe:!0})),this.scene.add(e.view.debugMesh)),this.lightingView.addProjectileLight(e)},addEnvironmentImpactParticles:function(a,b,c,d){d=d||5;for(var e=0;d>e;e++){var f=this.particleView.addParticle(1,1,1,c,GS.ParticleMovementTypes.Falling,a);this.particleView.alignParticleTrajectoryToNormal(f,b),f.mesh.position.copy(a)}},addEntityImpactParticles:function(a,b,c){c=c||3;for(var d=0;c>d;d++){var e=this.particleView.addParticle(1,1,1,b,GS.ParticleMovementTypes.Gushing,a);e.mesh.position.copy(a)}},getMeshFromBox2:function(a,b){var c=new THREE.Geometry;c.vertices.push(new THREE.Vector3(a.min.x,0,a.min.y)),c.vertices.push(new THREE.Vector3(a.max.x,0,a.min.y)),c.vertices.push(new THREE.Vector3(a.min.x,0,a.max.y)),c.vertices.push(new THREE.Vector3(a.max.x,0,a.max.y)),c.faces.push(new THREE.Face3(0,1,2)),c.faces.push(new THREE.Face3(1,3,2));var d=new THREE.Mesh(c,b);return d},addDebugGridLocation:function(a){var b=new THREE.MeshBasicMaterial({color:16711935,wireframe:!0}),c=this.getMeshFromBox2(a.box2,b);this.scene.add(c)},forEachUniqueGridObjectInCells:function(a,b,c){var d={};if(void 0!==b&&b.length>0)for(var e=0;e<a.length;e++)for(var f=a[e],g=0;g<f.children.length;g++)for(var h=f.children[g],i=0;i<b.length;i++)h instanceof b[i]&&(d[h.id]=h);else for(var e=0;e<a.length;e++)for(var f=a[e],g=0;g<f.children.length;g++){var h=f.children[g];d[h.id]=h}Object.keys(d).forEach(function(a){c(d[a])})},forEachUniqueGridObject:function(a,b){var c={};if(void 0!==a&&a.length>0)for(var d=0;d<this.height;d++)for(var e=0;e<this.width;e++)for(var f=this.cells[d][e],g=0;g<f.children.length;g++)for(var h=f.children[g],i=0;i<a.length;i++)h instanceof a[i]&&(c[h.id]=h);else for(var d=0;d<this.height;d++)for(var e=0;e<this.width;e++)for(var f=this.cells[d][e],g=0;g<f.children.length;g++){var h=f.children[g];c[h.id]=h}Object.keys(c).forEach(function(a){b(c[a])})},removeEntityMesh:function(a){this.entityMeshes.remove(a)},isPointInMapBounds:function(a){return this.map.bounds.containsPoint(a)},getGridLocationFromPoints:function(a){var b=(new THREE.Box2).setFromPoints(a);if(this.map.bounds.isIntersectionBox(b)){var c=this.getGridCoords(b.min),d=this.getGridCoords(b.max);return c.x=GS.MathHelper.clamp(c.x,0,this.width-1),c.y=GS.MathHelper.clamp(c.y,0,this.height-1),d.x=GS.MathHelper.clamp(d.x,0,this.width-1),d.y=GS.MathHelper.clamp(d.y,0,this.height-1),{box2:b,gridMin:c,gridMax:d}}return void 0},getGridCoords:function(a){var b=a.clone().sub(this.map.bounds.min);return b.x=Math.floor(b.x/this.cellSize),b.y=Math.floor(b.y/this.cellSize),b},getCellsFromGridLocation:function(a){for(var b=[],c=a.gridMin,d=a.gridMax,e=c.y;e<=d.y;e++)for(var f=c.x;f<=d.x;f++)b.push(this.cells[e][f]);return b},getTriangleIterator:function(a,b,c){var d=this,e=d.getCellsFromGridLocation(a);return void 0===c?function(a){d.forEachUniqueGridObjectInCells(e,b,function(b){for(var c=b.view.collisionData.triangles,d=0;d<c.length;d+=3)a(b,c[d],c[d+1],c[d+2],d)})}:function(a){d.forEachUniqueGridObjectInCells(e,b,function(b){if(c(b))for(var d=b.view.collisionData.triangles,e=0;e<d.length;e+=3)a(b,d[e],d[e+1],d[e+2],e)})}},getSegmentIterator:function(a,b){var c=this,d=c.getCellsFromGridLocation(a);return void 0===b?function(a){c.forEachUniqueGridObjectInCells(d,[GS.Concrete,GS.Elevator,GS.Door],function(b){if(b instanceof GS.Concrete&&b.type===GS.MapLayers.Segment)a(b.sourceObj);else if(b instanceof GS.Elevator||b instanceof GS.Door)for(var c=b.view.collisionData.segments,d=0;d<c.length;d++)a(c[d])})}:function(a){c.forEachUniqueGridObjectInCells(d,[GS.Concrete,GS.Elevator,GS.Door],function(c){if(c instanceof GS.Concrete&&c.type===GS.MapLayers.Segment)b(c.sourceObj)&&a(c.sourceObj);else if(c instanceof GS.Elevator||c instanceof GS.Door)for(var d=c.view.collisionData.segments,e=0;e<d.length;e++)b(d[e])&&a(d[e])})}},clearScene:function(){for(var a=this.scene.children.length-1;a>=0;a--){var b=this.scene.children[a];this.scene.remove(b)}},onResize:function(){this.skybox.camera.aspect=window.innerWidth/window.innerHeight,this.skybox.camera.updateProjectionMatrix()},updateFov:function(){this.skybox.camera.fov=GS.Settings.fov,this.skybox.camera.updateProjectionMatrix()}},GS.MapScript=function(a){this.lib=a,this.mapName="map name",this.mapWon=!1,this.nextMap=void 0,this.secretsFound=0,this.maxSecrets=0,this.musicTrack="simple_action_beat"},GS.MapScript.prototype={constructor:GS.MapScript,init:function(){},update:function(){},onZoneEnter:function(){},onZoneLeave:function(){},onItemPickup:function(){},onPlayerOpenDoor:function(){},onSwitchStateChange:function(){},foundSecret:function(){this.secretsFound++,GS.DebugUI.addTempLine("secret found")},getGridObjectsById:function(a,b){var c=[],d=this.lib[a];for(var e in d)-1!=b.indexOf(parseInt(e,10))&&c.push(d[e]);return c}},GS.MusicManager=function(){this.volume=GS.Settings.music/10},GS.MusicManager.prototype={init:function(){var a;if("undefined"!=typeof AudioContext)a=new AudioContext;else{if("undefined"==typeof webkitAudioContext)throw"No AudioContext support";a=new webkitAudioContext}this.ctx=a,this.ctx.createGain||(this.ctx.createGain=a.createGainNode),this.gainNode=this.ctx.createGain(),this.gainNode.gain.value=this._volume,this.gainNode.connect(this.ctx.destination),this.initTracks()},playTrack:function(a){this.currentTrack=this.tracks[a],void 0!==this.source&&this.source.stop(0),this.source=this.ctx.createBufferSource(),this.source.buffer=this.currentTrack.buffer,this.source.loop=!0,this.source.connect(this.gainNode),this.source.start||(this.source.start=source.noteOn),this.source.start(0)},initTracks:function(a){this.tracks={};for(var b in a)this.tracks[b]={buffer:a[b],duration:Math.ceil(a[b].length/this.ctx.sampleRate*1e3)}},set volume(a){this._volume=a,void 0!==this.gainNode&&(this.gainNode.gain.value=this._volume)},get volume(){return this._volume}},GS.SoundManager=function(){this.volume=GS.Settings.sound/10},GS.SoundManager.prototype={init:function(){var a;if("undefined"!=typeof AudioContext)a=new AudioContext;else{if("undefined"==typeof webkitAudioContext)throw"No AudioContext support";a=new webkitAudioContext}this.ctx=a,this.ctx.createGain||(this.ctx.createGain=a.createGainNode),this.gainNode=this.ctx.createGain(),this.gainNode.gain.value=this._volume,this.compressor=this.ctx.createDynamicsCompressor(),this.gainNode.connect(this.compressor),this.compressor.connect(this.ctx.destination),this.initSounds()},playSound:function(a){var b=this.sounds[a];if(!b.isPlaying||b.allowMultipleAtOnce){var c=this.ctx.createBufferSource();c.buffer=this.sounds[a].buffer,c.connect(this.gainNode),c.start||(c.start=c.noteOn),c.start(0),setTimeout(function(){b.isPlaying=!1},b.duration),b.isPlaying=!0}},initSounds:function(a){this.sounds={};for(var b in a)this.sounds[b]={buffer:a[b],duration:Math.ceil(a[b].length/this.ctx.sampleRate*1e3),isPlaying:!1,allowMultipleAtOnce:GS.Assets[GS.AssetTypes.Sound][b].allowMultipleAtOnce}},set volume(a){this._volume=a,void 0!==this.gainNode&&(this.gainNode.gain.value=this._volume)},get volume(){return this._volume}},GS.AnimationView=function(a){this.gridObject=a,this.loops={attack:{delay:10},inactive:{delay:30},walk:{delay:a.walkDelay},death:{delay:30,runOnce:!0}},this.floatYDelta=.5,this.floatAngle=0,this.floatSpeed=.175,this.inactiveFloatSpeed=.0875,this.painMaxAngle=Math.PI/2,this.painAngle=0,this.painSpeed=.05,this.painSgn=1,this.rotationYOffset=0,this.positionYOffset=0,this.currentMesh=new THREE.Object3D},GS.AnimationView.prototype={init:function(){var a=this;$.extend(!0,this,this.gridObject.view.mesh.userData),Object.keys(this.animations).forEach(function(b){var c=a.loops[b];if(void 0===a.loops[b])throw"animation loop not found";c.index=0,c.frames=a.animations[b],c.max=c.frames.length,c.cooldown=Math.floor(Math.random()*(c.delay-1))+1}),this.initInactiveLoop()},update:function(){var a=this.currentLoop;a.runOnce&&a.index===a.max-1||a.cooldown>0&&(a.cooldown--,0===a.cooldown&&(a.cooldown=a.delay,a.index++,a.index===a.max&&(a.index=0),this.switchMesh())),this.gridObject.dead||(this.gridObject.moving?this.floatAngle+=this.floatSpeed:a===this.loops.inactive&&(this.floatAngle+=this.inactiveFloatSpeed),this.positionYOffset=this.floatYDelta*Math.sin(this.floatAngle),Math.abs(this.painAngle)>0&&(this.painAngle-=this.painSgn*this.painSpeed,1==this.painSgn&&this.painAngle<0?(this.gridObject.inPain=!1,this.painAngle=0):-1==this.painSgn&&this.painAngle>0&&(this.gridObject.inPain=!1,this.painAngle=0)),this.rotationYOffset=this.painAngle)},initInactiveLoop:function(){var a=this.loops.walk,b=this.loops.inactive;b.index=0,b.frames=[],b.cooldown=b.delay,b.frames.push(a.frames[0]),b.frames.push(a.frames[2]),b.max=b.frames.length},pain:function(){0===Math.floor(2*Math.random())?(this.painAngle=this.painMaxAngle,this.painSgn=1):(this.painAngle=-this.painMaxAngle,this.painSgn=-1)},death:function(){this.setLoop("death"),this.rotationYOffset=0,this.positionYOffset=0},setLoop:function(a){this.currentLoop=this.loops[a],this.switchMesh()},switchMesh:function(){var a=this.currentLoop;this.currentMesh.visible=!1,this.currentMesh=a.frames[a.index],this.currentMesh.visible=!0}},GS.LightingView=function(a){this.grid=a,this.player=a.player,this.worldScene=a.scene,this.playerScene=a.player.playerView.scene,this.ambientColor=(new THREE.Color).setRGB(0,0,0),this.directionalColor=(new THREE.Color).setRGB(1,1,1).getHex(),this.directionalPosition=new THREE.Vector3(1,1,1),this.directionalIntensity=0,this.muzzleFlashPosition=new THREE.Vector3(0,-3,-12),this.muzzleFlashDistance=256,this.muzzleFlashMaxIntensity=1,this.muzzleFlashIntensity=new GS.SmoothNumber(0,.1),this.projectileIntensity=1,this.projectileDistance=32,this.maxProjectilePointLights=10,this.playerTorchDistance=256,this.playerTorchIntensity=.5,this.playerTorchColor=(new THREE.Color).setRGB(1,1,1),this.worldLights={},this.playerLights={},this.projectileLights=[]},GS.LightingView.prototype={init:function(){this.initWorldLights(),this.initPlayerLights()},initWorldLights:function(){var a=new THREE.AmbientLight(this.ambientColor);this.worldScene.add(a),this.worldLights.ambient=a;var b=new THREE.PointLight;b.intensity=this.muzzleFlashIntensity.value,b.distance=this.muzzleFlashDistance,this.worldScene.add(b),this.worldLights.muzzleFlash=b;var c=new THREE.DirectionalLight(this.directionalColor,this.directionalIntensity);c.position.copy(this.directionalPosition),this.worldScene.add(c),this.worldLights.directional=c;for(var d=0;d<this.maxProjectilePointLights;d++){var b=new THREE.PointLight;b.intensity=0,b.distance=this.projectileDistance;var e={active:!1,pointLight:b,intensity:new GS.SmoothNumber(this.projectileIntensity,.1)};this.worldScene.add(b),this.projectileLights.push(e)}var f=new THREE.PointLight;f.color.copy(this.playerTorchColor),f.intensity=this.playerTorchIntensity,f.distance=this.playerTorchDistance,this.worldScene.add(f),this.worldLights.playerTorch=f;var g=new THREE.PointLight;g.color.copy(this.playerTorchColor),g.intensity=this.playerTorchIntensity,g.distance=this.playerTorchDistance,this.playerScene.add(g),this.playerLights.playerTorch=g},initPlayerLights:function(){var a=new THREE.AmbientLight(this.ambientColor);this.playerScene.add(a),this.playerLights.ambient=a;var b=new THREE.PointLight;b.position.copy(this.muzzleFlashPosition),b.intensity=this.muzzleFlashIntensity.value,b.distance=this.muzzleFlashDistance,this.playerScene.add(b),this.playerLights.muzzleFlash=b;var c=new THREE.DirectionalLight(this.directionalColor,this.directionalIntensity);c.position.copy(this.directionalPosition),this.playerScene.add(c),this.playerLights.directional=c,this.player.playerView.lightingView=this},updatePlayerLights:function(){var a=Math.PI/180*(this.player.yAngle-90),b=Math.PI/180*(this.player.xAngle+90),c=(new THREE.Matrix4).makeRotationX(a).multiply((new THREE.Matrix4).makeRotationY(b)),d=this.worldLights.directional.position;this.playerLights.directional.position.copy(d).applyMatrix4(c),this.muzzleFlashIntensity.update(),this.worldLights.muzzleFlash.position.copy(this.player.position),this.worldLights.muzzleFlash.position.y+=.5*this.player.size.y,this.worldLights.muzzleFlash.intensity=this.muzzleFlashIntensity.value,this.playerLights.muzzleFlash.intensity=this.muzzleFlashIntensity.value,this.worldLights.playerTorch.position.copy(this.player.position)},beginMuzzleFlash:function(a){this.muzzleFlashIntensity.value=this.muzzleFlashMaxIntensity,this.worldLights.muzzleFlash.color.copy(a),this.playerLights.muzzleFlash.color.copy(a)},endMuzzleFlash:function(){this.muzzleFlashIntensity.setTargetValue(0)},addProjectileLight:function(a){var b;b=this.projectileLights.shift(),b.active=!0,b.projectile=a,b.intensity.value=this.projectileIntensity,b.intensity.setTargetValue(this.projectileIntensity),b.pointLight.color.setHex(a.color),b.pointLight.position.copy(a.position),b.pointLight.intensity=b.intensity.value,this.projectileLights.push(b)},update:function(){for(var a=0;a<this.projectileLights.length;a++){var b=this.projectileLights[a];b.active&&(b.projectile.removed&&b.intensity.setTargetValue(0),b.intensity.update(),b.pointLight.intensity=b.intensity.value,b.pointLight.position.copy(b.projectile.position),0===b.intensity.value&&(b.active=!1))}}},GS.ParticleMovementTypes={Static:0,Falling:1,Gushing:2},GS.ParticleView=function(a){this.grid=a,this.scene=a.scene,this.particles=[],this.geometries={},this.materials={},this.particleSpeed=75e-5,this.particleGravity=new THREE.Vector3(0,-.003,0)},GS.ParticleView.prototype={constructor:GS.ParticleView,init:function(){this.root=new THREE.Object3D,this.root.userData="particle root",this.scene.add(this.root)},update:function(){for(var a=0;a<this.particles.length;a++){var b=this.particles[a];b.movementType!=GS.ParticleMovementTypes.Static&&(b.landed!==!0?(b.acceleration.add(b.gravity),b.velocity.add(b.acceleration),b.mesh.position.add(b.velocity),b.mesh.rotation.y+=b.rotationSpeed,b.life++,void 0!==b.floorImpactY&&b.mesh.position.y<b.floorImpactY&&(b.mesh.position.y=b.floorImpactY+.5,b.landed=!0)):(b.decayTime-=.01,b.mesh.scale.set(b.decayTime,b.decayTime,b.decayTime),b.decayTime<=0&&(b.toBeRemoved=!0)))}for(var a=this.particles.length-1;a>=0;a--)this.particles[a].toBeRemoved&&this.removeParticle(this.particles[a],a)},addParticle:function(a,b,c,d,e,f){var g=this.getGeometry(a,b,c),h=this.getMaterial(d),i=new THREE.Mesh(g,h);e=void 0!==e?e:GS.ParticleMovementTypes.Static;var j={mesh:i,position:f,rotationSpeed:.25*Math.random(),movementType:e,color:d,decayTime:1};return e!=GS.ParticleMovementTypes.Static&&(j.gravity=this.particleGravity.clone(),e==GS.ParticleMovementTypes.Falling?(j.horizontalSpeed=15,j.verticalSpeed=10*Math.random()):e==GS.ParticleMovementTypes.Gushing&&(j.horizontalSpeed=20,j.verticalSpeed=10*Math.random()+60),this.calculateAcceleration(j),j.velocity=new THREE.Vector3,this.calculateFloorImpactY(j)),this.root.add(i),this.particles.push(j),j},removeParticle:function(a,b){var c=void 0!==b?b:this.particles.indexOf(a);c>-1&&(this.root.remove(a.mesh),this.particles.splice(c,1))},calculateFloorImpactY:function(){var a={grid:null,position:new THREE.Vector3,linkedGridCells:null},b=new THREE.Vector2;return function(c){c.position.toVector2(b);var d=this.grid.getGridLocationFromPoints([b]);if(void 0!==d){a.grid=this.grid,a.position.copy(c.position),a.linkedGridCells=this.grid.getCellsFromGridLocation(d);var e=GS.GridObject.prototype.getSector.call(a);void 0!==e&&(c.floorImpactY=e.floorTopY),a.grid=null,a.linkedGridCells=null}}}(),calculateAcceleration:function(a){a.acceleration=new THREE.Vector3(2*Math.random()-1,0,2*Math.random()-1),a.acceleration.normalize(),a.acceleration.multiplyScalar(a.horizontalSpeed),a.acceleration.y=a.verticalSpeed,a.acceleration.multiplyScalar(this.particleSpeed)},alignParticleTrajectoryToNormal:function(){var a=new THREE.Vector2,b=new THREE.Vector2(1,0);return function(c,d){if(0===d.x&&0===d.z){if(-1==d.y)return;return c.horizontalSpeed=20,c.verticalSpeed=10*Math.random()+30,void this.calculateAcceleration(c)}d.toVector2(a);var e=GS.MathHelper.vec2AngleDirected(b,a)+Math.PI,f=e-Math.random()*Math.PI;a.set(Math.sin(f),Math.cos(f)),c.acceleration.x=a.x,c.acceleration.z=a.y,c.acceleration.multiplyScalar(c.horizontalSpeed*this.particleSpeed),c.acceleration.y=c.verticalSpeed*this.particleSpeed,c.mesh.rotation.y+=e,this.calculateFloorImpactY(c)}}(),getGeometry:function(a,b,c){var d=a.toFixed(2)+b.toFixed(2)+c.toFixed(2);return d in this.geometries||(this.geometries[d]=new THREE.BoxGeometry(a,b,c)),this.geometries[d]},getMaterial:function(a){var b=a.toString();return b in this.materials||(this.materials[b]=new THREE.MeshBasicMaterial({color:a})),this.materials[b]}},GS.PlayerView=function(){this.weapons={pistol:{position:new THREE.Vector3(2.75,-2.5,-4),startPosition:new THREE.Vector3(2.5,-6.5,1),scale:new THREE.Vector3(.4,.4,.4),rotation:new THREE.Vector3(0,THREE.Math.degToRad(-90),0),pushback:1,shootBackwardFactor:.5,shootForwardFactor:.5,muzzleDuration:GS.msToFrames(250),muzzleFlashColor:(new THREE.Color).setRGB(1,1,1)},double_shotgun:{position:new THREE.Vector3(2.25,-3.5,-3),startPosition:new THREE.Vector3(2.5,-6.5,1),scale:new THREE.Vector3(.4,.4,.4),rotation:new THREE.Vector3(0,THREE.Math.degToRad(180),0),pushback:2,shootBackwardFactor:.1,shootForwardFactor:.9,muzzleDuration:GS.msToFrames(250),muzzleFlashColor:(new THREE.Color).setRGB(1,1,1)},hyper_blaster:{position:new THREE.Vector3(2.75,-2.5,-3),startPosition:new THREE.Vector3(2.5,-6.5,1),scale:new THREE.Vector3(.4,.4,.4),rotation:new THREE.Vector3(0,THREE.Math.degToRad(-90),0),pushback:1,shootBackwardFactor:.5,shootForwardFactor:.5,muzzleDuration:GS.msToFrames(125),muzzleFlashColor:(new THREE.Color).setRGB(1,1,1)}},$.extend(!0,this.weapons,GS.Weapons),this.scene=new THREE.Scene,this.camera=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,100),this.screenOverlayColor=new THREE.Color(0),this.screenOverlayColorFadeSpeed=.02,this.muzzleCooldown=0,this.weaponReady=!1,this.weaponBob={enabled:GS.Settings.weaponBob,magnitudeX:.5,magnitudeY:.5,offset:new THREE.Vector3,radian:0,speed:.1},this.viewBob={enabled:GS.Settings.viewBob,magnitude:1.5,offset:0,radian:0,speed:.2},this.viewThrottle=new GS.SmoothNumber(0,.1),this.weaponThrottle=new GS.SmoothNumber(0,.1),this.tweens={shoot:{easing:TWEEN.Easing.Sinusoidal.InOut},show:{easing:TWEEN.Easing.Back.Out,duration:500},hide:{easing:TWEEN.Easing.Back.InOut,duration:250}}},GS.PlayerView.prototype={init:function(){var a=this;Object.keys(this.weapons).forEach(function(b){a.initWeaponMesh(b)})},addWeaponMesh:function(a,b){this.weapons[a].mesh=b},getWeaponMeshes:function(){var a=this,b=[];return Object.keys(this.weapons).forEach(function(c){var d=a.weapons[c];b.push(d.mesh)}),b},initWeaponMesh:function(a){var b=this.weapons[a];void 0!==b.mesh&&(b.mesh.visible=!1,b.mesh.position.copy(b.position),b.mesh.rotation.x=b.rotation.x,b.mesh.rotation.y=b.rotation.y,b.mesh.rotation.z=b.rotation.z,b.mesh.scale.copy(b.scale),this.scene.add(b.mesh))},update:function(){this.lightingView.updatePlayerLights(),this.updateMuzzleFlash(),this.updateLightLevel(),this.updateViewBob(),this.updateWeaponBob(),this.updateScreenOverlay()},updateMuzzleFlash:function(){this.muzzleCooldown>0&&(this.muzzleCooldown--,0===this.muzzleCooldown&&this.lightingView.endMuzzleFlash())},updateLightLevel:function(){void 0!==this.weapon&&this.player.getLightColorFromSector(this.weapon.mesh.material.emissive)},updateThrottle:function(a,b){var c=a.toVector2().distanceTo(b.toVector2());this.viewThrottle.setTargetValue(c/this.player.moveSpeed),this.viewThrottle.update(),!this.player.shooting&&this.weaponReady&&(this.weaponThrottle.setTargetValue(c/this.player.moveSpeed),this.weaponThrottle.update())},resetWeaponThrottle:function(){this.weaponThrottle.value=0,this.weaponBob.radian=0},updateViewBob:function(){this.viewBob.enabled&&(this.player.controls.setViewOffsetY(this.viewBob.offset),this.viewBob.radian+=this.viewBob.speed,this.viewBob.offset=this.viewThrottle.value*this.viewBob.magnitude*Math.sin(this.viewBob.radian))},updateWeaponBob:function(){if(this.weaponBob.enabled&&!this.player.shooting){this.weaponBob.radian+=this.weaponBob.speed;var a=this.weaponThrottle.value*this.weaponBob.magnitudeX*Math.sin(this.weaponBob.radian),b=-Math.abs(this.weaponThrottle.value*this.weaponBob.magnitudeY*Math.sin(this.weaponBob.radian));this.weaponBob.offset.set(a,b,0),void 0!==this.weapon&&this.weapon.mesh.position.copy(this.weapon.position.clone().add(this.weaponBob.offset))}},shoot:function(){this.resetWeaponThrottle(),this.weapon.mesh.position.copy(this.weapon.position);var a=this.weapon.position.clone();a.z+=this.weapon.pushback;var b=new TWEEN.Tween(this.weapon.mesh.position).to(a,this.weapon.cooldown*this.weapon.shootBackwardFactor);b.easing(this.tweens.shoot.easing);var c=new TWEEN.Tween(this.weapon.mesh.position).to(this.weapon.position,this.weapon.cooldown*this.weapon.shootForwardFactor);c.easing(this.tweens.shoot.easing),b.chain(c),b.start(),this.showMuzzleFlash()},showMuzzleFlash:function(){this.lightingView.beginMuzzleFlash(this.weapon.muzzleFlashColor),this.muzzleCooldown=this.weapon.muzzleDuration},changeToWeaponInstant:function(a){this.resetWeaponThrottle(),void 0!==this.weapon&&(this.weapon.mesh.visible=!1),this.weaponReady=!0,this.weapon=this.weapons[a],this.weapon.mesh.visible=!0,this.weapon.mesh.position.copy(this.weapon.startPosition)},changeToWeapon:function(a){var b=this;this.resetWeaponThrottle(),this.weaponReady=!1,void 0!==this.weapon?this.hideWeapon(function(){b.showWeapon(a)}):this.showWeapon(a)},showWeapon:function(a,b){var c=this;this.weapon=this.weapons[a],this.weapon.mesh.visible=!0,this.weapon.mesh.position.copy(this.weapon.startPosition);var d=new TWEEN.Tween(this.weapon.mesh.position).to(this.weapon.position,this.tweens.show.duration);d.easing(this.tweens.show.easing),d.onComplete(function(){d.onComplete(null),c.weaponReady=!0,void 0!==b&&b()}),d.start()},hideWeapon:function(a){var b=this;this.weaponReady=!1;var c=new TWEEN.Tween(this.weapon.mesh.position).to(this.weapon.startPosition,this.tweens.hide.duration);c.easing(this.tweens.hide.easing),c.onComplete(function(){c.onComplete(null),b.weapon.mesh.visible=!1,void 0!==a&&a()}),c.start()},onResize:function(){this.camera.aspect=window.innerWidth/window.innerHeight,this.camera.updateProjectionMatrix()},onItemPickup:function(){this.screenOverlayColor.setRGB(.3,.3,0),this.dispatchEvent({type:"screenOverlayColorChange",color:this.screenOverlayColor})},onDamage:function(){this.screenOverlayColor.setRGB(.6,0,0),this.dispatchEvent({type:"screenOverlayColorChange",color:this.screenOverlayColor})},onDeath:function(){this.player.controls.eye.y-=this.player.size.y,this.player.controls.updateCamera(),void 0!==this.weapon&&this.hideWeapon()},updateScreenOverlay:function(){(this.screenOverlayColor.r>0||this.screenOverlayColor.g>0||this.screenOverlayColor.b>0)&&(this.screenOverlayColor.addScalar(-this.screenOverlayColorFadeSpeed),this.screenOverlayColor.r<0&&(this.screenOverlayColor.r=0),this.screenOverlayColor.g<0&&(this.screenOverlayColor.g=0),this.screenOverlayColor.b<0&&(this.screenOverlayColor.b=0),this.dispatchEvent({type:"screenOverlayColorChange",color:this.screenOverlayColor}))}},THREE.EventDispatcher.prototype.apply(GS.PlayerView.prototype),GS.GameVersion="v1.1",GS.BuildReleaseDate="january 3, 2015",GS.GameStates={Dispose:0,PreLoad:1,Loading:2,PostLoad:3,Play:4,Menu:5},GS.Game=function(){GS.Base.call(this),GS.Settings.loadSettings(),this.state=GS.GameStates.PreLoad,this.nextState=null,this.updated=!1,this.firstLoad=!0,this.firstPlay=!0,this.mapWon=!1,this.restartedLevel=!1,this.antialias=!1,this.clearColor=3368601,this.cameraFov=GS.Settings.fov,this.cameraFar=1500,this.noMenu=!1,this.useAssetsZip=!1,GS.BuildOverride===!0&&(this.useAssetsZip=!0),this.showFPS=GS.Settings.showFPS,this.showPerformanceDebugMeters=!1},GS.Game.prototype=GS.inherit(GS.Base,{constructor:GS.Game,init:function(){GS.DebugUI.init(),GS.DebugUI.visible=!1,this.loadingUI=new GS.LoadingUI,this.loadingUI.init(),this.uiManager=new GS.UIManager,this.uiManager.init(),this.soundManager=new GS.SoundManager,this.soundManager.init(),this.musicManager=new GS.MusicManager,this.musicManager.init(),this.initAssetLoader(),this.keys={Enter:13,Escape:27,Tab:9},GS.Base.prototype.init.call(this),this.graphicsManager=new GS.GraphicsManager(this.renderer,this.camera),this.graphicsManager.init()},preLoad:function(){this.uiManager.reset(),this.loadingUI.percentLoaded=0,this.loadingUI.show(),this.scene=new THREE.Scene,this.scene.fog=new THREE.Fog((new THREE.Color).setRGB(0,0,0).getHex(),500,900),this.assetLoader.loaded?this.nextState=GS.GameStates.PostLoad:(this.assetLoader.load(),this.nextState=GS.GameStates.Loading)},initAssetLoader:function(){var a=this;this.assetLoader=this.useAssetsZip?new GS.ZipAssetLoader(this.soundManager.ctx):new GS.AssetLoader(this.soundManager.ctx),this.assetLoader.init(),this.assetLoader.addEventListener("progress",function(b){a.loadingUI.updateProgress(b)}),this.assetLoader.addEventListener("load",function(b){a.loadingUI.updateProgress(b),a.nextState=GS.GameStates.PostLoad})},postLoad:function(){this.firstLoad?(this.loadingUI.spinnerOnly=!0,this.uiManager.initComponents(this.assetLoader.assets),this.openMenu(),this.firstLoad=!1,this.noMenu&&this.newGame()):(this.initComponents(this.assetLoader.assets),this.uiManager.initComponents(this.assetLoader.assets,this.grid),this.uiManager.useIngameMenu(),this.nextState=GS.GameStates.Play,this.graphicsManager.monochromeEnabled=!1,void 0===this.grid.aiManager.script||this.restartedLevel||this.musicManager.playTrack(this.grid.aiManager.script.musicTrack),this.restartedLevel=!1,this.firstPlay&&(this.firstPlay=!1))
},play:function(){GS.InputHelper.checkPressedKeys(),!GS.InputHelper.keysPressed&&GS.InputHelper.isKeyDown(this.keys.Escape)&&this.openMenu(),this.grid.aiManager.mapWon||GS.InputHelper.keysPressed||!GS.InputHelper.isKeyDown(this.keys.Tab)||(this.uiManager.automap.visible=!this.uiManager.automap.visible,this.uiManager.overrideRedraw=!0,this.graphicsManager.monochromeEnabled=this.uiManager.automap.visible),this.grid.player.dead&&!GS.InputHelper.keysPressed&&GS.InputHelper.isKeyDown(this.keys.Enter)&&this.restartLevel(),this.grid.aiManager.mapWon&&!GS.InputHelper.keysPressed&&GS.InputHelper.isKeyDown(this.keys.Enter)&&void 0!==this.grid.aiManager.script.nextMap&&(this.playerPersistencePackage=this.grid.player.getPersistencePackage(),this.loadLevel(this.grid.aiManager.script.nextMap)),!this.mapWon&&this.grid.aiManager.mapWon&&(this.mapWon=!0,this.onMapWon()),this.grid.aiManager.mapWon||(this.grid.update(),TWEEN.update()),GS.DebugUI.update(),this.uiManager.update()},onMapWon:function(){this.graphicsManager.monochromeEnabled=!1,this.trackMapWonEvent()},trackMapWonEvent:function(){if("undefined"!=typeof ga){var a=this.grid.map.name,b=this.grid.aiManager.timeSpent,c=Math.floor(Math.floor(b)/1e3),d=Math.floor(GS.DebugUI.valueTracking.fps.avg),e=a+" "+c+"s "+d+"fps";ga("send","event","level","complete",e)}},menu:function(){GS.InputHelper.checkPressedKeys(),!GS.InputHelper.keysPressed&&GS.InputHelper.isKeyDown(this.keys.Escape)&&void 0!==this.grid&&this.closeMenu(),this.uiManager.update()},openMenu:function(){this.nextState=GS.GameStates.Menu,void 0!==this.grid&&(this.grid.player.inMenu=!0,this.grid.player.controls.disable(),this.grid.player.controls.detachEvents()),this.graphicsManager.monochromeEnabled=!0,this.uiManager.menuActive=!0,GS.DebugUI.visible=!1},closeMenu:function(){this.nextState=GS.GameStates.Play,void 0!==this.grid?(this.grid.player.inMenu=!1,this.grid.player.controls.attachEvents(),this.grid.player.controls.enable(),this.grid.aiManager.resume(),(this.mapWon||!this.uiManager.automap.visible)&&(this.graphicsManager.monochromeEnabled=!1)):this.graphicsManager.monochromeEnabled=!1,this.uiManager.menuActive=!1,GS.DebugUI.visible=GS.Settings.showHUD},restartLevel:function(){this.nextState=GS.GameStates.Dispose,this.restartedLevel=!0},loadLevel:function(a){this.uiManager.menuActive&&this.closeMenu(),this.mapName=a,this.nextState=GS.GameStates.Dispose},newGame:function(){this.uiManager.menuActive&&this.closeMenu(),this.mapName="airstrip1",this.nextState=GS.GameStates.Dispose},initComponents:function(a){var b=this,c=this.assetLoader.mapLoader.parse(a[GS.AssetTypes.Map][this.mapName]);this.mapWon=!1;var d=new GS.ViewFactory(this.renderer,c,a);d.init();var e=new GS.GridFactory(d,this.soundManager,this.renderer,this.scene,this.camera);this.grid=e.getGrid(c),this.soundManager.initSounds(a[GS.AssetTypes.Sound]),this.musicManager.initTracks(a[GS.AssetTypes.MusicTrack]),void 0!==this.playerPersistencePackage&&(this.grid.player.applyPersistencePackage(this.playerPersistencePackage),this.playerPersistencePackage=void 0),this.grid.update(),this.graphicsManager.setGrid(this.grid),this.grid.player.controls.addEventListener("pointerLockDisabled",function(){b.openMenu()})},update:function(){var a;this.showPerformanceDebugMeters&&(a=window.performance.now()),this.state==GS.GameStates.Dispose?this.updated||(this.updated=!0,this.dispose()):this.state==GS.GameStates.PreLoad?this.updated||(this.updated=!0,this.preLoad()):this.state==GS.GameStates.Loading?this.updated=!0:this.state==GS.GameStates.PostLoad?this.updated||(this.updated=!0,this.postLoad()):this.state==GS.GameStates.Play?(this.updated=!0,this.play()):this.state==GS.GameStates.Menu&&(this.updated=!0,this.menu()),null!==this.nextState&&this.updated&&((this.nextState==GS.GameStates.Play||this.nextState==GS.GameStates.Menu)&&(this.loadingUI.hide(),this.uiManager.show()),this.state=this.nextState,this.nextState=null,this.updated=!1),this.showPerformanceDebugMeters&&(this.updateTime=(window.performance.now()-a).toFixed(2),GS.DebugUI.trackNumericValue("updateTime",this.updateTime))},draw:function(){var a;this.showPerformanceDebugMeters&&(a=window.performance.now()),this.state==GS.GameStates.PreLoad?this.loadingUI.draw():this.state==GS.GameStates.Loading?this.loadingUI.draw():this.state==GS.GameStates.PostLoad?this.loadingUI.draw():(this.state==GS.GameStates.Play||this.state==GS.GameStates.Menu)&&(void 0!==this.grid&&this.graphicsManager.draw(),this.uiManager.draw()),this.showPerformanceDebugMeters&&(this.drawTime=(window.performance.now()-a).toFixed(2),GS.DebugUI.trackNumericValue("drawTime",this.drawTime))},onResize:function(){GS.Base.prototype.onResize.call(this),this.uiManager.onResize(),this.loadingUI.onResize(),void 0!==this.graphicsManager&&this.graphicsManager.onResize(),void 0!==this.grid&&(this.grid.onResize(),this.grid.player.playerView.onResize())},updateFov:function(){this.cameraFov=GS.Settings.fov,this.camera.fov=GS.Settings.fov,this.camera.updateProjectionMatrix(),this.state==GS.GameStates.Play&&this.grid.updateFov()},disposeEnd:function(){TWEEN.removeAll(),this.grid=void 0,this.graphicsManager.reset(),this.scene=void 0,this.uiManager.dispose(),this.nextState=GS.GameStates.PreLoad},dispose:function(){var a=this;void 0!==this.grid?this.grid.player.controls.dispose(function(){a.disposeEnd()}):this.disposeEnd()}});var GAME;window.addEventListener("load",function(){GS.Detector.run(function(){GAME=new GS.Game,GAME.init()})},!1),GS.KeybindSettings={keybinds:[{actionName:"moveForward",controlName:"W",code:87},{actionName:"moveBackward",controlName:"S",code:83},{actionName:"strafeLeft",controlName:"A",code:65},{actionName:"strafeRight",controlName:"D",code:68},{actionName:"use",controlName:"E",code:69},{actionName:"shoot",controlName:"MOUSE LEFT",mouse:!0,button:1},{actionName:"pistol",controlName:"2",code:50},{actionName:"shotgun",controlName:"3",code:51},{actionName:"hyperblaster",controlName:"4",code:52}],init:function(){this.rebound=new GS.Rebound(GS.KeybindSettings.keybinds),this.rebound.init(),GS.Keybinds={};for(var a=0;a<this.keybinds.length;a++){var b=this.keybinds[a];GS.Keybinds[b.actionName]=b}}},GS.Settings=function(){var a={fovMin:60,fovMax:120,fov:75,ssao:!0,bloom:!0,noise:!0,vignette:!0,fxaa:!0,halfSize:!0,showFPS:!0,viewBob:!0,weaponBob:!0,showHUD:!0,showWeapon:!0,soundMin:0,soundMax:10,sound:5,musicMin:0,musicMax:10,music:5,mouseMin:1,mouseMax:10,mouse:5,mouseInvertY:!1,keybinds:null};return{loadSettings:function(){var b=localStorage["gs-settings"];if(void 0!==b){var c=JSON.parse(b);for(var d in c)d in a&&(a[d]=c[d]);c.keybinds&&(GS.KeybindSettings.keybinds=c.keybinds)}GS.KeybindSettings.init(),a.keybinds=GS.KeybindSettings.keybinds},saveSettings:function(){var b=JSON.stringify(a);localStorage["gs-settings"]=b},get fovMin(){return a.fovMin},get fovMax(){return a.fovMax},set fov(b){var c=parseInt(b);isNaN(c)||(c=Math.floor(GS.MathHelper.clamp(c,a.fovMin,a.fovMax)),a.fov=c,GAME.updateFov(),this.saveSettings())},get fov(){return a.fov},set ssao(b){a.ssao=b===!0,GAME.graphicsManager.ssaoEnabled=a.ssao,this.saveSettings()},get ssao(){return a.ssao},set bloom(b){a.bloom=b===!0,GAME.graphicsManager.bloomEnabled=a.bloom,this.saveSettings()},get bloom(){return a.bloom},set noise(b){a.noise=b===!0,GAME.graphicsManager.noiseEnabled=a.noise,this.saveSettings()},get noise(){return a.noise},set vignette(b){a.vignette=b===!0,GAME.graphicsManager.vignetteEnabled=a.vignette,this.saveSettings()},get vignette(){return a.vignette},set fxaa(b){a.fxaa=b===!0,GAME.graphicsManager.fxaaEnabled=a.fxaa,this.saveSettings()},get fxaa(){return a.fxaa},set viewBob(b){a.viewBob=b===!0,this.saveSettings(),void 0!==GAME.grid&&(GAME.grid.player.playerView.viewBob.enabled=a.viewBob)},get viewBob(){return a.viewBob},set weaponBob(b){a.weaponBob=b===!0,this.saveSettings(),void 0!==GAME.grid&&(GAME.grid.player.playerView.weaponBob.enabled=a.weaponBob)},get weaponBob(){return a.weaponBob},set halfSize(b){a.halfSize=b===!0,this.saveSettings(),GAME.graphicsManager.halfSizeEnabled=a.halfSize},get halfSize(){return a.halfSize},set showFPS(b){a.showFPS=b===!0,this.saveSettings(),GAME.showFPS=a.showFPS},get showFPS(){return a.showFPS},get soundMin(){return a.soundMin},get soundMax(){return a.soundMax},set sound(b){var c=parseInt(b);isNaN(c)||(c=Math.floor(GS.MathHelper.clamp(c,a.soundMin,a.soundMax)),a.sound=c,GAME.soundManager.volume=a.sound/10,this.saveSettings())},get sound(){return a.sound},get musicMin(){return a.musicMin},get musicMax(){return a.musicMax},set music(b){var c=parseInt(b);isNaN(c)||(c=Math.floor(GS.MathHelper.clamp(c,a.musicMin,a.musicMax)),a.music=c,GAME.musicManager.volume=a.music/10,this.saveSettings())},get music(){return a.music},get mouseMin(){return a.mouseMin},get mouseMax(){return a.mouseMax},set mouse(b){var c=parseInt(b);isNaN(c)||(c=Math.floor(GS.MathHelper.clamp(c,a.mouseMin,a.mouseMax)),a.mouse=c,void 0!==GAME.grid&&(GAME.grid.player.controls.lookSpeed=.066*(a.mouse/5)),this.saveSettings())},get mouse(){return a.mouse},set showHUD(b){a.showHUD=b===!0,this.saveSettings(),GAME.uiManager.showHUD=a.showHUD,GAME.uiManager.overrideRedraw=!0},get showHUD(){return a.showHUD},set showWeapon(b){a.showWeapon=b===!0,this.saveSettings(),GAME.graphicsManager.showWeapon=a.showWeapon},get showWeapon(){return a.showWeapon},set mouseInvertY(b){a.mouseInvertY=b===!0,this.saveSettings(),void 0!==GAME.grid&&(GAME.grid.player.controls.mouseInvertY=a.mouseInvertY)},get mouseInvertY(){return a.mouseInvertY}}}();